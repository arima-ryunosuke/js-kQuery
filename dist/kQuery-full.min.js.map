{
  "version": 3,
  "sources": ["../src/API.js", "../src/events/attribute.js", "../src/events/child.js", "../src/events/cookie.js", "../src/events/disable.js", "../src/events/flick.js", "../src/events/intersect.js", "../src/events/resize.js", "../src/events/swipe.js", "../src/events/visible.js", "../src/KQuery.js", "../src/plugins/@autoproperties.js", "../src/plugins/@events.js", "../src/plugins/attributes.js", "../src/plugins/data.js", "../src/plugins/dimensions.js", "../src/plugins/effects.js", "../src/plugins/forms.js", "../src/plugins/manipulation.js", "../src/plugins/miscellaneous.js", "../src/plugins/networks.js", "../src/plugins/traversing.js", "../index-full.js"],
  "sourcesContent": ["const GT = globalThis;\n\n/// shortcut\nexport const Nullable = function Nullable() {};\nexport const AsyncFunction = (async () => {}).constructor;\nexport const GeneratorFunction = (function* () {}).constructor;\nexport const AsyncGeneratorFunction = (async function* () {}).constructor;\n\n/// listtype\nexport const $NodeList = function () {\n    return [NodeList.name, HTMLCollection.name];\n};\nexport const $CSSRuleList = function () {\n    return [CSSRuleList.name];\n};\nexport const $FileList = function () {\n    return [FileList.name];\n};\n\n/**\n * functions\n *\n * @ignore\n */\nexport const F = {\n    anyIsPrimitive(value, ...specials) {\n        if (value == null) {\n            return true;\n        }\n        for (const special of specials) {\n            // Object means PlainObject\n            if (special === Object) {\n                if (F.objectIsPlain(value)) {\n                    return true;\n                }\n                continue;\n            }\n            if (value instanceof special) {\n                return true;\n            }\n        }\n        return !['object', 'function'].includes(typeof (value));\n    },\n    anyIsStringable(value) {\n        if (F.anyIsPrimitive(value)) {\n            return true;\n        }\n        return (value?.toString && value.toString !== Object.prototype.toString);\n    },\n    stringToKebabCase(string) {\n        return ('' + string).replaceAll(/([A-Z])/g, (...m) => '-' + m[1].toLowerCase());\n    },\n    stringToPascalCase(string, delimiter) {\n        delimiter ??= '-';\n        const regex = new RegExp(`(\\\\${delimiter}([a-z]))`, 'ig');\n        return ('' + string).replaceAll(regex, (...m) => m[2].toUpperCase());\n    },\n    stringEscape(string, mode) {\n        const htmlTargets = {\n            '&': '&amp;',\n            '\"': '&quot;',\n            \"'\": '&#39;',\n            '<': '&lt;',\n            '>': '&gt;',\n        };\n        string += '';\n        switch (mode) {\n            default:\n                throw new Error(`${mode} is undefied`);\n            case 'attr-name': {\n                const div = document.createElement('div');\n                div.setAttribute(string, '');\n                return div.attributes[0].name;\n            }\n            case 'attr-value': {\n                return string.replace(/[&\"]/g, e => htmlTargets[e]);\n            }\n            case 'content': {\n                return string.replace(/[&<>]/g, e => htmlTargets[e]);\n            }\n            case 'html': {\n                return string.replace(/[&\"'<>]/g, e => htmlTargets[e]);\n            }\n            case 'regex': {\n                return string.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            }\n            case 'css':\n            case 'selector': {\n                return CSS.escape(string);\n            }\n        }\n    },\n    stringQuote(string, mode) {\n        string += '';\n        switch (mode) {\n            default:\n                throw new Error(`${mode} is undefied`);\n            // https://developer.mozilla.org/docs/Web/CSS/url_function#syntax\n            case 'css-url': {\n                // simplified version to save trouble(no handleing \\\\)\n                if (!string.includes('\"')) {\n                    return '\"' + string + '\"';\n                }\n                if (!string.includes(\"'\")) {\n                    return \"'\" + string + \"'\";\n                }\n                return string.replaceAll(/([ '\"()])/g, '\\\\$1');\n            }\n        }\n    },\n    stringUnquote(string, mode) {\n        string += '';\n        switch (mode) {\n            default:\n                throw new Error(`${mode} is undefied`);\n            // https://developer.mozilla.org/docs/Web/CSS/url_function#syntax\n            case 'css-url': {\n                // simplified version to save trouble(no handleing \\\\)\n                if (string.at(0) === '\"' && string.at(-1) === '\"') {\n                    return string.slice(1, -1);\n                }\n                if (string.at(0) === \"'\" && string.at(-1) === \"'\") {\n                    return string.slice(1, -1).replaceAll(/\\\\'/g, \"'\");\n                }\n                return string.replaceAll(/\\\\([ '\"()])/g, '$1');\n            }\n        }\n    },\n    stringIsNaN(string) {\n        return Number.isNaN(parseFloat(string));\n    },\n    stringRender: function () {\n        const cache = {};\n        return function (template, values, tag = null) {\n            const tagFunction = (hashes, ...values) => {\n                return values\n                    .map((value) => {\n                        if (tag == null || value instanceof String) {\n                            return value;\n                        }\n                        // noinspection JSValidateTypes\n                        return tag(value);\n                    })\n                    .map((value, index) => hashes[index] + value)\n                    .concat(hashes.slice(values.length))\n                    .join('');\n            };\n\n            const cachekey = `${tag}\\`${template}\\``;\n            const f = cache[cachekey] ??= new Function('', `return globalThis.$__internalTagFunctions.at(-1)\\`${template}\\`;`);\n\n            GT.$__internalTagFunctions ??= [];\n            GT.$__internalTagFunctions.push(tagFunction);\n            try {\n                return f.call(values);\n            }\n            finally {\n                GT.$__internalTagFunctions.pop();\n            }\n        };\n    }(),\n    objectId: function () {\n        const objectMap = new GT.WeakMap();\n        let objectCounter = 0;\n\n        return function (object) {\n            if (object === null || typeof (object) !== 'object') {\n                return null;\n            }\n            if (!objectMap.has(object)) {\n                objectMap.set(object, ++objectCounter);\n            }\n            return objectMap.get(object);\n        };\n    }(),\n    objectFinalize: function () {\n        const finalizer = new FinalizationRegistry(heldValue => heldValue());\n\n        return function (object, destructor) {\n            finalizer.register(object, destructor, object);\n        };\n    }(),\n    objectIsPlain(object) {\n        if (object == null || typeof (object) !== 'object') {\n            return false;\n        }\n        return object.constructor === Object || object.constructor == null;\n    },\n    /**\n     * check ArraryLike Object\n     *\n     * ArrayLike is:\n     * - property contains 'length' (optional)\n     * - property has consecutive enumerable keys\n     * - 'length' and the keys.length are same\n     *\n     * @param {Object} object\n     * @param {Boolean} [requireLength=true]\n     * @returns {Boolean}\n     */\n    objectIsArrayLike(object, requireLength = true) {\n        // check type\n        if (object instanceof Array) {\n            return true;\n        }\n        if (object == null || typeof (object) !== 'object') {\n            return false;\n        }\n\n        // check empty\n        const keys = Object.keys(object);\n        if (!('length' in object) && keys.length === 0) {\n            return false;\n        }\n\n        // check length\n        const length = object.length ?? (requireLength ? null : keys.length);\n        if (length == null) {\n            return false;\n        }\n\n        // check key length\n        const lengthIndex = keys.indexOf('length');\n        if (lengthIndex !== -1) {\n            keys.splice(lengthIndex, 1);\n        }\n        if (keys.length !== +length) {\n            return false;\n        }\n\n        // check index\n        const indexKeys = keys.map(v => +v);\n        for (let i = 0; i < length; i++) {\n            if (indexKeys[i] !== i) {\n                return false;\n            }\n        }\n        return true;\n    },\n    /**\n     * @param {Object} object\n     * @param {String} [prefix='']\n     * @return {Object<String, String|Boolean>}\n     */\n    objectToAttributes(object, prefix = '') {\n        const result = {};\n\n        for (const [name, value] of F.objectToEntries(object)) {\n            let fullname = prefix ? `${prefix}-${name}` : name;\n            if (fullname.startsWith('data-')) {\n                fullname = F.stringToKebabCase(fullname);\n            }\n\n            if (fullname === 'style' && F.objectIsPlain(value)) {\n                const styles = [];\n                for (const [css, style] of F.objectToEntries(value)) {\n                    styles.push(F.stringToKebabCase(css) + ':' + style);\n                }\n                if (styles.length) {\n                    result[fullname] = styles.join(';') + ';';\n                }\n            }\n            else if (fullname === 'class') {\n                const classes = [];\n                for (const [token, flag] of F.objectToEntries(F.objectToClasses(value))) {\n                    if (flag) {\n                        classes.push(token);\n                    }\n                }\n                if (classes.length) {\n                    result[fullname] = classes.join(' ');\n                }\n            }\n            else if (F.objectIsPlain(value)) {\n                Object.assign(result, F.objectToAttributes(value, name));\n            }\n            else {\n                result[fullname] = value;\n            }\n        }\n\n        return result;\n    },\n    /**\n     * @param {Object} object\n     * @return {Object<String, Boolean>}\n     */\n    objectToClasses(object) {\n        // native can't accept blank characters or spaces, but very inconvenient\n        const normalizeToken = function (token) {\n            return ('' + token).split(' ').filter(t => t.length);\n        };\n\n        const result = {};\n\n        if (object instanceof Array) {\n            for (const token of object) {\n                Object.assign(result, F.objectToClasses(token));\n            }\n        }\n        else if (F.objectIsPlain(object)) {\n            for (const [key, flag] of F.objectToEntries(object)) {\n                for (const token of normalizeToken(key)) {\n                    result[normalizeToken(token)] = !!flag;\n                }\n            }\n        }\n        else {\n            for (const token of normalizeToken(object)) {\n                result[normalizeToken(token)] = true;\n            }\n        }\n\n        return result;\n    },\n    /**\n     * @param {Object} object\n     * @param {String} [prefix='']\n     * @return {Object<String, String>}\n     */\n    objectToDataset(object, prefix = '') {\n        const result = {};\n\n        for (const [name, data] of F.objectToEntries(object)) {\n            const fullname = F.stringToKebabCase(prefix ? `${prefix}-${name}` : name);\n\n            if (F.objectIsPlain(data) || data instanceof Array) {\n                for (const [name2, data2] of F.objectToEntries(F.objectToDataset(data, fullname))) {\n                    result[name2] = data2;\n                }\n                if (data instanceof Array) {\n                    result[fullname + '-length'] = data.length;\n                }\n            }\n            else {\n                result[fullname] = data;\n            }\n        }\n\n        return result;\n    },\n    /**\n     * @param {Object} object\n     * @returns {([any, any])[]}\n     */\n    objectToEntries(object) {\n        // special treats1\n        if (object instanceof NamedNodeMap) {\n            return Array.from(object).map(attr => [attr.name, attr.value]);\n        }\n        // special treats2\n        if (object instanceof CSSStyleDeclaration) {\n            return Array.from(object).map(name => [name, object[name]]);\n        }\n\n        if (!Object.hasOwn(object, 'entries') && typeof (object.entries) === 'function') {\n            return [...object.entries()];\n        }\n\n        if (!Object.hasOwn(object, 'keys') && typeof (object.keys) === 'function') {\n            return [...Array.from(object.keys()).flatMap(e => [[e, object[e]]])];\n        }\n\n        if (!Object.hasOwn(object, 'values') && typeof (object.values) === 'function') {\n            return [...Array.from(object.values()).entries()];\n        }\n\n        if (!Object.hasOwn(object, 'length') && 'length' in object) {\n            return [...Array.from(object).entries()];\n        }\n\n        if (Symbol.iterator in object) {\n            // Symbol.iterator will return key, value or entries, so can't auto detect\n            // e.g. Array is values https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/Symbol.iterator\n            // e.g. Map is [key, value] https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map/Symbol.iterator\n        }\n\n        return Object.entries(object);\n    },\n    /**\n     * @param {Object} object\n     * @param {String} separator\n     * @param {Function|String} [delimiter='=']\n     * @returns {String}\n     */\n    objectJoin(object, separator, delimiter = '=') {\n        const result = [];\n        for (let [key, value] of F.objectToEntries(object)) {\n            if (value === undefined) {\n                continue;\n            }\n\n            if (F.objectIsPlain(value)) {\n                value = F.objectJoin(value, separator, delimiter);\n            }\n\n            if (delimiter instanceof Function) {\n                const entry = delimiter(value, key);\n                if (entry) {\n                    result.push(entry);\n                }\n            }\n            else {\n                result.push(`${key}${delimiter}${value}`);\n            }\n        }\n        return result.join(separator);\n    },\n    objectWalkRecursive(object, callback) {\n        const isAsync = callback instanceof AsyncFunction;\n        const promises = [];\n        for (const [key, value] of F.objectToEntries(object)) {\n            const assign = (v) => object[key] = v;\n            const v = value instanceof Array || F.objectIsPlain(value)\n                ? F.objectWalkRecursive(value, callback)\n                : callback(value, key, object);\n\n            if (isAsync) {\n                promises.push(v.then(assign));\n            }\n            else {\n                assign(v);\n            }\n        }\n        if (isAsync) {\n            return Promise.all(promises).then((dummy) => object);\n        }\n        return object;\n    },\n    iterableToNodeList(iterable) {\n        // https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\n        // > Changing the Prototype of an object is, by the nature of how modern JavaScript engines optimize property accesses, currently a very slow operation in every browser and JavaScript engine.\n        // > In addition, the effects of altering inheritance are subtle and far-flung, and are not limited to the time spent in the Object.setPrototypeOf(...) statement, but may extend to any code that has access to any object whose Prototype has been altered.\n        // > You can read more in JavaScript engine fundamentals: optimizing prototypes.\n        // > Because this feature is a part of the language, it is still the burden on engine developers to implement that feature performantly (ideally).\n        // > Until engine developers address this issue, if you are concerned about performance, you should avoid setting the Prototype of an object.\n        // > Instead, create a new object with the desired Prototype using Object.create().\n        // https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n        // > Note that there are caveats to watch out for using create(), such as re-adding the constructor property to ensure proper semantics.\n        // > Although Object.create() is believed to have better performance than mutating the prototype with Object.setPrototypeOf(), the difference is in fact negligible if no instances have been created and property accesses haven't been optimized yet.\n        // return Object.setPrototypeOf([...iterable], NodeList.prototype);\n\n        if (iterable instanceof NodeList) {\n            Logger.instance.notice(`meaningless call to iterableToNodeList`);\n        }\n\n        let i = 0;\n        const properties = {};\n        for (const property of iterable) {\n            properties[i++] = {\n                value: property,\n                configurable: false,\n                writable: false,\n                enumerable: true,\n            };\n        }\n        properties.length = {\n            value: i,\n            configurable: false,\n            writable: false,\n            enumerable: false,\n        };\n        return Object.create(NodeList.prototype, properties);\n    },\n    arrayLikeToArrayRecursive(object, requireLength = true) {\n        for (const [key, value] of F.objectToEntries(object)) {\n            if (typeof (value) === 'object') {\n                object[key] = F.arrayLikeToArrayRecursive(value, requireLength);\n            }\n        }\n        if (F.objectIsArrayLike(object, requireLength)) {\n            if (requireLength || 'length' in object) {\n                object = Array.from(object);\n            }\n            else {\n                object = Object.values(object);\n            }\n        }\n        return object;\n    },\n    entriesToObject(entries, arrayable) {\n        const result = {};\n        for (const [names, value] of entries) {\n            names.reduce((target, subname, i) => target[subname] ??= i + 1 in names ? {} : value, result);\n        }\n\n        if (arrayable != null) {\n            return F.arrayLikeToArrayRecursive(result, arrayable);\n        }\n\n        return result;\n    },\n    functionIsNative(func) {\n        return Function.prototype.toString.call(func).slice(-15, -2) === '[native code]';\n    },\n    functionToCallbackable(func, callbackThis, ...callbackArgs) {\n        return function (...args) {\n            for (const [i, arg] of args.entries()) {\n                const callback = typeof (arg) === 'function' ? arg : null;\n                if (callback) {\n                    args[i] = callback.call(callbackThis, ...callbackArgs);\n                    if (args[i] === undefined) {\n                        return;\n                    }\n                }\n            }\n            return func.call(this, ...args);\n        };\n    },\n    async fetch(url, options = {}) {\n        if (options.timeout) {\n            const ctrl = new AbortController();\n            setTimeout(() => ctrl.abort(), options.timeout);\n\n            if (options.signal) {\n                options.signal = AbortSignal.any([options.signal, ctrl.signal]);\n            }\n            else {\n                options.signal = ctrl.signal;\n            }\n\n            delete options.timeout;\n        }\n\n        options.headers ??= {};\n        if (!(options.headers instanceof Headers)) {\n            options.headers = new Headers(options.headers);\n        }\n        options.headers.append('X-Requested-With', 'XMLHttpRequest');\n\n        const response = await GT.fetch(url, options);\n        if (!(options.ok ?? false) && !response.ok) {\n            throw new Error(`${response.status}: ${response.statusText}`, {\n                cause: response,\n            });\n        }\n        return response;\n    },\n};\n\n/**\n * Configuration\n *\n * @private\n */\nexport class Configuration {\n    static TRUES = Object.freeze(['true', 'yes', '1']);\n    static instance;\n\n    #source;\n\n    constructor(source) {\n        Configuration.instance = this;\n\n        this.#source = source;\n    }\n\n    configure(defaults, force = false) {\n        for (const [name, value] of Object.entries(defaults)) {\n            if (force || this.#source[name] === undefined) {\n                this[name] = value;\n                continue;\n            }\n\n            if (typeof (value) === 'boolean') {\n                this[name] = Configuration.TRUES.includes(this.#source[name]);\n            }\n            else if (typeof (value) === 'number') {\n                this[name] = +this.#source[name];\n            }\n            else if (typeof (value) === 'string') {\n                this[name] = '' + this.#source[name];\n            }\n            else if (typeof (value) === 'function') {\n                this[name] = value(this.#source[name], name, this.#source);\n            }\n            else {\n                this[name] = JSON.parse(this.#source[name]);\n            }\n        }\n\n        return this;\n    }\n}\n\n/**\n * Logger\n *\n * @private\n */\nexport class Logger {\n    static instance;\n\n    static anyIsInstanceOf(value, prototype) {\n        // same\n        if (value === prototype) {\n            return true;\n        }\n        // nullable\n        if (Nullable === prototype && value == null) {\n            return true;\n        }\n        // Object means PlainObject\n        if (prototype === Object && F.objectIsPlain(value)) {\n            return true;\n        }\n        // standard type(except Object)\n        if (prototype !== Object && typeof (prototype) === 'function' && Object(value) instanceof prototype) {\n            return true;\n        }\n        // Boolean is loosey(allow all scalar)\n        if (prototype === Boolean && F.anyIsPrimitive(value)) {\n            return true;\n        }\n        // Number is loosey(allow numeric string)\n        if (prototype === Number && (Object(value) instanceof prototype || !isNaN(value))) {\n            return true;\n        }\n        // String is loosey(allow contains toString)\n        if (prototype === String && (Object(value) instanceof prototype || (value?.toString && value.toString !== Object.prototype.toString))) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static anyToDisplayName(value) {\n        if (value == null) {\n            return '' + value;\n        }\n        if (typeof (value) === 'function') {\n            return value.name ?? '' + value;\n        }\n        return '' + value;\n    }\n\n    constructor(debug, level, prefix, console) {\n        Logger.instance = this;\n\n        const noop = () => null;\n        const noop2 = () => noop;\n\n        this.error = level < 3 ? noop : console.error.bind(this, prefix);\n        this.warn = level < 4 ? noop : console.warn.bind(this, prefix);\n        this.info = level < 6 ? noop : console.info.bind(this, prefix);\n        this.debug = level < 7 ? noop : console.debug.bind(this, prefix);\n\n        // notice doesn't exist in native, so it is treated as info in debug, warn in no debug\n        this.notice = level < 5 ? noop : debug ? console.warn.bind(this, prefix) : console.info.bind(this, prefix);\n\n        this.time = level < 7 ? noop : label => console.time.call(this, `${prefix} ${label}`);\n        this.timeEnd = level < 7 ? noop : label => console.timeEnd.call(this, `${prefix} ${label}`);\n\n        this.assert = !debug ? noop2 : (actual, ...others) => {\n            if (actual instanceof Function) {\n                others.unshift('' + actual);\n                actual = actual();\n            }\n            return console.assert.bind(this, actual, prefix, ...others);\n        };\n        this.assertInstanceOf = !debug ? noop2 : (actual, ...expecteds) => {\n            for (const expected of expecteds) {\n                if (Logger.anyIsInstanceOf(actual, expected)) {\n                    return noop;\n                }\n            }\n            return console.assert.bind(this, false, prefix, `${Logger.anyToDisplayName(actual)} type must be ${expecteds.map(Logger.anyToDisplayName).join('|')}`);\n        };\n        this.assertElementsInstanceOf = !debug ? noop2 : (actual, ...expecteds) => {\n            for (const expected of expecteds) {\n                if (Object.values(actual).every(v => Logger.anyIsInstanceOf(v, expected))) {\n                    return noop;\n                }\n            }\n            return console.assert.bind(this, false, prefix, `${Logger.anyToDisplayName(actual)} type must be ${expecteds.map(Logger.anyToDisplayName).join('|')}`);\n        };\n        this.assertElementOf = !debug ? noop2 : (actual, ...expecteds) => {\n            for (const expected of expecteds) {\n                if (expected.includes(actual)) {\n                    return noop;\n                }\n            }\n            return console.assert.bind(this, false, prefix, `${Logger.anyToDisplayName(actual)} must be one of ${expecteds.map(Logger.anyToDisplayName).join('|')}`);\n        };\n        this.assertElementsOf = !debug ? noop2 : (actual, ...expecteds) => {\n            for (const expected of expecteds) {\n                if (Object.values(actual).every(v => expected.includes(v))) {\n                    return noop;\n                }\n            }\n            return console.assert.bind(this, false, prefix, `${Logger.anyToDisplayName(actual)} must be one of ${expecteds.map(Logger.anyToDisplayName).join('|')}`);\n        };\n    }\n}\n\n/**\n * Node Collection\n *\n * @private\n */\nexport class Collection extends null {\n    constructor(array, name, ancestor) {\n        ancestor ??= array;\n        const collection = Object.defineProperties(() => {}, {\n            name: {value: `Collection of ${name}`},\n            length: {value: array.length},\n        });\n        if (Configuration.instance.debug) {\n            // for devtools console\n            array.forEach((e, i) => collection[i] = e);\n        }\n\n        return new Proxy(collection, {\n            has(target, property) {\n                if (property in array) {\n                    return Reflect.has(array, property);\n                }\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                }\n\n                return array.some(e => Reflect.has(e, property));\n            },\n            get(target, property) {\n                if (property in array) {\n                    return Reflect.get(array, property);\n                }\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                }\n\n                // emulate toString\n                if (property === Symbol.toPrimitive) {\n                    return (hint) => array.map(e => F.anyIsPrimitive(e, Array) ? e : Reflect.get(e, property)?.call(e, hint)).join();\n                }\n\n                const mapped = array.map(e => F.anyIsPrimitive(e, Array) ? e : Reflect.get(e, property));\n                if (mapped.every(e => F.anyIsPrimitive(e, Object, Array))) {\n                    return mapped;\n                }\n                return new Collection(mapped, `${name}.${property}`, ancestor);\n            },\n            set(target, property, value) {\n                if (property in array) {\n                    return Reflect.set(array, property, value);\n                }\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                }\n\n                array.forEach((e, i) => F.functionToCallbackable(v => Reflect.set(e, property, v), e, ancestor?.[i], i)(value));\n                return true;\n            },\n            deleteProperty(target, property) {\n                if (property in array) {\n                    return Reflect.deleteProperty(array, property);\n                }\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                }\n\n                array.forEach(e => Reflect.deleteProperty(e, property));\n                return true;\n            },\n            apply(target, thisArg, argArray) {\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                    return [];\n                }\n\n                // method mode\n                if (array.some(e => typeof (e) === 'function')) {\n                    let emptyFlag = false;\n                    let undefinedFlag = true;\n                    let primitiveFlag = true;\n                    let sameFlag = true;\n                    let promiseFlag = false;\n\n                    const results = array.map((e, i) => {\n                        if (typeof (e) === 'function') {\n                            if (e instanceof Proxy && argArray.length === 0) {\n                                emptyFlag = true;\n                                return;\n                            }\n\n                            if (!(e instanceof Proxy)) {\n                                e.i = i;\n                            }\n                            const result = Reflect.apply(e, thisArg?.[i], argArray);\n\n                            undefinedFlag = undefinedFlag && result === undefined;\n                            primitiveFlag = primitiveFlag && F.anyIsPrimitive(result, Object, Array);\n                            sameFlag = sameFlag && result === ancestor?.[i];\n                            promiseFlag = promiseFlag || result instanceof GT.Promise;\n                            return result;\n                        }\n                    });\n\n                    if (emptyFlag) {\n                        return array;\n                    }\n                    if (undefinedFlag) {\n                        return thisArg;\n                    }\n                    if (primitiveFlag) {\n                        return results;\n                    }\n                    if (sameFlag) {\n                        return ancestor;\n                    }\n                    if (promiseFlag) {\n                        return GT.Promise.all(results);\n                    }\n\n                    return new Collection(results, `${name}()`, ancestor);\n                }\n\n                // getter mode\n                if (argArray.length === 0) {\n                    return array;\n                }\n\n                // setter mode\n                if (argArray.length === 1) {\n                    // reserved\n                }\n\n                Logger.instance.error(`apply called, but not a single case was executed`, target);\n            },\n        });\n    }\n}\n\n/**\n * WeakMap\n *\n * - iterable and size\n * - utility(e.g. getOrSet)\n *\n * @private\n */\nexport class WeakMap {\n    constructor() {\n        this.map = new GT.Map();\n    }\n\n    has(key) {\n        return this.map.has(F.objectId(key));\n    }\n\n    get(key) {\n        return this.map.get(F.objectId(key))?.value;\n    }\n\n    getOrSet(key, provider) {\n        if (!this.has(key)) {\n            this.set(key, provider(key));\n        }\n        return this.get(key);\n    }\n\n    set(key, value) {\n        return this.map.set(F.objectId(key), {\n            ref: new WeakRef(key),\n            value: value,\n        });\n    }\n\n    reset(key, converter) {\n        const oldValue = this.get(key);\n        this.set(key, converter(oldValue));\n        return oldValue;\n    }\n\n    delete(key) {\n        return this.map.delete(F.objectId(key));\n    }\n\n    clear() {\n        return this.map.clear();\n    }\n\n    * entries() {\n        for (const obj of this.map.values()) {\n            const object = obj.ref.deref();\n            if (object === undefined) {\n                this.map.delete(object);\n                continue;\n            }\n            yield [object, obj.value];\n        }\n    }\n\n    get size() {\n        return [...this.entries()].length;\n    }\n}\n\n/**\n * ObjectStorage\n *\n * - multivalue map based on key-value object\n *\n * @private\n */\nexport class ObjectStorage {\n    constructor() {\n        this.weakmap = new WeakMap();\n    }\n\n    has(key, subkey) {\n        if (subkey == null) {\n            return this.weakmap.has(key);\n        }\n        const object = this.weakmap.get(key) ?? {};\n        return subkey in object;\n    }\n\n    get(key, subkey) {\n        if (subkey == null) {\n            return this.weakmap.get(key) ?? {};\n        }\n        const object = this.weakmap.get(key) ?? {};\n        return object?.[subkey];\n    }\n\n    getOrSet(key, subkey, provider) {\n        if (!this.has(key, subkey)) {\n            this.set(key, subkey, provider(key, subkey));\n        }\n        return this.get(key, subkey);\n    }\n\n    set(key, subkey, value) {\n        if (subkey == null) {\n            return this.weakmap.set(key, value);\n        }\n        const object = this.weakmap.get(key) ?? {};\n        object[subkey] = value;\n        return this.weakmap.set(key, object);\n    }\n\n    reset(key, subkey, converter) {\n        const oldValue = this.get(key, subkey);\n        this.set(key, subkey, converter(oldValue));\n        return oldValue;\n    }\n\n    delete(key, subkey) {\n        if (subkey == null) {\n            return this.weakmap.delete(key);\n        }\n        const object = this.weakmap.get(key) ?? {};\n        delete object[subkey];\n        if (!Object.keys(object).length) {\n            return this.weakmap.delete(key);\n        }\n        return false;\n    }\n\n    clear() {\n        return this.weakmap.clear();\n    }\n\n    * entries() {\n        yield* this.weakmap.entries();\n    }\n\n    get size() {\n        return this.weakmap.size;\n    }\n}\n\n/**\n * Promise\n *\n * - cancelable from external\n *\n * @private\n */\nexport class Promise extends GT.Promise {\n    static resolvedReasonSymbol = Symbol('resolved');\n\n    static #concurrency(asyncs, throwable, concurrency = null) {\n        Logger.instance.assertElementsInstanceOf(asyncs, Function, AsyncFunction)();\n\n        concurrency ??= window.navigator.hardwareConcurrency;\n\n        const keys = F.objectToEntries(asyncs).map(([k]) => k);\n\n        let index = 0;\n        const result = asyncs instanceof Array ? new Array(asyncs.length) : {};\n        const execute = async function (key) {\n            index++;\n            try {\n                result[key] = await asyncs[key](key);\n            }\n            catch (e) {\n                if (throwable) {\n                    throw e;\n                }\n                else {\n                    result[key] = e;\n                }\n            }\n\n            const next = keys[index];\n            if (next && asyncs[next] != null) {\n                return execute(next);\n            }\n        };\n\n        const promises = [];\n        for (const key of keys.slice(0, concurrency)) {\n            promises.push(execute(key));\n        }\n\n        return [promises, result];\n    }\n\n    static async concurrencyAll(asyncs, concurrency = null) {\n        const [promises, result] = Promise.#concurrency(asyncs, true, concurrency);\n        await Promise.all(promises);\n        return result;\n    }\n\n    static async concurrencyAllSettled(asyncs, concurrency = null) {\n        const [promises, result] = Promise.#concurrency(asyncs, false, concurrency);\n        await Promise.allSettled(promises);\n        return result;\n    }\n\n    constructor(callback) {\n        let resolve, reject;\n        super((resolve2, reject2) => {\n            resolve = resolve2;\n            reject = reject2;\n        });\n\n        const resolve2 = (v) => {\n            this.status = 'fulfilled';\n            resolve(v);\n        };\n        const reject2 = (v) => {\n            this.status = 'rejected';\n            reject(v);\n        };\n        const controller = new AbortController();\n        controller.signal.addEventListener('abort', (e) => {\n            if (e.target.reason === Promise.resolvedReasonSymbol) {\n                resolve2(this.resolved);\n            }\n            else {\n                reject2(e.target.reason);\n            }\n        });\n        callback(resolve2, reject2);\n\n        this.controller = controller;\n        this.resolved = null;\n        this.status = 'pending';\n    }\n\n    cancel(resolved) {\n        this.resolved = resolved;\n        this.controller.abort(Promise.resolvedReasonSymbol);\n    }\n\n    abort(reason) {\n        this.controller.abort(reason);\n    }\n}\n\n/**\n * FileReader\n *\n * - promisable\n *\n * @private\n */\nexport class FileReader extends GT.FileReader {\n    promise() {\n        return new Promise((resolve, reject) => {\n            this.addEventListener('load', e => resolve(e.target.result));\n            this.addEventListener('error', e => reject(e.target.error));\n        });\n    }\n}\n\n/**\n * Proxy\n *\n * - enable instanceof\n *\n * @private\n */\nexport class Proxy extends null {\n    static instances = new WeakSet();\n\n    static [Symbol.hasInstance](instance) {\n        return Proxy.instances.has(instance);\n    }\n\n    constructor(object, handlers) {\n        const instance = new GT.Proxy(object, handlers);\n        Proxy.instances.add(instance);\n        return instance;\n    }\n}\n\n/**\n * Timer\n *\n * - eventable\n * - resolvable/rejectable wait\n *\n * @private\n */\nexport class Timer extends EventTarget {\n    constructor() {\n        super();\n\n        this.id = null;\n        this.millisecond = null;\n    }\n\n    static wait(millisecond) {\n        const timer = new this();\n        return new Promise((resolve, reject) => {\n            timer.addEventListener('alarm', e => resolve(Date.now() - e.detail.time));\n            timer.start(millisecond);\n        }).finally(() => timer.stop());\n    }\n\n    start(millisecond, repeat = 1) {\n        Logger.instance.assert(this.id === null, `Timer is started, please use restart`)();\n\n        this.millisecond = millisecond;\n\n        const start = (tick, time) => {\n            this.id = setTimeout(() => {\n                this.dispatchEvent(new CustomEvent('alarm', {\n                    detail: {\n                        id: this.id,\n                        tick: tick,\n                        time: time,\n                    },\n                }));\n                if (tick < repeat) {\n                    start(tick + 1, Date.now());\n                }\n            }, this.millisecond);\n        };\n        start(1, Date.now());\n    }\n\n    restart(millisecond, repeat) {\n        this.stop();\n        return this.start(millisecond, repeat);\n    }\n\n    stop() {\n        clearTimeout(this.id);\n        this.id = null;\n    }\n}\n\n/**\n * Options\n *\n * - fixed key\n * - defaultable\n *\n * @private\n */\nexport class Options {\n    constructor(defaultOptions, handleNull = false, handleUndefined = false) {\n        this.options = defaultOptions;\n        this.handleNull = handleNull;\n        this.handleUndefined = handleUndefined;\n    }\n\n    extends(otherOptions) {\n        return new Options(Object.assign({}, this.options, otherOptions), this.handleNull, this.handleUndefined);\n    }\n\n    merge(otherOptions) {\n        const options = {};\n        for (const key of Object.keys(this.options)) {\n            if (this.handleNull && key in otherOptions && otherOptions[key] === null) {\n                options[key] = otherOptions[key];\n            }\n            else if (this.handleUndefined && key in otherOptions && otherOptions[key] === undefined) {\n                options[key] = otherOptions[key];\n            }\n            else {\n                options[key] = otherOptions[key] ?? this.options[key];\n            }\n        }\n        return options;\n    }\n}\n\n/**\n * Timer base Observer\n *\n * @private\n */\nexport class TimerObserver {\n    static observers = new GT.Set();\n    static timer = new Timer();\n\n    static defaultOptions = new Options({\n        interval: 1000,\n    });\n\n    constructor(callback, options = {}) {\n        this.options = TimerObserver.defaultOptions.merge(options);\n        this.observedNodes = new ObjectStorage();\n        this.callback = (e) => {\n            const entries = [];\n            for (const [target, value] of this.observedNodes.entries()) {\n                const news = this._data(target);\n                const diffs = this._compare(value.data, news);\n                this.observedNodes.set(target, 'data', news);\n                for (const diff of diffs) {\n                    entries.push(Object.assign(diff, {\n                        target: target,\n                        time: e.timeStamp,\n                    }));\n                }\n            }\n\n            for (const entry of entries) {\n                callback(entry, this.observedNodes.reset(entry.target, 'last', () => entry));\n            }\n        };\n\n        TimerObserver.timer.addEventListener('alarm', this.callback);\n    }\n\n    _data(target) {}\n\n    _compare(data1, data2) {}\n\n    observe(target) {\n        this.observedNodes.set(target, 'data', this._data(target));\n\n        TimerObserver.timer.restart(Math.min(TimerObserver.timer.millisecond ?? this.options.interval, this.options.interval), Infinity);\n        TimerObserver.observers.add(this);\n    }\n\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        if (this.observedNodes.size === 0) {\n            this.disconnect();\n        }\n    }\n\n    disconnect() {\n        this.observedNodes.clear();\n\n        TimerObserver.timer.removeEventListener('alarm', this.callback);\n        TimerObserver.observers.delete(this);\n        if (TimerObserver.observers.size === 0) {\n            TimerObserver.timer.stop();\n        }\n    }\n\n    entries() {\n        return this.observedNodes.entries();\n    }\n}\n\n/**\n * Cookie Observer\n *\n * @private\n */\nexport class CookieObserver extends TimerObserver {\n    static defaultOptions = TimerObserver.defaultOptions.extends({\n        cookieName: undefined,\n    });\n\n    static getOptionsKey(options) {\n        return JSON.stringify(this.defaultOptions.merge(options));\n    }\n\n    constructor(callback, options = {}) {\n        super(callback, options);\n\n        this.options = CookieObserver.defaultOptions.merge(options);\n    }\n\n    _data(target) {\n        return {\n            cookie: target.cookie,\n            cookies: Object.fromEntries(target.cookie.split('; ').map(v => v.split(/=(.*)/s).map(decodeURIComponent))),\n        };\n    }\n\n    _compare(data1, data2) {\n        if (data1.cookie === data2.cookie) {\n            return [];\n        }\n\n        const names = new Set();\n        Object.keys(data1.cookies).forEach(name => names.add(name));\n        Object.keys(data2.cookies).forEach(name => names.add(name));\n\n        const diffs = [];\n        for (const name of names.values()) {\n            if (this.options.cookieName == null || this.options.cookieName.includes(name)) {\n                const oldValue = data1.cookies[name];\n                const newValue = data2.cookies[name];\n                if (oldValue !== newValue) {\n                    diffs.push({\n                        cookieName: name,\n                        oldValue: oldValue,\n                        newValue: newValue,\n                    });\n                }\n            }\n        }\n        return diffs;\n    }\n}\n\n/**\n * MutationObserver\n *\n * - common options\n * - provide last entry\n * - unobservable\n * - iterable\n *\n * @private\n */\nexport class MutationObserver extends GT.MutationObserver {\n    static defaultOptions = new Options({\n        attributes: undefined,\n        attributeFilter: undefined,\n        attributeOldValue: undefined,\n        characterData: undefined,\n        characterDataOldValue: undefined,\n        childList: undefined,\n        subtree: undefined,\n    });\n\n    static getOptionsKey(options) {\n        return JSON.stringify(this.defaultOptions.merge(options));\n    }\n\n    constructor(callback, options = {}) {\n        super(function (entries) {\n            for (const entry of entries) {\n                callback(entry, this.observedNodes.reset(entry.target, () => entry));\n            }\n        });\n\n        this.options = MutationObserver.defaultOptions.merge(options);\n        this.observedNodes = new WeakMap();\n    }\n\n    observe(target) {\n        this.observedNodes.set(target, null);\n        return super.observe(target, this.options);\n    }\n\n    unobserve(target) {\n        super.disconnect();\n        for (const [node] of this.observedNodes.entries()) {\n            if (node === target) {\n                this.observedNodes.delete(node);\n            }\n            else {\n                this.observe(node, this.options);\n            }\n        }\n    }\n\n    disconnect() {\n        this.observedNodes.clear();\n        return super.disconnect();\n    }\n\n    entries() {\n        return this.observedNodes.entries();\n    }\n}\n\n/**\n * ResizeObserver\n *\n * - common options\n * - provide last entry\n * - iterable\n *\n * @private\n */\nexport class ResizeObserver extends GT.ResizeObserver {\n    static defaultOptions = new Options({\n        box: undefined,\n    });\n\n    static getOptionsKey(options) {\n        return JSON.stringify(this.defaultOptions.merge(options));\n    }\n\n    constructor(callback, options = {}) {\n        super(function (entries) {\n            for (const entry of entries) {\n                callback(entry, this.observedNodes.reset(entry.target, () => entry));\n            }\n        }, options);\n\n        this.options = ResizeObserver.defaultOptions.merge(options);\n        this.observedNodes = new WeakMap();\n    }\n\n    observe(target) {\n        this.observedNodes.set(target, null);\n        return super.observe(target, this.options);\n    }\n\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        return super.unobserve(target);\n    }\n\n    disconnect() {\n        this.observedNodes.clear();\n        return super.disconnect();\n    }\n\n    entries() {\n        return this.observedNodes.entries();\n    }\n}\n\n/**\n * IntersectionObserver\n *\n * - provide last entry\n * - iterable\n *\n * @private\n */\nexport class IntersectionObserver extends GT.IntersectionObserver {\n    static defaultOptions = new Options({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n    });\n\n    static getOptionsKey(options) {\n        // new, because need for normalizing property\n        const observer = new GT.IntersectionObserver(() => {}, options);\n        const keyObject = {\n            root: observer.root,\n            rootMargin: observer.rootMargin,\n            threshold: observer.thresholds,\n        };\n        keyObject.root = F.objectId(keyObject.root);\n        return JSON.stringify(keyObject);\n    }\n\n    constructor(callback, options = {}) {\n        options = IntersectionObserver.defaultOptions.merge(options);\n        super(function (entries) {\n            for (const entry of entries) {\n                // occasionally {intersectionRatio:0, isIntersecting:true}, What does that mean?\n                // probably truncation due to error, but perfect zero is not convenient and will be rectified\n                entry.realIntersectionRatio = entry.intersectionRatio;\n                if (entry.realIntersectionRatio === 0 && entry.isIntersecting) {\n                    entry.realIntersectionRatio = Number.EPSILON;\n                }\n                callback(entry, this.observedNodes.reset(entry.target, () => entry));\n            }\n        }, options);\n\n        this.options = options;\n        this.observedNodes = new WeakMap();\n    }\n\n    observe(target) {\n        this.observedNodes.set(target, null);\n        return super.observe(target);\n    }\n\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        return super.unobserve(target);\n    }\n\n    disconnect() {\n        this.observedNodes.clear();\n        return super.disconnect();\n    }\n\n    entries() {\n        return this.observedNodes.entries();\n    }\n}\n\n/**\n * CustomEvent\n *\n * @private\n */\nexport class CustomEvent extends GT.CustomEvent {\n    constructor(type, options) {\n        super(type, options);\n\n        this.$original = options.$original;\n    }\n}\n\n/**\n * DOMPoint with timestamp\n *\n * @private\n */\nexport class Vector2 extends DOMPoint {\n    constructor(x, y, t) {\n        super(x, y);\n        this.t = t;\n    }\n\n    during(target) {\n        return target.t - this.t;\n    }\n\n    deltaX(target) {\n        return target.x - this.x;\n    }\n\n    deltaY(target) {\n        return target.y - this.y;\n    }\n\n    distance(target) {\n        return Math.sqrt(this.deltaX(target) ** 2 + this.deltaY(target) ** 2);\n    }\n\n    degree(target) {\n        let degree = Math.atan2(this.deltaY(target), this.deltaX(target)) * (180 / Math.PI) + 90;\n        if (degree < 0) {\n            degree += 360;\n        }\n        return degree;\n    }\n\n    velocity(target) {\n        return this.distance(target) / this.during(target);\n    }\n}\n", "import {F, MutationObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        // attribute: https://developer.mozilla.org/docs/Web/API/MutationObserver\n        if (options.attributeName) {\n            options.attributeFilter = F.objectIsArrayLike(options.attributeName) ? options.attributeName : [options.attributeName];\n        }\n        options = Object.assign(options, {\n            attributes: true,\n            attributeOldValue: true,\n        });\n        this.eventId = MutationObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new MutationObserver((entry, last) => {\n            trigger(entry.target, {\n                subtype: entry.attributeName,\n                oldValue: entry.oldValue,\n                newValue: entry.target.getAttribute(entry.attributeName),\n            }, {\n                $original: {\n                    observer: this.observer,\n                    entry: entry,\n                },\n            });\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {MutationObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        const withAttributes = options.attributes;\n        options = Object.assign(options, {\n            childList: true,\n            attributes: false,\n        });\n        this.eventId = MutationObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new MutationObserver((entry, last) => {\n            for (const child of entry.addedNodes) {\n                if (!(child instanceof Element)) {\n                    continue;\n                }\n                trigger(entry.target, {\n                    subtype: 'insert',\n                    node: child,\n                }, {\n                    $original: {\n                        observer: this.observer,\n                        entry: entry,\n                    },\n                });\n                this.constructor.observers['attribute' + this.eventId]?.observe?.(child);\n            }\n            for (const child of entry.removedNodes) {\n                if (!(child instanceof Element)) {\n                    continue;\n                }\n                trigger(entry.target, {\n                    subtype: 'remove',\n                    node: child,\n                }, {\n                    $original: {\n                        observer: this.observer,\n                        entry: entry,\n                    },\n                });\n                this.constructor.observers['attribute' + this.eventId]?.unobserve?.(child);\n            }\n        }, options);\n        if (withAttributes) {\n            this.attributer = this.constructor.observers['attribute' + this.eventId] ??= new MutationObserver((entry, last) => {\n                trigger(entry.target.parentElement, {\n                    subtype: 'change',\n                    node: entry.target,\n                    name: entry.attributeName,\n                    oldValue: entry.oldValue,\n                    newValue: entry.target.getAttribute(entry.attributeName),\n                }, {\n                    $original: {\n                        observer: this.attributer,\n                        entry: entry,\n                    },\n                });\n            }, {\n                subtree: options.subtree,\n                childList: false,\n                attributes: true,\n                attributeOldValue: true,\n            });\n        }\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {CookieObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        this.eventId = CookieObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new CookieObserver((entry, last) => {\n            trigger(entry.target, {\n                subtype: entry.cookieName,\n                oldValue: entry.oldValue,\n                newValue: entry.newValue,\n            }, {\n                $original: {\n                    observer: this.observer,\n                    entry: entry,\n                },\n\n                bubbles: false,\n                cancelable: false,\n                composed: false,\n            });\n        }, options);\n        this.observer.observe(target);\n    }\n\n    destructor(target) {\n        this.observer.unobserve(target);\n    }\n}\n", "import {MutationObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        options = Object.assign(options, {\n            attributes: true,\n            attributeOldValue: true,\n            attributeFilter: ['disabled'],\n        });\n        this.eventId = MutationObserver.getOptionsKey(options);\n        this.selector = selector ? `${selector}, fieldset` : null;\n        this.observer = this.constructor.observers[selector + this.eventId] ??= new MutationObserver((entry, last) => {\n            const trigger2 = (target) => {\n                const valuer = function (target, withSelf) {\n                    for (let node = target; node != null; node = node.parentElement) {\n                        if (withSelf && node === entry.target) {\n                            if (entry.oldValue != null) {\n                                return true;\n                            }\n                        }\n                        else if (node.disabled) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n\n                const oldValue = valuer(target, true);\n                const newValue = valuer(target, false);\n                if (oldValue !== newValue) {\n                    trigger(target, {\n                        subtype: oldValue ? 'enable' : 'disable',\n                        oldValue: oldValue,\n                        newValue: newValue,\n                    }, {\n                        $original: {\n                            observer: this.observer,\n                            entry: entry,\n                        },\n                    });\n                }\n            };\n\n            if (!selector || entry.target.matches(selector)) {\n                trigger2(entry.target);\n            }\n            if (selector) {\n                entry.target.querySelectorAll(selector).forEach(node => trigger2(node));\n            }\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {Vector2} from '../API.js';\n\nexport default class {\n    constructor(target, selector, options, trigger) {\n        options.buttons ??= 1;\n        this.starting = false;\n        this.vectors = [];\n\n        this.down = (e) => {\n            e.target.setPointerCapture(e.pointerId);\n\n            this.starting = true;\n            this.vectors.splice(0);\n        };\n        this.move = (e) => {\n            if ((e.buttons & options.buttons) && this.starting) {\n                this.vectors.push(new Vector2(e.offsetX, e.offsetY, e.timeStamp));\n            }\n        };\n        this.up = (e) => {\n            e.target.releasePointerCapture(e.pointerId);\n\n            if (this.starting) {\n                this.starting = false;\n                if (this.vectors.length === 0) {\n                    return;\n                }\n\n                const threshold = options.threshold ?? 50;\n\n                const currentVenctor = new Vector2(e.offsetX, e.offsetY, e.timeStamp);\n                const startIndex = 1 + this.vectors.findLastIndex((v) => v.during(currentVenctor) > threshold);\n                const firstVector = this.vectors[startIndex];\n\n                const vectors = this.vectors.slice(startIndex);\n                const distance = vectors.slice(0, -1).reduce((acc, v, i) => acc + vectors[i].distance(vectors[i + 1]), 0);\n                if (distance === 0) {\n                    return;\n                }\n\n                this.vectors.splice(0);\n                trigger(e.target, {\n                    velocity: distance / firstVector.during(currentVenctor),\n                    degree: firstVector.degree(currentVenctor),\n                    during: firstVector.during(currentVenctor),\n                }, {$original: e, bubbles: true});\n            }\n        };\n        this.cancel = (e) => {\n            e.target.releasePointerCapture(e.pointerId);\n\n            this.starting = false;\n            this.vectors.splice(0);\n        };\n\n        target.addEventListener('pointerdown', this.down);\n        target.addEventListener('pointercancel', this.cancel);\n        target.addEventListener('pointermove', this.move);\n        target.addEventListener('pointerup', this.up);\n    }\n\n    destructor(target) {\n        target.removeEventListener('pointerdown', this.down);\n        target.removeEventListener('pointercancel', this.cancel);\n        target.removeEventListener('pointermove', this.move);\n        target.removeEventListener('pointerup', this.up);\n    }\n}\n", "import {IntersectionObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        // intersect: https://developer.mozilla.org/docs/Web/API/Intersection_Observer_API\n        options.first ??= true;\n        this.eventId = IntersectionObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new IntersectionObserver((entry, last) => {\n            if (options.first || last) {\n                const subtype = last ? !last.isIntersecting && entry.isIntersecting ? 'enter' : last.isIntersecting && !entry.isIntersecting ? 'leave' : 'hover' : null;\n                trigger(entry.target, {\n                    subtype: subtype, oldValue: last?.realIntersectionRatio ?? null, newValue: entry.realIntersectionRatio,\n                }, {\n                    $original: {\n                        observer: this.observer, entry: entry,\n                    },\n                });\n            }\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node), delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {F, ResizeObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        // https://developer.mozilla.org/docs/Web/API/Resize_Observer_API\n        options.first ??= true;\n        this.eventId = ResizeObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new ResizeObserver((entry, last) => {\n            if (options.first || last) {\n                const optionsBoxPascalCaseSize = F.stringToPascalCase(options.box ?? 'content-box', '-') + 'Size';\n                trigger(entry.target, {\n                    subtype: options.box ?? 'content-box',\n                    // in most use cases, what is needed is [0]\n                    oldValue: last == null ? null : last[optionsBoxPascalCaseSize][0],\n                    newValue: entry[optionsBoxPascalCaseSize][0],\n                }, {\n                    $original: {\n                        observer: this.observer,\n                        entry: entry,\n                    },\n                });\n            }\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {Vector2} from '../API.js';\n\nexport default class {\n    constructor(target, selector, options, trigger) {\n        options.buttons ??= 1;\n        this.firstVector = null;\n\n        this.down = (e) => {\n            e.target.setPointerCapture(e.pointerId);\n\n            this.firstVector = new Vector2(e.offsetX, e.offsetY, e.timeStamp);\n        };\n        this.move = (e) => {\n            if ((e.buttons & options.buttons) && this.firstVector) {\n                const currentVector = new Vector2(e.offsetX, e.offsetY, e.timeStamp);\n                const distance = this.firstVector.distance(currentVector);\n                if (distance !== 0) {\n                    trigger(e.target, {\n                        distance: distance,\n                        deltaX: this.firstVector.deltaX(currentVector),\n                        deltaY: this.firstVector.deltaY(currentVector),\n                        velocity: this.firstVector.velocity(currentVector),\n                        degree: this.firstVector.degree(currentVector),\n                        during: this.firstVector.during(currentVector),\n                    }, {$original: e, bubbles: true});\n                }\n            }\n        };\n        this.up = (e) => {\n            e.target.releasePointerCapture(e.pointerId);\n\n            this.firstVector = null;\n        };\n        this.cancel = (e) => {\n            e.target.releasePointerCapture(e.pointerId);\n\n            this.firstVector = null;\n        };\n\n        target.addEventListener('pointerdown', this.down);\n        target.addEventListener('pointermove', this.move);\n        target.addEventListener('pointerup', this.up);\n        target.addEventListener('pointercancel', this.cancel);\n    }\n\n    destructor(target) {\n        target.removeEventListener('pointerdown', this.down);\n        target.removeEventListener('pointermove', this.move);\n        target.removeEventListener('pointerup', this.up);\n        target.removeEventListener('pointercancel', this.cancel);\n    }\n}\n", "import {ResizeObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        // https://developer.mozilla.org/docs/Web/API/Resize_Observer_API\n        options.first ??= true;\n        this.eventId = ResizeObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new ResizeObserver((entry, last) => {\n            // not triggered on style changed\n            // const visible = entry.target.checkVisibility(options);\n            const visible = entry.contentRect.x > 0 || entry.contentRect.y > 0 || entry.contentRect.width > 0 || entry.contentRect.height > 0;\n\n            if (options.first || last) {\n                if (visible !== last?.visible) {\n                    trigger(entry.target, {\n                        subtype: 'content-visibility', // if found better way, support also opacity, visibility, etc\n                        oldValue: last == null ? null : !visible,\n                        newValue: visible,\n                    }, {\n                        $original: {\n                            observer: this.observer,\n                            entry: entry,\n                        },\n                    });\n                }\n            }\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import * as API from './API.js';\n\n/**\n * KQuery\n *\n * @private\n */\nexport class KQuery {\n    constructor(meta) {\n        const kQuery = this;\n\n        // for development script browser plugin\n        this.API = API;\n\n        // config\n        this.config = new API.Configuration((function () {\n            if (API.F.objectIsPlain(meta) && !meta.url) {\n                return meta;\n            }\n\n            const result = {};\n            if (meta.url || meta.src) {\n                for (const [key, value] of new URL(meta.url || meta.src).searchParams.entries()) {\n                    if (key.startsWith('kQuery-')) {\n                        result[key.substring('kQuery-'.length)] = value;\n                    }\n                }\n            }\n            if (meta instanceof HTMLScriptElement) {\n                for (const [key, value] of API.F.objectToEntries(meta.dataset)) {\n                    if (key.startsWith('kquery')) {\n                        const key2 = key.substring('kquery'.length);\n                        result[key2.charAt(0).toLowerCase() + key2.substring(1)] = value;\n                    }\n                }\n            }\n            return result;\n        })());\n\n        // default configure\n        this.config.configure({\n            debug: false,\n            logLevel: 0,\n            global: 'kQuery',\n        });\n        globalThis[this.config.global] = this;\n\n        this.logger = new API.Logger(this.config.debug, this.config.logLevel, '[kQuery]', globalThis.console);\n    }\n\n    extends(plugin) {\n        const kQuery = this;\n        const pluginName = plugin.name ? plugin.name : plugin;\n\n        this.logger.time(pluginName);\n        for (const [types, properties] of Object.entries(plugin(kQuery))) {\n            const descriptors = Object.getOwnPropertyDescriptors(properties);\n\n            // rewrite setter to functional setter\n            for (const descriptor of Object.values(descriptors)) {\n                if (descriptor.set) {\n                    const original = descriptor.set;\n                    if (kQuery.config.resetNative || !API.F.functionIsNative(original)) {\n                        descriptor.set = function (...args) {\n                            return API.F.functionToCallbackable(original.bind(this), this, this)(...args);\n                        };\n                    }\n                }\n            }\n\n            for (const type of types.split(',')) {\n                // define list type\n                if (type.charAt(0) === '$') {\n                    for (const listtype of API[type]()) {\n                        for (const [name, descriptor] of Object.entries(descriptors)) {\n                            // length causes an infinite loop\n                            if (name === 'length') {\n                                continue;\n                            }\n                            Object.defineProperty(globalThis[listtype].prototype, name, {\n                                get() {\n                                    const mapped = API.F.objectToEntries(this).map(([i, e]) => e?.[name]);\n                                    if (mapped.length && mapped.every(e => API.F.anyIsPrimitive(e, Object, Array, FileList))) {\n                                        return mapped;\n                                    }\n                                    return new API.Collection(mapped, name, this);\n                                },\n                                set(value) {\n                                    return API.F.objectToEntries(this).forEach(([i, e]) => {\n                                        if (name in e) {\n                                            API.F.functionToCallbackable(v => e[name] = v, this, e, i)(value);\n                                        }\n                                    });\n                                },\n                                configurable: descriptor.configurable,\n                                enumerable: descriptor.enumerable,\n                            });\n                        }\n                    }\n                }\n                // define self type\n                else {\n                    Object.defineProperties(globalThis[type].prototype, descriptors);\n                }\n            }\n        }\n        this.logger.timeEnd(pluginName);\n    }\n}\n", "import {$FileList, $NodeList} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n *\n * this is core, must not depend on other plugins.\n */\nexport function autoproperties(kQuery) {\n    const ignoreProperties = {\n        EventTarget: [\"dispatchEvent\"],\n        Element: [\"computedStyleMap\", \"elementTiming\", \"getInnerHTML\", \"onbeforecopy\", \"onbeforecut\", \"onbeforepaste\", \"onfullscreenchange\", \"onfullscreenerror\", \"onsearch\", \"scrollIntoViewIfNeeded\"],\n        HTMLAnchorElement: [\"attributionSrc\", \"charset\", \"coords\", \"name\", \"rev\", \"shape\"],\n        HTMLAreaElement: [\"noHref\"],\n        HTMLBRElement: [\"clear\"],\n        HTMLBodyElement: [\"aLink\", \"background\", \"bgColor\", \"link\", \"onafterprint\", \"onbeforeprint\", \"onbeforeunload\", \"onblur\", \"onerror\", \"onfocus\", \"onhashchange\", \"onlanguagechange\", \"onload\", \"onmessage\", \"onmessageerror\", \"onoffline\", \"ononline\", \"onpagehide\", \"onpageshow\", \"onpopstate\", \"onrejectionhandled\", \"onresize\", \"onscroll\", \"onstorage\", \"onunhandledrejection\", \"onunload\", \"text\", \"vLink\"],\n        HTMLDListElement: [\"compact\"],\n        HTMLDirectoryElement: [\"*\"],\n        HTMLDivElement: [\"align\"],\n        HTMLElement: [\"attributeStyleMap\", \"editContext\", \"onabort\", \"onanimationend\", \"onanimationiteration\", \"onanimationstart\", \"onauxclick\", \"onbeforeinput\", \"onbeforematch\", \"onbeforetoggle\", \"onbeforexrselect\", \"onblur\", \"oncancel\", \"oncanplay\", \"oncanplaythrough\", \"onchange\", \"onclick\", \"onclose\", \"oncontentvisibilityautostatechange\", \"oncontextlost\", \"oncontextmenu\", \"oncontextrestored\", \"oncopy\", \"oncuechange\", \"oncut\", \"ondblclick\", \"ondrag\", \"ondragend\", \"ondragenter\", \"ondragleave\", \"ondragover\", \"ondragstart\", \"ondrop\", \"ondurationchange\", \"onemptied\", \"onended\", \"onerror\", \"onfocus\", \"onformdata\", \"ongotpointercapture\", \"oninput\", \"oninvalid\", \"onkeydown\", \"onkeypress\", \"onkeyup\", \"onload\", \"onloadeddata\", \"onloadedmetadata\", \"onloadstart\", \"onlostpointercapture\", \"onmousedown\", \"onmouseenter\", \"onmouseleave\", \"onmousemove\", \"onmouseout\", \"onmouseover\", \"onmouseup\", \"onmousewheel\", \"onpaste\", \"onpause\", \"onplay\", \"onplaying\", \"onpointercancel\", \"onpointerdown\", \"onpointerenter\", \"onpointerleave\", \"onpointermove\", \"onpointerout\", \"onpointerover\", \"onpointerrawupdate\", \"onpointerup\", \"onprogress\", \"onratechange\", \"onreset\", \"onresize\", \"onscroll\", \"onscrollend\", \"onscrollsnapchange\", \"onscrollsnapchanging\", \"onsecuritypolicyviolation\", \"onseeked\", \"onseeking\", \"onselect\", \"onselectionchange\", \"onselectstart\", \"onslotchange\", \"onstalled\", \"onsubmit\", \"onsuspend\", \"ontimeupdate\", \"ontoggle\", \"ontransitioncancel\", \"ontransitionend\", \"ontransitionrun\", \"ontransitionstart\", \"onvolumechange\", \"onwaiting\", \"onwheel\", \"virtualKeyboardPolicy\", \"writingSuggestions\"],\n        HTMLEmbedElement: [\"align\", \"name\"],\n        HTMLFencedFrameElement: [\"*\"],\n        HTMLFontElement: [\"color\", \"face\", \"size\"],\n        HTMLFormElement: [\"requestAutocomplete\"],\n        HTMLFrameElement: [\"*\"],\n        HTMLFrameSetElement: [\"cols\", \"onafterprint\", \"onbeforeprint\", \"onbeforeunload\", \"onblur\", \"onerror\", \"onfocus\", \"onhashchange\", \"onlanguagechange\", \"onload\", \"onmessage\", \"onmessageerror\", \"onoffline\", \"ononline\", \"onpagehide\", \"onpageshow\", \"onpopstate\", \"onrejectionhandled\", \"onresize\", \"onscroll\", \"onstorage\", \"onunhandledrejection\", \"onunload\", \"rows\"],\n        HTMLHRElement: [\"align\", \"color\", \"noShade\", \"size\", \"width\"],\n        HTMLHeadingElement: [\"align\"],\n        HTMLHtmlElement: [\"version\"],\n        HTMLIFrameElement: [\"adAuctionHeaders\", \"align\", \"allowPaymentRequest\", \"credentialless\", \"csp\", \"featurePolicy\", \"frameBorder\", \"longDesc\", \"marginHeight\", \"marginWidth\", \"privateToken\", \"sharedStorageWritable\", \"scrolling\"],\n        HTMLImageElement: [\"align\", \"attributionSrc\", \"border\", \"fetchPriority\", \"hspace\", \"longDesc\", \"name\", \"sharedStorageWritable\", \"vspace\"],\n        HTMLInputElement: [\"align\", \"incremental\", \"useMap\", \"webkitdirectory\"],\n        HTMLLIElement: [\"type\"],\n        HTMLLegendElement: [\"align\"],\n        HTMLLinkElement: [\"charset\", \"blocking\", \"fetchPriority\", \"rev\", \"target\"],\n        HTMLMarqueeElement: [\"*\"],\n        HTMLMediaElement: [\"captureStream\", \"controller\", \"controlsList\", \"disableRemotePlayback\", \"mediaGroup\", \"onencrypted\", \"onwaitingforkey\", \"remote\", \"setSinkId\", \"sinkId\"],\n        HTMLMenuElement: [\"compact\"],\n        HTMLMetaElement: [\"scheme\"],\n        HTMLOListElement: [\"compact\"],\n        HTMLObjectElement: [\"align\", \"archive\", \"border\", \"code\", \"codeBase\", \"codeType\", \"declare\", \"hspace\", \"standby\", \"vspace\"],\n        HTMLParagraphElement: [\"align\"],\n        HTMLParamElement: [\"name\", \"type\", \"value\", \"valueType\"],\n        HTMLPreElement: [\"width\"],\n        HTMLScriptElement: [\"attributionSrc\", \"blocking\", \"charset\", \"event\", \"fetchPriority\"],\n        HTMLStyleElement: [\"blocking\", \"type\"],\n        HTMLTableCaptionElement: [\"align\"],\n        HTMLTableCellElement: [\"align\", \"axis\", \"bgColor\", \"ch\", \"chOff\", \"height\", \"noWrap\", \"vAlign\", \"width\"],\n        HTMLTableColElement: [\"align\", \"ch\", \"chOff\", \"span\", \"vAlign\", \"width\"],\n        HTMLTableElement: [\"align\", \"bgColor\", \"border\", \"cellPadding\", \"cellSpacing\", \"frame\", \"rules\", \"summary\", \"width\"],\n        HTMLTableRowElement: [\"align\", \"bgColor\", \"ch\", \"chOff\", \"vAlign\"],\n        HTMLTableSectionElement: [\"align\", \"ch\", \"chOff\", \"vAlign\"],\n        HTMLUListElement: [\"compact\", \"type\"],\n        HTMLVideoElement: [\"cancelVideoFrameCallback\", \"onenterpictureinpicture\", \"onleavepictureinpicture\", \"playsInline\", \"requestPictureInPicture\", \"requestVideoFrameCallback\"],\n    };\n\n    const targetProperties = {\n        // https://developer.mozilla.org/docs/Web/API/Blob\n        Blob: [\"arrayBuffer\", \"size\", \"slice\", \"stream\", \"text\", \"type\"],\n        // https://developer.mozilla.org/docs/Web/API/Element\n        Element: [\"after\", \"animate\", \"append\", \"ariaAtomic\", \"ariaAutoComplete\", \"ariaBrailleLabel\", \"ariaBrailleRoleDescription\", \"ariaBusy\", \"ariaChecked\", \"ariaColCount\", \"ariaColIndex\", \"ariaColIndexText\", \"ariaColSpan\", \"ariaCurrent\", \"ariaDescription\", \"ariaDisabled\", \"ariaExpanded\", \"ariaHasPopup\", \"ariaHidden\", \"ariaInvalid\", \"ariaKeyShortcuts\", \"ariaLabel\", \"ariaLevel\", \"ariaLive\", \"ariaModal\", \"ariaMultiLine\", \"ariaMultiSelectable\", \"ariaOrientation\", \"ariaPlaceholder\", \"ariaPosInSet\", \"ariaPressed\", \"ariaReadOnly\", \"ariaRelevant\", \"ariaRequired\", \"ariaRoleDescription\", \"ariaRowCount\", \"ariaRowIndex\", \"ariaRowIndexText\", \"ariaRowSpan\", \"ariaSelected\", \"ariaSetSize\", \"ariaSort\", \"ariaValueMax\", \"ariaValueMin\", \"ariaValueNow\", \"ariaValueText\", \"assignedSlot\", \"attachShadow\", \"attributes\", \"before\", \"checkVisibility\", \"childElementCount\", \"children\", \"classList\", \"className\", \"clientHeight\", \"clientLeft\", \"clientTop\", \"clientWidth\", \"closest\", \"currentCSSZoom\", \"firstElementChild\", \"getAnimations\", \"getAttribute\", \"getAttributeNS\", \"getAttributeNames\", \"getAttributeNode\", \"getAttributeNodeNS\", \"getBoundingClientRect\", \"getClientRects\", \"getElementsByClassName\", \"getElementsByTagName\", \"getElementsByTagNameNS\", \"getHTML\", \"hasAttribute\", \"hasAttributeNS\", \"hasAttributes\", \"hasPointerCapture\", \"id\", \"innerHTML\", \"insertAdjacentElement\", \"insertAdjacentHTML\", \"insertAdjacentText\", \"lastElementChild\", \"localName\", \"matches\", \"moveBefore\", \"namespaceURI\", \"nextElementSibling\", \"outerHTML\", \"part\", \"prefix\", \"prepend\", \"previousElementSibling\", \"querySelector\", \"querySelectorAll\", \"releasePointerCapture\", \"remove\", \"removeAttribute\", \"removeAttributeNS\", \"removeAttributeNode\", \"replaceChildren\", \"replaceWith\", \"requestFullscreen\", \"requestPointerLock\", \"role\", \"scroll\", \"scrollBy\", \"scrollHeight\", \"scrollIntoView\", \"scrollLeft\", \"scrollTo\", \"scrollTop\", \"scrollWidth\", \"setAttribute\", \"setAttributeNS\", \"setAttributeNode\", \"setAttributeNodeNS\", \"setHTMLUnsafe\", \"setPointerCapture\", \"shadowRoot\", \"slot\", \"tagName\", \"toggleAttribute\"],\n        // https://developer.mozilla.org/docs/Web/API/EventTarget\n        EventTarget: [\"addEventListener\", \"removeEventListener\"],\n        // https://developer.mozilla.org/docs/Web/API/File\n        File: [\"lastModified\", \"lastModifiedDate\", \"name\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement\n        HTMLAnchorElement: [\"download\", \"hash\", \"host\", \"hostname\", \"href\", \"hreflang\", \"origin\", \"password\", \"pathname\", \"ping\", \"port\", \"protocol\", \"referrerPolicy\", \"rel\", \"relList\", \"search\", \"target\", \"text\", \"toString\", \"type\", \"username\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLAreaElement\n        HTMLAreaElement: [\"alt\", \"coords\", \"download\", \"hash\", \"host\", \"hostname\", \"href\", \"origin\", \"password\", \"pathname\", \"ping\", \"port\", \"protocol\", \"referrerPolicy\", \"rel\", \"relList\", \"search\", \"shape\", \"target\", \"toString\", \"username\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLBaseElement\n        HTMLBaseElement: [\"href\", \"target\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLButtonElement\n        HTMLButtonElement: [\"checkValidity\", \"disabled\", \"form\", \"formAction\", \"formEnctype\", \"formMethod\", \"formNoValidate\", \"formTarget\", \"labels\", \"name\", \"popoverTargetAction\", \"popoverTargetElement\", \"reportValidity\", \"setCustomValidity\", \"type\", \"validationMessage\", \"validity\", \"value\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement\n        HTMLCanvasElement: [\"captureStream\", \"getContext\", \"height\", \"toBlob\", \"toDataURL\", \"transferControlToOffscreen\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLDataElement\n        HTMLDataElement: [\"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLDataListElement\n        HTMLDataListElement: [\"options\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement\n        HTMLDetailsElement: [\"name\", \"open\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLDialogElement\n        HTMLDialogElement: [\"close\", \"closedBy\", \"open\", \"requestClose\", \"returnValue\", \"show\", \"showModal\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLElement\n        HTMLElement: [\"accessKey\", \"attachInternals\", \"autocapitalize\", \"autofocus\", \"blur\", \"click\", \"contentEditable\", \"dataset\", \"dir\", \"draggable\", \"enterKeyHint\", \"focus\", \"hidden\", \"hidePopover\", \"inert\", \"innerText\", \"inputMode\", \"isContentEditable\", \"lang\", \"nonce\", \"offsetHeight\", \"offsetLeft\", \"offsetParent\", \"offsetTop\", \"offsetWidth\", \"outerText\", \"popover\", \"showPopover\", \"spellcheck\", \"style\", \"tabIndex\", \"title\", \"togglePopover\", \"translate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement\n        HTMLEmbedElement: [\"getSVGDocument\", \"height\", \"src\", \"type\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement\n        HTMLFieldSetElement: [\"checkValidity\", \"disabled\", \"elements\", \"form\", \"name\", \"reportValidity\", \"setCustomValidity\", \"type\", \"validationMessage\", \"validity\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLFormElement\n        HTMLFormElement: [\"acceptCharset\", \"action\", \"autocomplete\", \"checkValidity\", \"elements\", \"encoding\", \"enctype\", \"length\", \"method\", \"name\", \"noValidate\", \"rel\", \"relList\", \"reportValidity\", \"requestSubmit\", \"reset\", \"submit\", \"target\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement\n        HTMLIFrameElement: [\"allow\", \"allowFullscreen\", \"contentDocument\", \"contentWindow\", \"getSVGDocument\", \"height\", \"loading\", \"name\", \"referrerPolicy\", \"sandbox\", \"src\", \"srcdoc\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLImageElement\n        HTMLImageElement: [\"alt\", \"complete\", \"crossOrigin\", \"currentSrc\", \"decode\", \"decoding\", \"height\", \"isMap\", \"loading\", \"lowsrc\", \"naturalHeight\", \"naturalWidth\", \"referrerPolicy\", \"sizes\", \"src\", \"srcset\", \"useMap\", \"width\", \"x\", \"y\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLInputElement\n        HTMLInputElement: [\"accept\", \"alt\", \"autocomplete\", \"checkValidity\", \"checked\", \"defaultChecked\", \"defaultValue\", \"dirName\", \"disabled\", \"files\", \"form\", \"formAction\", \"formEnctype\", \"formMethod\", \"formNoValidate\", \"formTarget\", \"height\", \"indeterminate\", \"labels\", \"list\", \"max\", \"maxLength\", \"min\", \"minLength\", \"multiple\", \"name\", \"pattern\", \"placeholder\", \"popoverTargetAction\", \"popoverTargetElement\", \"readOnly\", \"reportValidity\", \"required\", \"select\", \"selectionDirection\", \"selectionEnd\", \"selectionStart\", \"setCustomValidity\", \"setRangeText\", \"setSelectionRange\", \"showPicker\", \"size\", \"src\", \"step\", \"stepDown\", \"stepUp\", \"type\", \"validationMessage\", \"validity\", \"value\", \"valueAsDate\", \"valueAsNumber\", \"width\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLLIElement\n        HTMLLIElement: [\"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLLabelElement\n        HTMLLabelElement: [\"control\", \"form\", \"htmlFor\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLLegendElement\n        HTMLLegendElement: [\"form\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLLinkElement\n        HTMLLinkElement: [\"as\", \"crossOrigin\", \"disabled\", \"href\", \"hreflang\", \"imageSizes\", \"imageSrcset\", \"integrity\", \"media\", \"referrerPolicy\", \"rel\", \"relList\", \"sheet\", \"sizes\", \"type\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLMapElement\n        HTMLMapElement: [\"areas\", \"name\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLMediaElement\n        HTMLMediaElement: [\"addTextTrack\", \"autoplay\", \"buffered\", \"canPlayType\", \"controls\", \"crossOrigin\", \"currentSrc\", \"currentTime\", \"defaultMuted\", \"defaultPlaybackRate\", \"duration\", \"ended\", \"error\", \"load\", \"loop\", \"muted\", \"networkState\", \"pause\", \"paused\", \"play\", \"playbackRate\", \"played\", \"preload\", \"preservesPitch\", \"readyState\", \"seekable\", \"seeking\", \"src\", \"srcObject\", \"textTracks\", \"volume\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLMetaElement\n        HTMLMetaElement: [\"content\", \"httpEquiv\", \"media\", \"name\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLMeterElement\n        HTMLMeterElement: [\"high\", \"labels\", \"low\", \"max\", \"min\", \"optimum\", \"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLModElement\n        HTMLModElement: [\"cite\", \"dateTime\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLOListElement\n        HTMLOListElement: [\"reversed\", \"start\", \"type\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLObjectElement\n        HTMLObjectElement: [\"checkValidity\", \"contentDocument\", \"contentWindow\", \"data\", \"form\", \"getSVGDocument\", \"height\", \"name\", \"reportValidity\", \"setCustomValidity\", \"type\", \"useMap\", \"validationMessage\", \"validity\", \"width\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLOptGroupElement\n        HTMLOptGroupElement: [\"disabled\", \"label\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLOptionElement\n        HTMLOptionElement: [\"defaultSelected\", \"disabled\", \"form\", \"index\", \"label\", \"selected\", \"text\", \"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLOutputElement\n        HTMLOutputElement: [\"checkValidity\", \"defaultValue\", \"form\", \"htmlFor\", \"labels\", \"name\", \"reportValidity\", \"setCustomValidity\", \"type\", \"validationMessage\", \"validity\", \"value\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLProgressElement\n        HTMLProgressElement: [\"labels\", \"max\", \"position\", \"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLQuoteElement\n        HTMLQuoteElement: [\"cite\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLScriptElement\n        HTMLScriptElement: [\"async\", \"crossOrigin\", \"defer\", \"htmlFor\", \"integrity\", \"noModule\", \"referrerPolicy\", \"src\", \"text\", \"type\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLSelectElement\n        HTMLSelectElement: [\"add\", \"autocomplete\", \"checkValidity\", \"disabled\", \"form\", \"item\", \"labels\", \"length\", \"multiple\", \"name\", \"namedItem\", \"options\", \"remove\", \"reportValidity\", \"required\", \"selectedIndex\", \"selectedOptions\", \"setCustomValidity\", \"showPicker\", \"size\", \"type\", \"validationMessage\", \"validity\", \"value\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLSlotElement\n        HTMLSlotElement: [\"assign\", \"assignedElements\", \"assignedNodes\", \"name\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLSourceElement\n        HTMLSourceElement: [\"height\", \"media\", \"sizes\", \"src\", \"srcset\", \"type\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLStyleElement\n        HTMLStyleElement: [\"disabled\", \"media\", \"sheet\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement\n        HTMLTableCellElement: [\"abbr\", \"cellIndex\", \"colSpan\", \"headers\", \"rowSpan\", \"scope\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTableElement\n        HTMLTableElement: [\"caption\", \"createCaption\", \"createTBody\", \"createTFoot\", \"createTHead\", \"deleteCaption\", \"deleteRow\", \"deleteTFoot\", \"deleteTHead\", \"insertRow\", \"rows\", \"tBodies\", \"tFoot\", \"tHead\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement\n        HTMLTableRowElement: [\"cells\", \"deleteCell\", \"insertCell\", \"rowIndex\", \"sectionRowIndex\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement\n        HTMLTableSectionElement: [\"deleteRow\", \"insertRow\", \"rows\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement\n        HTMLTemplateElement: [\"content\", \"shadowRootClonable\", \"shadowRootDelegatesFocus\", \"shadowRootMode\", \"shadowRootSerializable\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement\n        HTMLTextAreaElement: [\"autocomplete\", \"checkValidity\", \"cols\", \"defaultValue\", \"dirName\", \"disabled\", \"form\", \"labels\", \"maxLength\", \"minLength\", \"name\", \"placeholder\", \"readOnly\", \"reportValidity\", \"required\", \"rows\", \"select\", \"selectionDirection\", \"selectionEnd\", \"selectionStart\", \"setCustomValidity\", \"setRangeText\", \"setSelectionRange\", \"textLength\", \"type\", \"validationMessage\", \"validity\", \"value\", \"willValidate\", \"wrap\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTimeElement\n        HTMLTimeElement: [\"dateTime\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTitleElement\n        HTMLTitleElement: [\"text\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTrackElement\n        HTMLTrackElement: [\"default\", \"kind\", \"label\", \"readyState\", \"src\", \"srclang\", \"track\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLVideoElement\n        HTMLVideoElement: [\"disablePictureInPicture\", \"getVideoPlaybackQuality\", \"height\", \"poster\", \"videoHeight\", \"videoWidth\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/Node\n        Node: [\"appendChild\", \"baseURI\", \"childNodes\", \"cloneNode\", \"compareDocumentPosition\", \"contains\", \"firstChild\", \"getRootNode\", \"hasChildNodes\", \"insertBefore\", \"isConnected\", \"isDefaultNamespace\", \"isEqualNode\", \"isSameNode\", \"lastChild\", \"lookupNamespaceURI\", \"lookupPrefix\", \"nextSibling\", \"nodeName\", \"nodeType\", \"nodeValue\", \"normalize\", \"ownerDocument\", \"parentElement\", \"parentNode\", \"previousSibling\", \"removeChild\", \"replaceChild\", \"textContent\"],\n    };\n    const typeProperties = !kQuery.config.debug ? targetProperties : (function () {\n        const result = Object.create(null);\n\n        // collect\n        for (const name of Object.keys(Object.getOwnPropertyDescriptors(globalThis))) {\n            if (!name.match(/^((EventTarget)|(Blob|File)|(Node|Element)|(HTML.*Element))$/)) {\n                continue;\n            }\n\n            const prototype = globalThis[name];\n            for (const property in prototype.prototype) {\n                // ignore CONSTANT\n                if (property.toUpperCase() === property) {\n                    continue;\n                }\n                // not standard\n                if (property.match(/^(webkit|moz)[A-Z]/) || property.startsWith('onwebkit')) {\n                    continue;\n                }\n                // only ownself\n                if (!Object.prototype.hasOwnProperty.call(prototype.prototype, property)) {\n                    continue;\n                }\n                // deprecated or on*event\n                if (name in ignoreProperties && (ignoreProperties[name].includes(property) || ignoreProperties[name].includes('*'))) {\n                    continue;\n                }\n\n                result[prototype.name] = (result[prototype.name] ?? new Set()).add(property);\n            }\n        }\n\n        // unique/sort\n        const result2 = {};\n        for (const name of Object.keys(result).toSorted()) {\n            result2[name] = [...result[name]].toSorted();\n        }\n\n        // export output\n        kQuery.logger.debug(Object.keys(result2).map(name => `// https://developer.mozilla.org/docs/Web/API/${name}\\n${name}: ${JSON.stringify(result2[name])},`).join('\\n'));\n\n        return result2;\n    })();\n\n    kQuery.config.configure({\n        appendNative: true,\n        resetNative: true,\n    });\n\n    // specials\n    const defineProperties = kQuery.config.appendNative ? {\n        [[Node.name]]: /** @lends Node.prototype */{\n            /**\n             * to HTML for debug or utility\n             *\n             * @return {String}\n             */\n            [Symbol.toPrimitive]() {\n                return this.outerHTML ?? this.nodeValue ?? null;\n            },\n        },\n        [[NodeList.name]]: /** @lends NodeList.prototype */{\n            /**\n             * to HTML for debug or utility\n             *\n             * @return {String}\n             */\n            [Symbol.toPrimitive]() {\n                return [...this].join('');\n            },\n            /**\n             * same as dispatchEvent for NodeList\n             *\n             * original dispatchEvent is fired only once sometimes. probably because the EventObject is consumed\n             *\n             * @param {Event} event\n             * @return {Boolean[]}\n             */\n            dispatchEvent(event) {\n                const result = [];\n                for (const node of this) {\n                    // clone Event\n                    const newevent = new event.constructor(event.type, event);\n\n                    result.push(node.dispatchEvent(newevent));\n                }\n                return result;\n            },\n        },\n        [[RadioNodeList.name]]: /** @lends RadioNodeList.prototype */{\n            /**\n             * get name of RadioNodeList\n             *\n             * @descriptor get\n             *\n             * @return {?String}\n             */\n            get name() {\n                return this[0]?.name;\n            },\n            /**\n             * set name of RadioNodeList\n             *\n             * @descriptor set\n             *\n             * @param {String} name\n             */\n            set name(name) {\n                // RadioNodeList is live collection, remove when renamed\n                [...this].forEach(function (e) {\n                    e.name = name;\n                });\n            },\n        },\n    } : {};\n\n    const defineProperty = function (type, property, descriptor) {\n        defineProperties[type] ??= {};\n        Object.defineProperty(defineProperties[type], property, descriptor);\n    };\n\n    for (const [type, properties] of Object.entries(typeProperties)) {\n        if (type in globalThis) {\n            const prototype = globalThis[type].prototype;\n            for (const property of properties) {\n                const descriptor = Object.getOwnPropertyDescriptor(prototype, property);\n                if (descriptor) {\n                    defineProperty(type, property, descriptor);\n\n                    if (globalThis[type] === globalThis['EventTarget'] || prototype instanceof EventTarget) {\n                        defineProperty($NodeList.name, property, descriptor);\n                    }\n                    if (globalThis[type] === globalThis['Node'] || prototype instanceof Node) {\n                        defineProperty($NodeList.name, property, descriptor);\n                    }\n                    if (globalThis[type] === globalThis['Blob'] || prototype instanceof Blob) {\n                        defineProperty($FileList.name, property, descriptor);\n                    }\n                }\n            }\n        }\n    }\n\n    return defineProperties;\n}\n", "import {$NodeList, CustomEvent, F, MutationObserver, Nullable, ObjectStorage, Timer, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n *\n * this is core, must not depend on other plugins.\n */\nexport function events(kQuery) {\n    kQuery.config.configure({\n        customEventPrefix: '$',\n    });\n\n    Object.assign(kQuery, /** @lends KQuery.prototype */{\n        wellknownEvents: {\n            click: PointerEvent,\n        },\n        customEvents: {},\n    });\n\n    const eventDataMap = new WeakMap();\n\n    const eachType = function (allowEmpty, type) {\n        if (type == null) {\n            if (!allowEmpty) {\n                throw new Error(`Empty EventType is only allowed this context`);\n            }\n            return [[null, []]];\n        }\n\n        return ('' + type).trim()\n            .split(/\\s+/)\n            .map(e => e.trim().split('.'))\n            .map(([t, ...n]) => {\n                if (!allowEmpty && !t.length) {\n                    throw new Error(`Empty EventType is only allowed this context`);\n                }\n                return [t, n.filter(e => e.length)];\n            });\n    };\n\n    const internalEventName = function (type) {\n        if (type in kQuery.customEvents) {\n            type = kQuery.config.customEventPrefix + type;\n        }\n        return type;\n    };\n\n    const emulateDelegationWatcher = new class {\n        constructor() {\n            const querySelectorThisAndAll = function (nodelist, selector) {\n                const result = new Set();\n                for (const node of nodelist) {\n                    if (node instanceof Element) {\n                        if (node.matches(selector)) {\n                            result.add(node);\n                        }\n                        for (const child of node.querySelectorAll(selector)) {\n                            result.add(child);\n                        }\n                    }\n                }\n                return result;\n            };\n            this.nodeSelectorCallback = new WeakMap();\n            this.observer = new MutationObserver((entry) => {\n                for (const [node, selectorCallbacks] of this.nodeSelectorCallback.entries()) {\n                    for (const {selector, callbacks} of selectorCallbacks) {\n                        for (const child of querySelectorThisAndAll(entry.addedNodes, selector)) {\n                            kQuery.logger.debug(`Insert node to delegation emulation of `, node);\n                            callbacks.insert(child);\n                        }\n                        for (const child of querySelectorThisAndAll(entry.removedNodes, selector)) {\n                            kQuery.logger.debug(`Delete node to delegation emulation of `, node);\n                            callbacks.delete(child);\n                        }\n                    }\n                }\n            }, {\n                attributes: false,\n                attributeOldValue: false,\n                characterData: false,\n                characterDataOldValue: false,\n                childList: true,\n                subtree: true,\n            });\n        }\n\n        watch(node, selector, callbacks) {\n            if (selector == null) {\n                callbacks.insert(node);\n            }\n            else {\n                this.nodeSelectorCallback.getOrSet(node, () => []).push({selector, callbacks});\n\n                // use querySelectorAll because parent node is not watched\n                for (const child of node.querySelectorAll(selector)) {\n                    kQuery.logger.debug(`Initial node to delegation emulation of `, child);\n                    callbacks.insert(child);\n                }\n\n                return this.observer.observe(node);\n            }\n        }\n\n        unwatch(node, selector, callbacks) {\n            if (selector == null) {\n                callbacks.delete(node);\n            }\n            else {\n                this.nodeSelectorCallback.reset(node, (selectorCallbacks) => selectorCallbacks.filter(selectorCallback => {\n                    if (selectorCallback.selector === selector && selectorCallback.callbacks === callbacks) {\n                        kQuery.logger.debug(`Unwatch node to delegation emulation of `, node);\n                        return false;\n                    }\n                    return true;\n                }));\n            }\n        }\n    };\n\n    return {\n        [[EventTarget.name, $NodeList.name]]: /** @lends EventTarget.prototype */{\n            /**\n             * addEventListener\n             *\n             * type format:\n             * - click: single event\n             * - click change: multiple event\n             * - click.ns: single namespace event\n             *\n             * delegation:\n             * - specify selector argument, enable delegation(like jQuery)\n             * - specify options ownself:true, trigger only matched element\n             *   - default ownself:false, trigger until closest\n             * - specify options once:true, trigger event per element only once\n             *\n             * listener(e):\n             * - this: bound target\n             * - e.target: triggered element always\n             * - e.currentTarget: listened element always(=this)\n             * - e.$delegateTarget: selector element delegation only\n             *\n             * misc:\n             * - options is not allowed bool(useCapture). must be Object\n             * - throttle: continual events dispatch interval\n             * - debounce: continual events dispatch after last\n             * - leading: fire at first time\n             * - trailing: fire after last time\n             *\n             * ```\n             *          | throttle | (l)throttle | (t)throttle | (lt)throttle | debounce | (l)debounce | (t)debounce | (lt)debounce |\n             *  leading:|          | fire        |             | fire         |          | fire        |             | fire         |\n             *      100:|          |             |             |              |          |             |             |              |\n             *      200:| fire     | fire        | fire        | fire         |          |             |             |              |\n             *      300:|          |             |             |              |          |             |             |              |\n             *      400:| fire     | fire        | fire        | fire         |          |             |             |              |\n             *      500:|          |             |             |              |          |             |             |              |\n             *      600:| fire     | fire        | fire        | fire         |          |             |             |              |\n             * trailing:|          |             | fire        | fire         |          |             | fire        | fire         |\n             * ```\n             *\n             * @param {String} types\n             * @param {String|Function} selector\n             * @param {Function|Object} [listener]\n             * @param {Object} [options={}]\n             * @return {this}\n             */\n            $on(types, selector, listener, options) {\n                if (typeof (selector) === 'function') {\n                    options = listener;\n                    listener = selector;\n                    selector = null;\n                }\n                options = Object.assign({\n                    // standard: https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener\n                    ...{\n                        // bool\n                        once: undefined,\n                        // bool\n                        capture: undefined,\n                        // bool\n                        passive: undefined,\n                        // https://developer.mozilla.org/docs/Web/API/AbortSignal\n                        signal: undefined,\n                    },\n                    // commons\n                    ...{\n                        // bool\n                        ownself: false,\n                        // int\n                        interval: undefined,\n                        // int\n                        throttle: undefined,\n                        // int\n                        debounce: undefined,\n                        // bool\n                        leading: undefined,\n                        // bool\n                        trailing: undefined,\n                    },\n                    // other events...\n                }, options);\n                kQuery.logger.assertInstanceOf(types, String)();\n                kQuery.logger.assertInstanceOf(selector, Nullable, String)();\n                kQuery.logger.assertInstanceOf(listener, Function)();\n                kQuery.logger.assertInstanceOf(options, Object)();\n\n                if (selector != null && options.capture) {\n                    kQuery.logger.warn(`Delegation of capture phase isn't tested, so might not work well`);\n                }\n\n                if (options.throttle && !options.debounce) {\n                    options.leading ??= true;\n                    options.trailing ??= false;\n                }\n                if (options.debounce && !options.throttle) {\n                    options.leading ??= false;\n                    options.trailing ??= true;\n                }\n\n                for (const [type, namespaces] of eachType(false, types)) {\n                    const eventData = {type, namespaces, selector, listener, options, counter: new WeakMap(), collectors: []};\n\n                    let customEvent;\n                    if (!(this instanceof Window) && type in kQuery.customEvents) {\n                        customEvent = new kQuery.customEvents[type](this, selector, options, function (target, detail = {}, options = {}) {\n                            customEvent.bubbles = 'bubbles' in options;\n                            options.$original ??= {};\n                            options.$original.$eventId ??= customEvent.eventId;\n                            options.bubbles ??= (customEvent.selector ?? selector) != null;\n                            options.detail ??= detail;\n                            target.$trigger(type, options);\n                        });\n                        customEvent.handlers ??= {};\n                        customEvent.handlers.insert ??= (node) => {};\n                        customEvent.handlers.delete ??= (node) => {};\n                        emulateDelegationWatcher.watch(this, customEvent.selector ?? selector, customEvent.handlers);\n                        eventData.collectors.push(() => {\n                            emulateDelegationWatcher.unwatch(this, customEvent.selector ?? selector, customEvent.handlers);\n                            customEvent.destructor?.(this);\n                        });\n                    }\n\n                    const waitStorage = new ObjectStorage();\n                    const handler = async (e) => {\n                        // only matched namespace\n                        if (e.$namespaces?.length && e.$namespaces.some(ns => !eventData.namespaces.includes(ns))) {\n                            return;\n                        }\n                        // only same custom event's options\n                        if (customEvent?.eventId !== e.$original?.$eventId) {\n                            return;\n                        }\n\n                        // e.target is volatile?\n                        const target = e.target;\n                        const debounce = async (msec, leading) => {\n                            const timer = Timer.wait(msec);\n                            const current = waitStorage.reset(target, 'timer', () => timer);\n                            if (!leading || (current?.status === 'pending')) {\n                                current?.cancel(null);\n                                if ((await timer) === null) {\n                                    return false;\n                                }\n                                if (!options.trailing) {\n                                    return false;\n                                }\n                            }\n                            return true;\n                        };\n\n                        if (options.debounce != null) {\n                            if (!await debounce(options.debounce, options.leading)) {\n                                return;\n                            }\n                        }\n                        if (options.throttle != null) {\n                            const start = waitStorage.getOrSet(target, 'start', () => Date.now() - (options.leading ? options.throttle : 0));\n                            if ((start + options.throttle) > Date.now()) {\n                                if (!await debounce(options.throttle, false)) {\n                                    return;\n                                }\n                            }\n                            waitStorage.set(target, 'start', Date.now());\n                        }\n\n                        e.$abort = (reason) => eventData.abortController.abort(reason);\n\n                        if (eventData.selector == null) {\n                            return eventData.listener.call(this, e);\n                        }\n\n                        for (let parent = target; parent && parent !== this; parent = parent.parentElement) {\n                            if (parent.matches(eventData.selector) && !(options.once && eventData.counter.get(target))) {\n                                if (!eventData.counter.reset(target, (count) => (count ?? 0) + 1) && options.once) {\n                                    customEvent?.handlers?.delete?.(target);\n                                }\n                                // stop bubbling unless explicitly specified\n                                if (customEvent && !customEvent.bubbles) {\n                                    e.stopPropagation();\n                                }\n                                e.$delegateTarget = parent;\n                                return eventData.listener.call(this, e);\n                            }\n\n                            if (options.ownself) {\n                                break;\n                            }\n                        }\n                    };\n\n                    // handler is needed by $off, but should not have a strong reference if once:true\n                    eventData.handler = new WeakRef(handler);\n                    eventDataMap.getOrSet(this, () => []).push(eventData);\n\n                    // if selector and once, apply once per node\n                    const internalOptions = eventData.selector == null ? options : Object.assign({}, options, {once: false});\n\n                    eventData.abortController = new AbortController();\n                    eventData.abortController.signal.addEventListener('abort', eventData.destructor);\n                    if (internalOptions.signal) {\n                        internalOptions.signal = AbortSignal.any([internalOptions.signal, eventData.abortController.signal]);\n                    }\n                    else {\n                        internalOptions.signal = eventData.abortController.signal;\n                    }\n                    this.addEventListener(internalEventName(type), handler, internalOptions);\n\n                    // if once:true, the handler can be retrieved by the GC\n                    // at that time, $off is not called so have to call by finalizer\n                    eventData.destructor = function () {\n                        kQuery.logger.debug(`Release of `, type, selector, options);\n\n                        eventData.collectors.forEach(collector => collector());\n                        eventData.collectors = [];\n                    };\n                    F.objectFinalize(handler, eventData.destructor);\n                }\n\n                return this;\n            },\n            /**\n             * removeEventListener\n             *\n             * all arguments are optional\n             * - $off(): remove all event\n             * - $off('click'): remove all click event\n             * - $off('click', 'selector'): remove all click event of selector\n             * - $off('click', 'selector', listener): remove same listener event of selector\n             *\n             * @param {String} [types]\n             * @param {String|Function} [selector]\n             * @param {Function|Object} [listener]\n             * @param {Object} [options={}]\n             * @return {this}\n             */\n            $off(types, selector, listener, options) {\n                if (typeof (selector) === 'function') {\n                    options = listener;\n                    listener = selector;\n                    selector = null;\n                }\n                kQuery.logger.assertInstanceOf(types, Nullable, String)();\n                kQuery.logger.assertInstanceOf(selector, Nullable, String)();\n                kQuery.logger.assertInstanceOf(listener, Nullable, Function)();\n                kQuery.logger.assertInstanceOf(options, Nullable, Object)();\n\n                for (const [type, namespaces] of eachType(true, types)) {\n                    eventDataMap.reset(this, (eventDatas) => (eventDatas ?? []).filter(eventData => {\n                        if (type && type !== eventData.type) {\n                            return true;\n                        }\n                        if (namespaces.length && namespaces.some(ns => !eventData.namespaces.includes(ns))) {\n                            return true;\n                        }\n                        if (selector && selector !== eventData.selector) {\n                            return true;\n                        }\n                        if (listener && listener !== eventData.listener) {\n                            return true;\n                        }\n                        if (options?.capture !== eventData.options.capture) {\n                            return true;\n                        }\n\n                        this.removeEventListener(internalEventName(eventData.type), eventData.handler.deref(), eventData.options);\n                        eventData.destructor();\n                        return false;\n                    }));\n                }\n\n                return this;\n            },\n            /**\n             * dispatch Event\n             *\n             * types allows multiple event\n             *\n             * some event are special treated, e.g. click is PointerEvent\n             *\n             * @param {String} types\n             * @param {Object} options={}\n             * @return {Boolean}\n             */\n            $trigger(types, options = {}) {\n                kQuery.logger.assertInstanceOf(types, String)();\n                kQuery.logger.assertInstanceOf(options, Object)();\n\n                let result = true;\n                for (const [type, namespaces] of eachType(false, types)) {\n                    const event = kQuery.wellknownEvents[type] ?? CustomEvent;\n                    const eventObject = new event(internalEventName(type), Object.assign({\n                        bubbles: true,\n                        cancelable: true,\n                        composed: true,\n                    }, options));\n                    eventObject.$namespaces = namespaces;\n\n                    const completed = this.dispatchEvent(eventObject);\n                    kQuery.logger.debug(`Event ${type} is ${completed ? 'completed' : 'canceled'}`, this, eventObject);\n                    result = result && completed;\n                }\n                return result;\n            },\n            /**\n             * get Event data\n             *\n             * this method is very unsafe and changed without any notice\n             * eventdata is live, changing it changes the handler itself\n             *\n             * @param {String} [types]\n             * @param {Boolean} [ancestor]\n             * @param {Boolean} [capture=false]\n             * @return {{type: String, namespaces: Array, selector: String, listener: Function, options: Object}[]}\n             */\n            $events(types, ancestor, capture = false) {\n                kQuery.logger.assertInstanceOf(types, Nullable, String)();\n                kQuery.logger.assertInstanceOf(ancestor, Nullable, Boolean)();\n                kQuery.logger.assertInstanceOf(capture, Boolean)();\n\n                const result = eventDataMap.get(this) ?? [];\n\n                if (ancestor) {\n                    for (let parent = this.parentNode; parent; parent = parent.parentNode) {\n                        for (const ev of eventDataMap.get(parent) ?? []) {\n                            // delegation mode\n                            if (ev.selector != null && this.matches(ev.selector)) {\n                                if (!(ev.options.once && ev.counter.get(this))) {\n                                    result.push(ev);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                return result.filter(ev => {\n                    // if once:true, handler is collected by GC\n                    if (!ev.handler.deref()) {\n                        return false;\n                    }\n\n                    for (const [type, namespaces] of eachType(true, types)) {\n                        if (type && type !== ev.type) {\n                            return false;\n                        }\n                        if (namespaces.length && namespaces.some(ns => !ev.namespaces.includes(ns))) {\n                            return false;\n                        }\n                    }\n\n                    if (capture !== (ev.options.capture ?? false)) {\n                        return false;\n                    }\n\n                    return true;\n                });\n            },\n        },\n    };\n}\n", "import {$CSSRuleList, $NodeList, F, Nullable, ObjectStorage, Proxy} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function attributes(kQuery) {\n    const nodeStorage = new ObjectStorage();\n\n    class ProxyProperty {\n        static NotImplemented = Symbol('NotImplemented');\n\n        constructor(node, name) {\n            this.node = node;\n            this.name = name;\n            this.object = node[name];\n        }\n\n        has(target, property) {\n            return this._hasValue(property);\n        }\n\n        _hasValue(property) {\n            return Reflect.has(this.object, property);\n        }\n\n        get(target, property) {\n            if (property === Symbol.toPrimitive || property === 'toString') {\n                return () => this._getString();\n            }\n            if (property.charAt(0) === '$') {\n                const $value = this._get$Value(property.substring(1));\n                if ($value !== ProxyProperty.NotImplemented) {\n                    return $value;\n                }\n            }\n            const base = Reflect.get(this.object, property);\n            if (typeof (base) === 'function') {\n                return this._getFunction(property, base);\n            }\n            return this._getValue(property, base);\n        }\n\n        _getString() {}\n\n        _get$Value(property) {\n            return ProxyProperty.NotImplemented;\n        }\n\n        _getFunction(property, value) {\n            const method = (...args) => {\n                const result = F.functionToCallbackable(value, this.node, this.node, method.i).call(this.object, ...args);\n                return result === undefined ? nodeStorage.get(this.node, this.name) : result;\n            };\n            return method;\n        }\n\n        _getValue(property, value) {\n            return value;\n        }\n\n        set(target, property, value) {\n            if (typeof (value) === 'function') {\n                value = this._setFunction(property, value);\n            }\n            if (property.charAt(0) === '$') {\n                const $value = this._set$Value(property.substring(1), value);\n                if ($value !== ProxyProperty.NotImplemented) {\n                    return true;\n                }\n            }\n            this._setValue(property, value);\n            return true;\n        }\n\n        _set$Value(property, value) {\n            return ProxyProperty.NotImplemented;\n        }\n\n        _setFunction(property, value) {\n            return value.call(this.object, this.node);\n        }\n\n        _setValue(property, value) {\n            if (value === undefined) {\n                return;\n            }\n            this.apply(null, null, [{[property]: value}]);\n        }\n\n        deleteProperty(target, property) {\n            const value = Reflect.get(this.object, property);\n            this._deleteValue(property, value);\n            return true;\n        }\n\n        _deleteValue(property, value) {\n            Reflect.deleteProperty(this.object, property);\n        }\n\n        apply(target, thisArg, argArray) {\n            if (argArray[0] instanceof Array || F.objectIsPlain(argArray[0])) {\n                this._applySet(...argArray);\n                return nodeStorage.get(this.node, this.name);\n            }\n            else {\n                return this._applyGet(...argArray);\n            }\n        }\n\n        _applyGet(...args) {}\n\n        _applySet(...args) {}\n    }\n\n    return {\n        [[Element.name, $NodeList.name]]: /** @lends Element.prototype */{\n            /**\n             * simple accessor to NamedNodeMap(attribute)\n             *\n             * @descriptor get\n             *\n             * @return {Object|Function}\n             *\n             * @example\n             * $$('input').$attrs.name;             // getter\n             * $$('input').$attrs.name = 'value';   // setter\n             * $$('input').$attrs({name: 'value'}); // mass setting(keep other)\n             * $$('input').$attrs();                // get all key-value object\n             *\n             * @example\n             * // false is delete that attribute\n             * $$('input').$attrs.name = false;\n             * $$('input').$attrs({name: false});\n             *\n             * @example\n             * // $prefix means inherited attribute\n             * $$('input').$attrs.$disabled; // returns true if the parent is disabled even if itself none\n             */\n            get $attrs() {\n                return nodeStorage.getOrSet(this, 'attributes', (node, name) => new Proxy(function $Attrs() {}, new class extends ProxyProperty {\n                    _getString() {\n                        return Object.values(node.attributes).map((attr) => `${F.stringEscape(attr.name, 'attr-name')}=\"${F.stringEscape(attr.value, 'attr-value')}\"`).join(' ');\n                    }\n\n                    _get$Value(property) {\n                        return node.closest(`[${F.stringEscape(property, 'css')}]`)?.getAttribute(property) ?? null;\n                    }\n\n                    _getValue(property, value) {\n                        return value?.value;\n                    }\n\n                    _deleteValue(property, value) {\n                        node.removeAttribute(property);\n                    }\n\n                    _applyGet() {\n                        return Object.fromEntries(Array.from(node.attributes, attr => [attr.name, attr.value]));\n                    }\n\n                    _applySet(object) {\n                        const normalizedAttributes = F.objectToAttributes(object);\n                        for (const [name, value] of Object.entries(normalizedAttributes)) {\n                            if (typeof (value) === 'boolean') {\n                                node.toggleAttribute(name, value);\n                            }\n                            else {\n                                node.setAttribute(name, value);\n                            }\n                        }\n                    }\n                }(node, name)));\n            },\n            /**\n             * mass assign NamedNodeMap(attribute)\n             *\n             * @descriptor set\n             *\n             * @param {Object} value\n             *\n             * @example\n             * $$('input').$attrs = {name: 'value'};                // mass assign(delete other)\n             * $$('input').$attrs = (node, i) => ({name: 'value'}); // mass assign by callback(delete other)\n             */\n            set $attrs(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, Object)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                // carefully node.attributes is \"live\" collection\n                for (const attr of Object.values(this.attributes)) {\n                    this.attributes.removeNamedItem(attr.name);\n                }\n\n                // noinspection JSValidateTypes\n                this.$attrs(value);\n            },\n            /**\n             * simple accessor to DOMStringMap(dataset)\n             *\n             * @descriptor get\n             *\n             * @return {Object|Function}\n             *\n             * @example\n             * $$('input').$data.name;             // getter\n             * $$('input').$data.name = 'value';   // setter\n             * $$('input').$data({name: 'value'}); // mass setting(keep other)\n             * $$('input').$data();                // get all key-value object\n             * $$('input').$data('prefix');        // get structured object\n             *\n             * @example\n             * // $prefix means objective data\n             * $$('input').$data.$hoge; // returns Object starting with hoge\n             */\n            get $data() {\n                return nodeStorage.getOrSet(this, 'dataset', (node, name) => new Proxy(function $Data() {}, new class extends ProxyProperty {\n                    _getString() {\n                        return JSON.stringify(this.apply(null, null, ['']));\n                    }\n\n                    _get$Value(property) {\n                        return this._applyGet(property);\n                    }\n\n                    _applyGet(property) {\n                        const result = {};\n                        for (const [name, data] of Object.entries(node.dataset)) {\n                            result[name] = data;\n                        }\n                        if (typeof (property) !== 'string') {\n                            return result;\n                        }\n\n                        // filter and to kebab\n                        const targetPrefix = F.stringToKebabCase(property);\n                        const regex = new RegExp(targetPrefix ? `^${property}[A-Z]` : `.*`);\n                        const member = {};\n                        for (const [name, data] of Object.entries(result)) {\n                            if (regex.test(name)) {\n                                member[F.stringToKebabCase(name)] = data;\n                            }\n                        }\n\n                        if (Object.keys(member).length === 0 && property in node.dataset) {\n                            try {\n                                return JSON.parse(node.dataset[property]);\n                            }\n                            catch (e) {\n                            }\n                        }\n\n                        const entries = Object.entries(member).map(([name, value]) => [name.split('-'), value]);\n                        const object = F.entriesToObject(entries, true);\n\n                        return targetPrefix ? targetPrefix.split('-').reduce((target, key) => target?.[key], object) ?? {} : object;\n                    }\n\n                    _set$Value(property, value) {\n                        node.dataset[property] = JSON.stringify(value);\n                    }\n\n                    _applySet(object) {\n                        for (const [name, data] of Object.entries(F.objectToDataset(object))) {\n                            node.dataset[F.stringToPascalCase(name)] = data;\n                        }\n                    }\n                }(node, name)));\n            },\n            /**\n             * mass assign DOMStringMap(dataset)\n             *\n             * @descriptor set\n             *\n             * @param {Object} value\n             *\n             * @example\n             * $$('input').$data = {name: 'value'};                // mass assign(delete other)\n             * $$('input').$data = (node, i) => ({name: 'value'}); // mass assign by callback(delete other)\n             */\n            set $data(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, Object)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                for (const name of Object.keys(this.dataset)) {\n                    delete this.dataset[name];\n                }\n\n                // noinspection JSValidateTypes\n                this.$data(value);\n            },\n            /**\n             * simple accessor to DOMTokenList(classList)\n             *\n             * @descriptor get\n             *\n             * @return {Object|Function}\n             *\n             * @example\n             * $$('input').$class.name;             // getter(always boolean)\n             * $$('input').$class.name = 'flag';    // setter(cast to boolean)\n             * $$('input').$class({name: 'flag'});  // mass setting(keep other)\n             * $$('input').$class();                // get all keys array\n             *\n             * @example\n             * // object|array is treated like vue.js\n             * $$('input').$class({name: false});\n             * $$('input').$class([{name: false}, 'other']);\n             */\n            get $class() {\n                return nodeStorage.getOrSet(this, 'classList', (node, name) => new Proxy(function $Class() {}, new class extends ProxyProperty {\n                    _hasValue(property) {\n                        return node.classList.contains(property);\n                    }\n\n                    _getString() {\n                        return node.classList.value;\n                    }\n\n                    _getValue(property, value) {\n                        return node.classList.contains(property);\n                    }\n\n                    _deleteValue(property, value) {\n                        node.classList.remove(property);\n                    }\n\n                    _applyGet() {\n                        return [...node.classList.values()];\n                    }\n\n                    _applySet(object) {\n                        for (const [token, flag] of F.objectToEntries(F.objectToClasses(object))) {\n                            node.classList.toggle(token, flag);\n                        }\n                    }\n                }(node, name)));\n            },\n            /**\n             * mass assign DOMTokenList(classList)\n             *\n             * @descriptor set\n             *\n             * @param {Object|Array} value\n             *\n             * @example\n             * $$('input').$class = {name: 'flag'};                // mass assign(delete other)\n             * $$('input').$class = (node, i) => ({name: 'flag'}); // mass assign by callback(delete other)\n             */\n            set $class(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, String, Object, Array)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                this.classList.value = '';\n\n                // noinspection JSValidateTypes\n                this.$class(value);\n            },\n        },\n        [[Element.name, CSSStyleRule.name, $NodeList.name, $CSSRuleList.name]]: /**\n         @lends CSSStyleRule.prototype\n         @lends Element.prototype*/ {\n            /**\n             * simple accessor to CSSStyleDeclaration(style)\n             *\n             * @descriptor get\n             *\n             * @return {Object|Function}\n             *\n             * @example\n             * $$('input').$style.color;             // getter\n             * $$('input').$style.color = 'value';   // setter\n             * $$('input').$style({color: 'value'}); // mass setting(keep other)\n             * $$('input').$style();                 // get all key-value object\n             * $$('input').$style(true);             // get all key-value object with important\n             *\n             * @example\n             * // $prefix means computed style\n             * $$('input').$style.$;                // returns computed style\n             * $$('input').$style.$color;           // returns computed style's color\n             * $$('input').$style['$color::after']; // returns computed style's pseudo color\n             */\n            get $style() {\n                return nodeStorage.getOrSet(this, 'style', (node, name) => new Proxy(function $Style() {}, new class extends ProxyProperty {\n                    _hasValue(property) {\n                        return !!Reflect.get(node.style, property);\n                    }\n\n                    _getString() {\n                        return node.style.cssText;\n                    }\n\n                    _get$Value(property) {\n                        let [name, pseudo] = property.split('::');\n                        pseudo = pseudo ? `::${pseudo}` : null;\n\n                        const cstyle = node.$window.getComputedStyle(node, pseudo);\n                        if (!name.length) {\n                            return cstyle;\n                        }\n                        return cstyle.getPropertyValue(F.stringToKebabCase(name));\n                    }\n\n                    _getValue(property, value) {\n                        if (property.startsWith('--')) {\n                            return node.style.getPropertyValue(F.stringToKebabCase(property));\n                        }\n                        return value || value === undefined ? value : null;\n                    }\n\n                    _deleteValue(property, value) {\n                        node.style.removeProperty(F.stringToKebabCase(property));\n                    }\n\n                    _applyGet(priority) {\n                        const result = {};\n                        for (let i = 0; true; i++) {\n                            const name = node.style[i];\n                            if (!name) {\n                                break;\n                            }\n                            if (priority === true) {\n                                const priority = node.style.getPropertyPriority(name);\n                                result[name] = node.style.getPropertyValue(name) + (priority ? `!${priority}` : '');\n                            }\n                            else {\n                                result[name] = node.style.getPropertyValue(name);\n                            }\n                        }\n                        return result;\n                    }\n\n                    _applySet(object) {\n                        for (const [name, style] of F.objectToEntries(object)) {\n                            const strstyle = '' + style;\n                            const rawstyle = strstyle.replace(/!important$/, '');\n                            node.style.setProperty(F.stringToKebabCase(name), rawstyle, strstyle === rawstyle ? '' : 'important');\n                        }\n                    }\n                }(node, name)));\n            },\n            /**\n             * mass assign CSSStyleDeclaration(style)\n             *\n             * @descriptor set\n             *\n             * @param {Object} value\n             *\n             * @example\n             * $$('input').$style = {color: 'value'};                // mass assign(delete other)\n             * $$('input').$style = (node, i) => ({color: 'value'}); // mass assign by callback(delete other)\n             */\n            set $style(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, Object)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                this.style.cssText = '';\n\n                // noinspection JSValidateTypes\n                this.$style(value);\n            },\n        },\n    };\n}\n", "import {$FileList, $NodeList, F, FileReader, Nullable, Promise, Proxy, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function data(kQuery) {\n    const nodeBag = new WeakMap();\n    const documentCookie = new WeakMap();\n\n    return {\n        [[URL.name]]: /** @lends URL.prototype */{\n            /**\n             * assign URL parts\n             *\n             * @param {Object} parts\n             * @return {this}\n             */\n            $assign(parts) {\n                kQuery.logger.assertInstanceOf(parts, Object)();\n\n                for (const [key, value] of F.objectToEntries(parts)) {\n                    if (key === 'searchParams') {\n                        this[key].$assign(value);\n                    }\n                    else if (key in this) {\n                        this[key] = value;\n                    }\n                }\n                return this;\n            },\n            /**\n             * assign URL parts and new URL\n             *\n             * @param {Object} parts\n             * @return {this}\n             */\n            $replace(parts) {\n                kQuery.logger.assertInstanceOf(parts, Object)();\n\n                return new URL(this).$assign(parts);\n            },\n            /**\n             * shortcut to this.$assign({searchParams})\n             *\n             * @param {Object} params\n             * @return {this}\n             */\n            $params(params) {\n                kQuery.logger.assertInstanceOf(params, Object)();\n\n                return this.$assign({searchParams: params});\n            },\n        },\n        [[URLSearchParams.name]]: /** @lends URLSearchParams.prototype */{\n            /**\n             * assign params\n             *\n             * - null/undefined: delete parameter\n             * - array: append per element\n             * - other: simple set\n             *\n             * @param {Object} params\n             * @return {this}\n             */\n            $assign(params) {\n                kQuery.logger.assertInstanceOf(params, Object)();\n\n                for (const [name, value] of F.objectToEntries(params)) {\n                    if (value == null) {\n                        this.delete(name);\n                    }\n                    else if (value instanceof Array) {\n                        this.delete(name);\n                        for (const e of value) {\n                            this.append(name, e);\n                        }\n                    }\n                    else {\n                        this.set(name, value);\n                    }\n                }\n                return this;\n            },\n            $clear() {\n                for (const key of [...this.keys()]) {\n                    this.delete(key);\n                }\n                return this;\n            },\n        },\n        [[Document.name]]: /** @lends Document.prototype */{\n            /**\n             * create URL based on this URL\n             *\n             * @descriptor get\n             *\n             * @return {URL}\n             */\n            get $URL() {\n                return new URL(this.URL, this.baseURI);\n            },\n            /**\n             * get Cookie accessor\n             *\n             * @descriptor get\n             *\n             * @example\n             * document.$cookie.hoge;           // getter\n             * document.$cookie.hoge = 'value'; // setter\n             * document.$cookie.hoge = {        // setter with attributes\n             *     value: 'value',\n             *     path: \"/path/to/cookie\",\n             *     maxAge: 3600,\n             * };\n             * document.$cookie.hoge = null;    // delete\n             * document.$cookie();              // get all key-value object\n             * document.$cookie({               // mass assign(keep other, no attributes use default attributes)\n             *     hoge: 'HOGE',\n             *     fuga: {\n             *         value: 'FUGA',\n             *         path: '/',\n             *     },\n             * });\n             * document.$cookie.$defaultAttributes({path: '/'});  // mass setting default attributes(keep other)\n             * document.$cookie.$defaultAttributes = {path: '/'}; // mass assign default attributes(delete other)\n             */\n            get $cookie() {\n                return documentCookie.getOrSet(this, (document) => new Proxy(function $Cookie() {}, {\n                    has(target, property) {\n                        return this.get(target, property) != null;\n                    },\n                    get(target, property) {\n                        if (property === Symbol.toPrimitive || property === 'toString') {\n                            return () => document.cookie;\n                        }\n                        // special: mass setting default attributes\n                        if (property === '$defaultAttributes') {\n                            return (defaultAttributes) => {\n                                // this is for internal(test)\n                                if (!defaultAttributes) {\n                                    return target.$defaultAttributes ?? {};\n                                }\n                                this.set(target, property, Object.assign(target.$defaultAttributes, defaultAttributes));\n                                return documentCookie.get(document);\n                            };\n                        }\n\n                        const cookies = document.cookie.split(/; ?/);\n                        for (const cookie of cookies) {\n                            const [name, value] = cookie.split(/=(.*)/s).map(decodeURIComponent);\n                            if (name === property) {\n                                return value;\n                            }\n                        }\n                        return undefined;\n                    },\n                    set(target, property, value) {\n                        // special: mass setting default attributes\n                        if (property === '$defaultAttributes') {\n                            kQuery.logger.assertInstanceOf(value, Object)();\n                            if (value.expires) {\n                                kQuery.logger.warn(`Should not specify expire as the default value, because Absolute time and may be an unintended value at the time of actual use`);\n                            }\n\n                            target.$defaultAttributes = value;\n                            return true;\n                        }\n\n                        // null is deletion\n                        if (value == null) {\n                            value = {\n                                value: '',\n                                maxAge: -1,\n                            };\n                        }\n\n                        const attributes = Object.assign({\n                            domain: '',\n                            path: '/',\n                            secure: document.defaultView.isSecureContext,\n                            sameSite: 'lax',\n                        }, target.$defaultAttributes);\n\n                        if (F.objectIsPlain(value)) {\n                            Object.assign(attributes, value);\n                            value = value.value ?? value[''];\n                        }\n                        delete attributes.value;\n                        delete attributes[''];\n\n                        kQuery.logger.assertInstanceOf(attributes.maxAge, Nullable, Number)();\n                        kQuery.logger.assertInstanceOf(attributes.expires, Nullable, Date)();\n\n                        let cookie = `${encodeURIComponent(property)}=${encodeURIComponent(value)}`;\n                        if (attributes.domain) {\n                            cookie += `; domain=${attributes.domain}`;\n                        }\n                        if (attributes.path) {\n                            cookie += `; path=${attributes.path}`;\n                        }\n                        if (attributes.secure) {\n                            cookie += `; secure`;\n                        }\n                        if (attributes.sameSite) {\n                            cookie += `; samesite=${attributes.sameSite}`;\n                        }\n                        if (attributes.maxAge) {\n                            cookie += `; max-age=${+attributes.maxAge}`;\n                        }\n                        // RFC 6265-4.1.2.2\n                        // > If a cookie has both the Max-Age and the Expires attribute, the Max-Age attribute has precedence and controls the expiration date of the cookie.\n                        if (attributes.expires) {\n                            cookie += `; expires=${attributes.expires.toUTCString()}`;\n                        }\n\n                        document.cookie = cookie;\n                        return true;\n                    },\n                    deleteProperty(target, property) {\n                        this.set(target, property, null);\n                        return true;\n                    },\n                    apply(target, thisArg, argArray) {\n                        if (F.objectIsPlain(argArray[0])) {\n                            for (const [name, value] of F.objectToEntries(argArray[0])) {\n                                this.set(target, name, value);\n                            }\n                        }\n                        return Object.fromEntries(document.cookie.split(/; ?/).map(v => v.split(/=(.*)/s).map(decodeURIComponent)));\n                    },\n                }));\n            },\n            /**\n             * set Cookie value\n             *\n             * @descriptor set\n             *\n             * @param {Object} value\n             *\n             * @example\n             * document.$cookie = { // mass assign(delete other, no attributes use default attributes)\n             *     hoge: 'HOGE',\n             *     fuga: {\n             *         value: 'FUGA',\n             *         path: '/',\n             *     },\n             * };\n             */\n            set $cookie(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, Object)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                for (const [name] of F.objectToEntries(this.$cookie())) {\n                    this.$cookie[name] = null;\n                }\n\n                this.$cookie(value);\n            },\n        },\n        [[Node.name, $NodeList.name]]: /** @lends Node.prototype */{\n            /**\n             * get Bag for anything\n             *\n             * @descriptor get\n             *\n             * @example\n             * $('input').$bag.hoge;             // getter\n             * $('input').$bag.hoge = 'value';   // setter\n             * $('input').$bag({hoge: 'value'}); // mass setting(keep other)\n             * $('input').$bag();                // get all key-value object\n             */\n            get $bag() {\n                const bag = {};\n                return nodeBag.getOrSet(this, () => new Proxy(function $Bag() {}, {\n                    has(target, property) {\n                        return Reflect.has(bag, property);\n                    },\n                    get(target, property) {\n                        if (property === Symbol.toPrimitive || property === 'toString') {\n                            return () => JSON.stringify(bag);\n                        }\n                        return Reflect.get(bag, property);\n                    },\n                    set(target, property, value) {\n                        Reflect.set(bag, property, value);\n                        return true;\n                    },\n                    deleteProperty(target, property) {\n                        Reflect.deleteProperty(bag, property);\n                        return true;\n                    },\n                    apply(target, thisArg, argArray) {\n                        if (F.objectIsPlain(argArray[0])) {\n                            Object.assign(bag, argArray[0]);\n                        }\n                        return bag;\n                    },\n                }));\n            },\n            /**\n             * mass assign $bag\n             *\n             * @descriptor set\n             *\n             * @param {Object} value\n             *\n             * @example\n             * $('input').$bag = {hoge: 'value'};                // mass assign(delete other)\n             * $('input').$bag = (node, i) => ({hoge: 'value'}); // mass assign by callback(delete other)\n             */\n            set $bag(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, Object)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                const $bag = this.$bag;\n                for (const key of Object.keys($bag())) {\n                    delete $bag[key];\n                }\n\n                $bag(value);\n            },\n        },\n        [[HTMLStyleElement.name, HTMLLinkElement.name, $NodeList.name]]: /** @lends HTMLStylableElement.prototype */{\n            /**\n             * get contents as text\n             *\n             * - premised stylesheet\n             * - should have href\n             * - if href requires CORS\n             *\n             * @param {Boolean} [resolveUrl=true]\n             * @return {Promise<String>}\n             */\n            async $contents(resolveUrl = true) {\n                let contents;\n                if (this instanceof HTMLLinkElement) {\n                    contents = await (await F.fetch(this.href)).text();\n                }\n                else {\n                    contents = this.textContent;\n                }\n\n                if (resolveUrl) {\n                    const regex = /url\\(((['\"])?.+?\\2?)\\)/g;\n                    const normalize = (url) => {\n                        url = F.stringUnquote(url, 'css-url');\n                        // https://developer.mozilla.org/ja/docs/Web/CSS/url_function\n                        // url allows svg#id in page\n                        if (url.charAt(0) === '#') {\n                            return null;\n                        }\n                        return new URL(url, this.href);\n                    };\n\n                    const requests = {};\n                    for (const [, url] of contents.matchAll(regex)) {\n                        const fullurl = normalize(url);\n                        if (fullurl) {\n                            requests[fullurl] ??= async (fullurl) => {\n                                const response = await F.fetch(fullurl).catch(v => ({ok: false}));\n                                if (!response.ok) {\n                                    return null;\n                                }\n                                return (await response.blob()).$dataURL();\n                            };\n                        }\n                    }\n\n                    const responses = await Promise.concurrencyAll(requests, 6);\n                    contents = contents.replace(regex, (m0, url) => {\n                        const fullurl = normalize(url);\n                        if (fullurl && responses[fullurl]) {\n                            return 'url(' + F.stringQuote(responses[fullurl] + fullurl.hash, 'css-url') + ')';\n                        }\n                        return m0;\n                    });\n                }\n\n                return contents;\n            },\n        },\n        [[HTMLScriptElement.name, $NodeList.name]]: /** @lends HTMLScriptElement.prototype */{\n            /**\n             * get contents as text\n             *\n             * - should have src\n             * - if src requires CORS\n             *\n             * @return {Promise<String>}\n             */\n            async $contents() {\n                let contents;\n                if (this.src) {\n                    contents = await (await F.fetch(this.src)).text();\n                }\n                else {\n                    contents = this.textContent;\n                }\n\n                // do something. e.g. url rewrite\n                return contents;\n            },\n        },\n        [[HTMLImageElement.name, $NodeList.name]]: /** @lends HTMLImageElement.prototype */{\n            /**\n             * create URL based on this src\n             *\n             * @descriptor get\n             *\n             * @return {URL}\n             */\n            get $URL() {\n                return new URL(this.src, this.baseURI);\n            },\n            /**\n             * set src by URL\n             *\n             * @descriptor set\n             *\n             * @param {URL} url\n             */\n            set $URL(url) {\n                this.src = url;\n            },\n            /**\n             * get contents as file\n             *\n             * - must have src\n             * - requires CORS\n             *\n             * @return {Promise<File>}\n             */\n            async $contents() {\n                const url = new URL(this.currentSrc, this.baseURI);\n\n                const response = await F.fetch(url);\n                const blob = await response.blob();\n                return new File([blob], url.pathname.split('/').at(-1) ?? this.currentSrc, {\n                    type: blob.type,\n                    ...(response.headers.has('last-modified') ? {\n                        lastModified: new Date(response.headers.get('last-modified')).getTime(),\n                    } : {}),\n                });\n            },\n            /**\n             * convert to dataURL\n             *\n             * @param {?String} [mimetype]\n             * @param {?Number} [quality]\n             * @return {Promise<String>}\n             */\n            async $dataURL(mimetype, quality) {\n                kQuery.logger.assertInstanceOf(mimetype, Nullable, String)();\n                kQuery.logger.assertInstanceOf(quality, Nullable, Number)();\n\n                return new Promise((resolve) => {\n                    const canvas = this.$document.createElement('canvas');\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n                    canvas.getContext('2d').drawImage(this, 0, 0);\n                    resolve(canvas.toDataURL(mimetype, quality));\n                });\n            },\n            /**\n             * convert to Blob\n             *\n             * @param {?String} [mimetype]\n             * @param {?Number} [quality]\n             * @return {Promise<Blob>}\n             */\n            async $blob(mimetype, quality) {\n                kQuery.logger.assertInstanceOf(mimetype, Nullable, String)();\n                kQuery.logger.assertInstanceOf(quality, Nullable, Number)();\n\n                return new Promise((resolve) => {\n                    const canvas = this.$document.createElement('canvas');\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n                    canvas.getContext('2d').drawImage(this, 0, 0);\n                    canvas.toBlob(resolve, mimetype, quality);\n                });\n            },\n            /**\n             * convert to File\n             *\n             * @param {?String} [mimetype]\n             * @param {?Number} [quality]\n             * @return {Promise<File>}\n             */\n            async $file(mimetype, quality) {\n                kQuery.logger.assertInstanceOf(mimetype, Nullable, String)();\n                kQuery.logger.assertInstanceOf(quality, Nullable, Number)();\n\n                const url = new URL(this.currentSrc, this.baseURI);\n                return new File([await this.$blob(mimetype, quality)], url.pathname.split('/').at(-1) ?? this.currentSrc, {\n                    type: mimetype,\n                });\n            },\n        },\n        [[HTMLAnchorElement.name, $NodeList.name]]: /** @lends HTMLAnchorElement.prototype */{\n            /**\n             * create URL based on this href\n             *\n             * @descriptor get\n             *\n             * @return {URL}\n             */\n            get $URL() {\n                return new URL(this.href, this.baseURI);\n            },\n            /**\n             * set href by URL\n             *\n             * @descriptor set\n             *\n             * @param {URL} url\n             */\n            set $URL(url) {\n                this.href = url;\n            },\n        },\n        [[HTMLFormElement.name, $NodeList.name]]: /** @lends HTMLFormElement.prototype */{\n            /**\n             * create URL based on this action\n             *\n             * @descriptor get\n             *\n             * @return {URL}\n             */\n            get $URL() {\n                return new URL(this.action, this.baseURI);\n            },\n            /**\n             * set action by URL\n             *\n             * @descriptor set\n             *\n             * @param {URL} url\n             */\n            set $URL(url) {\n                this.action = url;\n            },\n        },\n        [[Blob.name, $FileList.name]]: /** @lends Blob.prototype */{\n            /**\n             * download as file\n             *\n             * @param {?String} [filename]\n             */\n            $download(filename) {\n                kQuery.logger.assertInstanceOf(filename, Nullable, String)();\n\n                // for File\n                filename ??= this.name ?? '';\n\n                const url = URL.createObjectURL(this);\n                const a = document.$createElement('a', {\n                    href: url,\n                    download: filename,\n                });\n\n                a.click();\n                setTimeout(function () {\n                    URL.revokeObjectURL(url);\n                }, 1000);\n            },\n            /**\n             * read as text\n             *\n             * @param {?String} [encoding]\n             * @return {Promise<String>}\n             */\n            async $text(encoding) {\n                kQuery.logger.assertInstanceOf(encoding, Nullable, String)();\n\n                // return this.text(); // no encoding\n                const textDecoder = new TextDecoder(encoding);\n                return textDecoder.decode(await this.arrayBuffer());\n            },\n            /**\n             * read as base64\n             *\n             * @return {Promise<String>}\n             */\n            async $base64() {\n                const dataURL = await this.$dataURL();\n                return dataURL.substring(dataURL.indexOf(',') + 1);\n            },\n            /**\n             * read as dataURL\n             *\n             * @param {?String} [mimetype]\n             * @return {Promise<String>}\n             */\n            async $dataURL(mimetype) {\n                kQuery.logger.assertInstanceOf(mimetype, Nullable, String)();\n\n                const that = mimetype ? this.slice(0, this.size, mimetype) : this;\n                const reader = new FileReader();\n                reader.readAsDataURL(that);\n                return reader.promise();\n            },\n        },\n        [[Storage.name]]: /** @lends Storage.prototype */{\n            /**\n             * get item as JSON\n             *\n             * @param {String} keyName\n             * @return {any}\n             */\n            $getJson(keyName) {\n                const item = this.getItem(keyName);\n                return item === null ? undefined : JSON.parse(item);\n            },\n            /**\n             * set item as JSON\n             *\n             * @param {String} keyName\n             * @param {any} keyValue\n             * @return {this}\n             */\n            $setJson(keyName, keyValue) {\n                this.setItem(keyName, JSON.stringify(keyValue));\n                return this;\n            },\n            /**\n             * entries all storage items\n             *\n             * @return {Generator<string[], void, *>}\n             */\n            * $entries() {\n                for (let i = 0; i < this.length; i++) {\n                    const key = this.key(i);\n                    const item = this.getItem(key);\n                    yield [key, item];\n                }\n            },\n        },\n    };\n}\n", "import {$NodeList, F} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function dimensions(kQuery) {\n    const boxsize = function (element) {\n        const backup = element.getAttribute('style');\n\n        try {\n            const cstyle = element.$window.getComputedStyle(element);\n            const marginWidth = parseFloat(cstyle.marginLeft) + parseFloat(cstyle.marginRight);\n            const marginHeight = parseFloat(cstyle.marginTop) + parseFloat(cstyle.marginBottom);\n\n            element.style.setProperty('box-sizing', 'content-box', 'important');\n            element.style.setProperty('overflow', 'hidden', 'important');\n\n            const box = element.getBoundingClientRect();\n            let contentWidth = box.width;\n            let contentHeight = box.height;\n\n            element.style.setProperty('border', 'none', 'important');\n            const borderWidth = contentWidth - element.offsetWidth;\n            const borderHeight = contentHeight - element.offsetHeight;\n            contentWidth -= borderWidth;\n            contentHeight -= borderHeight;\n\n            element.style.setProperty('padding', 0, 'important');\n            const paddingWidth = contentWidth - element.offsetWidth;\n            const paddingHeight = contentHeight - element.offsetHeight;\n            const scrollWidth = element.scrollWidth;\n            const scrollHeight = element.scrollHeight;\n            contentWidth -= paddingWidth;\n            contentHeight -= paddingHeight;\n\n            // vertical scrollbar reduces width but horizontal scrollbar doesn't reduce height\n            const clientWidth = element.clientWidth;\n            const offsetHeight = element.offsetHeight;\n            element.style.setProperty('overflow', 'scroll', 'important');\n            const scrollbarWidth = clientWidth - element.clientWidth;\n            const scrollbarHeight = element.offsetHeight - offsetHeight;\n            contentWidth -= scrollbarWidth;\n            //contentHeight -= result.scrollbarHeight;\n\n            return {\n                marginWidth, borderWidth, paddingWidth, scrollbarWidth, contentWidth,\n                marginHeight, borderHeight, paddingHeight, scrollbarHeight, contentHeight,\n            };\n        }\n        finally {\n            if (backup == null) {\n                element.removeAttribute('style');\n            }\n            else {\n                element.setAttribute('style', backup);\n            }\n        }\n    };\n\n    return {\n        [[Document.name]]: /** @lends Document.prototype */{\n            /**\n             * get top-layer element\n             *\n             * in the future, \":top-layer\" pseudo-class may come, but not now\n             *\n             * @return {?Element}\n             */\n            get $topLayerElement() {\n                const tops = this.$$(':modal, :popover-open, :fullscreen');\n                if (tops.length <= 1) {\n                    return tops[0] ?? null;\n                }\n\n                for (const top of tops) {\n                    if (top === this.elementFromPoint(0, 0)) {\n                        return top;\n                    }\n                }\n\n                return null;\n            },\n            /**\n             * get current modal element\n             *\n             * @return {?Element}\n             */\n            get $modalElement() {\n                // noinspection CssInvalidPseudoSelector\n                const modals = this.querySelectorAll(':modal');\n                const top = this.elementFromPoint(0, 0);\n\n                // ':modal' is DOM order, but not necessarily modal in that order\n                return Array.prototype.find.call(modals, e => e === top) ?? null;\n            },\n        },\n        [[HTMLElement.name, $NodeList.name]]: /** @lends HTMLElement.prototype */{\n            /**\n             * normalize cssUnit to pixel\n             *\n             * @param {Number|String} cssLength\n             * @return {Number}\n             *\n             * @example\n             * document.body.$cssPixel('2lh');\n             * // 58.2188\n             */\n            $cssPixel(cssLength) {\n                kQuery.logger.assertInstanceOf(cssLength, Number, String)();\n\n                if (typeof (cssLength) === 'number') {\n                    return cssLength;\n                }\n\n                // absolute\n                const value = parseFloat(cssLength);\n                const unit = cssLength.replace(/^-?[0-9.]+/, '');\n                switch (unit) {\n                    case '':\n                        return value;\n                    case 'px':\n                        return value * 1;\n\n                    case 'in':\n                        return value * 96;\n                    case 'pc':\n                        return value * 96 / 6;\n                    case 'pt':\n                        return value * 96 / 6 / 12;\n\n                    case 'cm':\n                        return value * 96 / 2.54;\n                    case 'mm':\n                        return value * 96 / 2.54 / 10;\n                    case 'Q':\n                        return value * 96 / 2.54 / 10 / 4;\n                }\n\n                // relative(very very complex, use actual value)\n                const backup = this.getAttribute('style');\n                try {\n                    this.style.marginBottom = cssLength;\n                    return parseFloat(this.$window.getComputedStyle(this).marginBottom);\n                }\n                finally {\n                    if (backup == null) {\n                        this.removeAttribute('style');\n                    }\n                    else {\n                        this.setAttribute('style', backup);\n                    }\n                }\n            },\n            /**\n             * get left/top absolute/relative node\n             *\n             * @param {{relative?: Boolean, margin?: Boolean}} [options={}]\n             * @return {{left: Number, top: Number}}\n             */\n            $offset(options = {}) {\n                options = Object.assign({\n                    relative: false,\n                    margin: false,\n                }, options);\n                kQuery.logger.assertInstanceOf(options, Object)();\n\n                let marginLeft = 0;\n                let marginTop = 0;\n                if (!options.margin) {\n                    const cstyle = this.$window.getComputedStyle(this);\n                    marginLeft = parseFloat(cstyle.marginLeft);\n                    marginTop = parseFloat(cstyle.marginTop);\n                }\n\n                if (options.relative) {\n                    return {\n                        left: this.offsetLeft - marginLeft,\n                        top: this.offsetTop - marginTop,\n                    };\n                }\n\n                const box = this.getBoundingClientRect();\n                return {\n                    left: box.left + window.scrollX - document.documentElement.clientLeft - marginLeft,\n                    top: box.top + window.scrollY - document.documentElement.clientTop - marginTop,\n                };\n            },\n            /**\n             * get width/height irrespective of css\n             *\n             * ```\n             * \u250Cmargin\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                                                                              \u2502\n             * \u2502   \u250Cborder\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n             * \u2502   \u2502                                                                    \u2502   \u2502\n             * \u2502   \u2502   \u250Cpadding \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252CSB\u2510   \u2502   \u2502\n             * \u2502   \u2502   \u2502                                                      \u2502  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u2502   \u250Ccontent\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u2502   \u2502                                                 \u2502  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u2502   \u2514-\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u2502                                                      \u2502  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2524   \u2502   \u2502\n             * \u2502   \u2502   \u251Cscroll bar\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u2502   \u2502\n             * \u2502   \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502   \u2502\n             * \u2502   \u2502                                                                    \u2502   \u2502\n             * \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n             * \u2502                                                                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * ```\n             *\n             * @param {String|{scroll?: Boolean, margin?: Boolean, border?: Boolean, padding?: Boolean, scrollbar?: Boolean}} [options={}]\n             * @return {{width: Number, height: Number}}\n             */\n            $size(options = {}) {\n                if (typeof (options) === 'string') {\n                    const presets = {\n                        '': {\n                            scrollbar: true,\n                        },\n                        client: {\n                            padding: true,\n                        },\n                        inner: {\n                            padding: true,\n                            scrollbar: true,\n                        },\n                        offset: {\n                            padding: true,\n                            border: true,\n                        },\n                        outer: {\n                            padding: true,\n                            border: true,\n                            scrollbar: true,\n                        },\n                        margin: {\n                            padding: true,\n                            border: true,\n                            margin: true,\n                            scrollbar: true,\n                        },\n                    };\n                    options = presets[options];\n                }\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    scroll: false,\n                    margin: false,\n                    border: false,\n                    padding: false,\n                    scrollbar: false,\n                }, options);\n\n                const box = boxsize(this);\n\n                let width = options.scroll ? this.scrollWidth : box.contentWidth;\n                let height = options.scroll ? this.scrollHeight : box.contentHeight;\n\n                if (options.margin) {\n                    width += box.marginWidth;\n                    height += box.marginHeight;\n                }\n                if (options.border) {\n                    width += box.borderWidth;\n                    height += box.borderHeight;\n                }\n                if (options.padding) {\n                    width += box.paddingWidth;\n                    height += box.paddingHeight;\n                }\n                if (options.scrollbar && !options.scroll) {\n                    width += box.scrollbarWidth;\n                    height += box.scrollbarHeight;\n                }\n\n                return {width, height};\n            },\n            /**\n             * get/set width irrespective of css\n             *\n             * @param {Number|String|{scroll?: Boolean, margin?: Boolean, border?: Boolean, padding?: Boolean, scrollbar?: Boolean}} [options={}]\n             * @return {Number}\n             */\n            $width(options = {}) {\n                if (typeof (options) === 'number' || typeof (options) === 'string') {\n                    if (F.stringIsNaN(options)) {\n                        kQuery.logger.error(`options(${options}) is NaN`);\n                    }\n                    let size = this.$cssPixel(options);\n                    const cstyle = this.$window.getComputedStyle(this);\n                    if (cstyle.boxSizing !== 'border-box') {\n                        const box = boxsize(this);\n                        size -= box.borderWidth + box.paddingWidth;\n                    }\n                    this.style.width = size + 'px';\n                    return size;\n                }\n\n                return this.$size(options).width;\n            },\n            /**\n             * get/set height irrespective of css\n             *\n             * @param {Number|String|{scroll?: Boolean, margin?: Boolean, border?: Boolean, padding?: Boolean, scrollbar?: Boolean}} [options={}]\n             * @return {Number}\n             */\n            $height(options = {}) {\n                if (typeof (options) === 'number' || typeof (options) === 'string') {\n                    if (F.stringIsNaN(options)) {\n                        kQuery.logger.error(`options(${options}) is NaN`);\n                    }\n                    let size = this.$cssPixel(options);\n                    const cstyle = this.$window.getComputedStyle(this);\n                    if (cstyle.boxSizing !== 'border-box') {\n                        const box = boxsize(this);\n                        size -= box.borderHeight + box.paddingHeight;\n                    }\n                    this.style.height = size + 'px';\n                    return size;\n                }\n\n                return this.$size(options).height;\n            },\n            /**\n             * get closest scrollable parent\n             *\n             * @param {{height: Boolean, width: Boolean}} scrollableOptions\n             * @return {?Element}\n             */\n            $scrollParent(scrollableOptions = {height: true, width: true}) {\n                kQuery.logger.assertInstanceOf(scrollableOptions, Object)();\n\n                if (scrollableOptions.height && this.scrollHeight > this.clientHeight) {\n                    return this;\n                }\n                if (scrollableOptions.width && this.scrollWidth > this.clientWidth) {\n                    return this;\n                }\n                return this.parentElement?.$scrollParent(scrollableOptions) ?? null;\n            },\n        },\n        [[DOMRectReadOnly.name]]: /** @lends DOMRectReadOnly.prototype */{\n            /**\n             * contains other Geometry interfaces\n             *\n             * ```\n             * true:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502   \u250Cother \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n             * \u2502   \u2502                    \u2502   \u2502\n             * \u2502   \u2502                    \u2502   \u2502\n             * \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             *\n             * false:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502              \u250Cother \u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2510\n             * \u2502              \u2502              \u2502    \u2502\n             * \u2502              \u2502              \u2502    \u2502\n             * \u2502              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2518\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             *\n             * false:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502                              \u2502    \u250Cother \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502    \u2502                    \u2502\n             * \u2502                              \u2502    \u2502                    \u2502\n             * \u2502                              \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * ```\n             *\n             * @param {DOMRectReadOnly|DOMPointReadOnly} other\n             * @return {Boolean}\n             */\n            $contains(other) {\n                if (other instanceof DOMPointReadOnly) {\n                    return (\n                        this.left <= other.x && other.x <= this.right &&\n                        this.top <= other.y && other.y <= this.bottom\n                    );\n                }\n                if (other instanceof DOMRectReadOnly) {\n                    return (\n                        this.$contains(new DOMPoint(other.left, other.top)) &&\n                        this.$contains(new DOMPoint(other.right, other.top)) &&\n                        this.$contains(new DOMPoint(other.left, other.bottom)) &&\n                        this.$contains(new DOMPoint(other.right, other.bottom))\n                    );\n                }\n                throw new Error(`Unknown type(${other.constructor.name})`);\n            },\n            /**\n             * intersect other Geometry interfaces\n             *\n             * ```\n             * true:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502   \u250Cother \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n             * \u2502   \u2502                    \u2502   \u2502\n             * \u2502   \u2502                    \u2502   \u2502\n             * \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             *\n             * true:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502              \u250Cother \u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2510\n             * \u2502              \u2502              \u2502    \u2502\n             * \u2502              \u2502              \u2502    \u2502\n             * \u2502              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2518\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             *\n             * false:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502                              \u2502    \u250Cother \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502    \u2502                    \u2502\n             * \u2502                              \u2502    \u2502                    \u2502\n             * \u2502                              \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * ```\n             *\n             * @param {DOMRectReadOnly|DOMPointReadOnly} other\n             * @return {Boolean}\n             */\n            $intersects(other) {\n                if (other instanceof DOMPointReadOnly) {\n                    return (\n                        this.left <= other.x && other.x <= this.right &&\n                        this.top <= other.y && other.y <= this.bottom\n                    );\n                }\n                if (other instanceof DOMRectReadOnly) {\n                    return (\n                        this.$intersects(new DOMPoint(other.left, other.top)) ||\n                        this.$intersects(new DOMPoint(other.right, other.top)) ||\n                        this.$intersects(new DOMPoint(other.left, other.bottom)) ||\n                        this.$intersects(new DOMPoint(other.right, other.bottom))\n                    );\n                }\n                throw new Error(`Unknown type(${other.constructor.name})`);\n            },\n        },\n    };\n}\n", "import {$NodeList, Nullable, Promise, Timer, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function effects(kQuery) {\n    const handleArguments = function (args) {\n        if (typeof (args[0]) === 'number') {\n            args[1] ??= {};\n            args[1].duration = args[0];\n            args[0] = args[1];\n        }\n        return Object.assign({\n            initial: {},\n            reset: true,\n        }, args[0]);\n    };\n\n    const nodeStyleBackup = new WeakMap();\n    const nodeWillChangeBackup = new WeakMap();\n\n    const willChangeTimer = new Timer();\n    willChangeTimer.addEventListener('alarm', function () {\n        for (const [e, backup] of nodeWillChangeBackup.entries()) {\n            e.style.setProperty('will-change', backup);\n        }\n        nodeWillChangeBackup.clear();\n    });\n\n    return {\n        [[Element.name, $NodeList.name]]: /** @lends Element.prototype */{\n            /**\n             * change css will-change property\n             *\n             * changes are undone after a certain amount of time\n             *\n             * @param {String|Array} value\n             * @param {Number} [timeout=1000]\n             * @return {this}\n             */\n            $willChange(value, timeout = 1000) {\n                kQuery.logger.assertInstanceOf(value, String, Array)();\n                kQuery.logger.assertInstanceOf(timeout, Number)();\n\n                value = value instanceof Array ? value : [value];\n\n                const current = this.style.getPropertyValue('will-change');\n                nodeWillChangeBackup.getOrSet(this, () => current);\n                if (current) {\n                    value.push(current);\n                }\n\n                this.style.setProperty('will-change', [...new Set(value)].join(','));\n\n                // will-change should be set collectively\n                willChangeTimer.restart(timeout, 1);\n\n                return this;\n            },\n            /**\n             * change css with transition\n             *\n             * options.initial: first css styles\n             * options.reset: reset all when finish\n             * options.duration: reference transition css\n             * options.timing: reference transition css\n             *\n             * @param {Object} properties\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $transition(properties, options) {\n                kQuery.logger.assertInstanceOf(properties, Object)();\n                kQuery.logger.assertInstanceOf(options, Nullable, Object)();\n\n                options = Object.assign({\n                    initial: {},\n                    reset: false,\n                    duration: 400,\n                    timing: 'ease',\n                }, options);\n\n                const current = nodeStyleBackup.getOrSet(this, () => ({\n                    count: 0,\n                    style: this.getAttribute('style'),\n                    transitionValue: this.style.getPropertyValue('transition') ?? '',\n                    transitionPriority: this.style.getPropertyPriority('transition') ?? '',\n                }));\n                current.count++;\n\n                for (const [css, value] of Object.entries(options.initial)) {\n                    this.style.setProperty(css, value, 'important');\n                }\n                this.getClientRects(); // force reflow/repaint\n\n                const currentTransitions = (this.style.getPropertyValue('transition') ?? '').split(',').filter((v) => v);\n                for (const [css, value] of Object.entries(properties)) {\n                    this.style.setProperty(css, value, 'important');\n                    currentTransitions.push(`${css} ${options.duration}ms ${options.timing}`);\n                }\n                this.style.setProperty('transition', currentTransitions.join(','), 'important');\n\n                let resolve, reject;\n                const promise = new Promise((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                const complete = () => {\n                    this.removeEventListener('transitionend', listener);\n\n                    const current = nodeStyleBackup.get(this);\n                    if (--current.count === 0) {\n                        nodeStyleBackup.delete(this);\n\n                        if (options.reset) {\n                            this.setAttribute('style', current.style);\n                        }\n                        else {\n                            this.style.setProperty('transition', current.transitionValue, current.transitionPriority);\n                            for (const [css, value] of Object.entries(properties)) {\n                                this.style.setProperty(css, value, '');\n                            }\n                        }\n                    }\n                };\n                const queue = new Set(Object.keys(properties));\n                const listener = (e) => {\n                    queue.delete(e.propertyName);\n                    if (queue.size === 0) {\n                        clearTimeout(timer);\n                        complete();\n                        resolve(true);\n                    }\n                };\n                const timer = setTimeout(function () {\n                    complete();\n                    resolve(false);\n                    //reject(this);\n                }, options.duration + 32);\n                this.addEventListener('transitionend', listener);\n                return promise;\n            },\n            /**\n             * fade in element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             *\n             * @example\n             * node.hidden = false;\n             * await node.$fadeIn();\n             */\n            async $fadeIn(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    opacity: 0,\n                });\n                return this.$transition({\n                    opacity: cstyle.opacity,\n                }, opts);\n            },\n            /**\n             * fade out element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             *\n             * @example\n             * await node.$fadeOut();\n             * node.hidden = true;\n             */\n            async $fadeOut(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    opacity: cstyle.opacity,\n                });\n                return this.$transition({\n                    opacity: 0,\n                }, opts);\n            },\n            /**\n             * slide to down element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $slideDown(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    overflow: 'hidden',\n                    height: 0,\n                    \"margin-top\": 0,\n                    \"margin-bottom\": 0,\n                    \"padding-top\": 0,\n                    \"padding-bottom\": 0,\n                });\n                return this.$transition({\n                    height: parseFloat(cstyle.height),\n                    \"margin-top\": parseFloat(cstyle.marginTop),\n                    \"margin-bottom\": parseFloat(cstyle.marginBottom),\n                    \"padding-top\": parseFloat(cstyle.paddingTop),\n                    \"padding-bottom\": parseFloat(cstyle.paddingBottom),\n                }, opts);\n            },\n            /**\n             * slide to top element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $slideUp(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    overflow: 'hidden',\n                    height: parseFloat(cstyle.height),\n                    \"margin-top\": parseFloat(cstyle.marginTop),\n                    \"margin-bottom\": parseFloat(cstyle.marginBottom),\n                    \"padding-top\": parseFloat(cstyle.paddingTop),\n                    \"padding-bottom\": parseFloat(cstyle.paddingBottom),\n                });\n                return this.$transition({\n                    height: 0,\n                    \"margin-top\": 0,\n                    \"margin-bottom\": 0,\n                    \"padding-top\": 0,\n                    \"padding-bottom\": 0,\n                }, opts);\n            },\n            /**\n             * slide to right element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $slideRight(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    overflow: 'hidden',\n                    width: 0,\n                    \"margin-left\": 0,\n                    \"margin-right\": 0,\n                    \"padding-left\": 0,\n                    \"padding-right\": 0,\n                    \"max-height\": parseFloat(cstyle.height),\n                });\n                return this.$transition({\n                    width: parseFloat(cstyle.width),\n                    \"margin-left\": parseFloat(cstyle.marginLeft),\n                    \"margin-right\": parseFloat(cstyle.marginRight),\n                    \"padding-left\": parseFloat(cstyle.paddingLeft),\n                    \"padding-right\": parseFloat(cstyle.paddingRight),\n                }, opts);\n            },\n            /**\n             * slide to left element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $slideLeft(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    overflow: 'hidden',\n                    width: parseFloat(cstyle.width),\n                    \"margin-left\": parseFloat(cstyle.marginLeft),\n                    \"margin-right\": parseFloat(cstyle.marginRight),\n                    \"padding-left\": parseFloat(cstyle.paddingLeft),\n                    \"padding-right\": parseFloat(cstyle.paddingRight),\n                    \"max-height\": parseFloat(cstyle.height),\n                });\n                return this.$transition({\n                    width: 0,\n                    \"margin-left\": 0,\n                    \"margin-right\": 0,\n                    \"padding-left\": 0,\n                    \"padding-right\": 0,\n                }, opts);\n            },\n        },\n    };\n}\n", "import {$NodeList, F, Nullable} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function forms(kQuery) {\n    // 01234567890123456789012345678\n    // 2000-01-23T12:34:56.789+09:00\n    // 2000-W12-7\n    const toLocalISOString = function (date, format) {\n        const local = new Date(+date - date.getTimezoneOffset() * 6e4);\n\n        if (format === 'notz') {\n            return local.toISOString().slice(0, -1);\n        }\n        if (format === 'full') {\n            const offset = date.getTimezoneOffset();\n            const absOffset = Math.abs(offset);\n            const offsetSign = offset > 0 ? '-' : '+';\n            const offsetHour = Math.trunc(absOffset / 60);\n            const offsetMinute = absOffset % 60;\n            const timezone = `${offsetSign}${('' + offsetHour).padStart(2, '0')}:${('' + offsetMinute).padStart(2, '0')}`;\n            return local.toISOString().slice(0, -1) + timezone;\n        }\n        if (format === 'week') {\n            const day1 = 24 * 60 * 60 * 1000;\n            const day3 = day1 * 3;\n            const day7 = day1 * 7;\n\n            const first = new Date(Math.trunc((+local + day3) / day7) * day7);\n            const firstYear = first.getUTCFullYear();\n            const weekNumber = Math.trunc((first - new Date(`${firstYear}-01-01T00:00:00Z`)) / day7) + 1;\n            const dayNumber = (local.getUTCDay() + 6) % 7 + 1;\n            return `${firstYear}-W${('' + weekNumber).padStart(2, '0')}-${dayNumber}`;\n        }\n    };\n\n    return {\n        [[FormData.name]]: /** @lends FormData.prototype */{\n            /**\n             * from Entries\n             *\n             * @param {Object} values\n             */\n            $appendFromEntries(values) {\n                for (const [name, value] of F.objectToEntries(values)) {\n                    this.append(name, value);\n                }\n                return this;\n            },\n            /**\n             * to SearchParam(unset File entry)\n             *\n             * @return {URLSearchParams}\n             */\n            $toSearchParams() {\n                const result = new URLSearchParams(this);\n                for (const [name, value] of F.objectToEntries(this)) {\n                    if (value instanceof Blob) {\n                        kQuery.logger.info(`Unset ${name} because file`);\n                        // browser behavior seems to be empty text, not deleted\n                        // result.delete(name);\n                        result.set(name, '');\n                    }\n                }\n                return result;\n            },\n            /**\n             * to Object\n             *\n             * @return {Object}\n             */\n            $toObject() {\n                const indexes = {};\n                const entries = F.objectToEntries(this).map(([name, value]) => {\n                    let names = name.split(/\\]\\[|\\[|\\]/);\n                    if (names.length > 1) {\n                        names.pop();\n                    }\n\n                    const parents = [];\n                    for (const [i, subname] of names.entries()) {\n                        if (!subname.length) {\n                            const key = parents.join('[@]');\n                            indexes[key] ??= 0;\n                            names[i] = indexes[key]++;\n                        }\n                        parents.push(subname);\n                    }\n\n                    return [names, value];\n                });\n\n                return F.entriesToObject(entries, false);\n            },\n            /**\n             * to JSON\n             *\n             * @param {String|Function} [fileConverter='base64']\n             * @return {Promise<String>}\n             */\n            async $json(fileConverter = 'base64') {\n                const object = await F.objectWalkRecursive(this.$toObject(), async function (value) {\n                    if (value instanceof Blob) {\n                        value = (function () {\n                            if (fileConverter === 'text') {\n                                return value.$text();\n                            }\n                            if (fileConverter === 'base64') {\n                                return value.$base64();\n                            }\n                            if (typeof (fileConverter) === 'function') {\n                                return fileConverter(value);\n                            }\n                            throw new Error(`Unknown convert(${fileConverter})`);\n                        })();\n                    }\n                    return value;\n                });\n                return JSON.stringify(object);\n            },\n        },\n        [[HTMLInputElement.name, $NodeList.name]]: /** @lends HTMLInputElement.prototype */{\n            /**\n             * get input value as date\n             *\n             * datetime-like's valueAsDate is UTC timezone, but this property is local timezone\n             *\n             * @descriptor get\n             *\n             * @return {Date}\n             *\n             * @example\n             * <input id=\"time\" type=\"time\">\n             *\n             * $('#time').value = '12:34';\n             * $('#time').valueAsDate;     // Thu Jan 01 1970 21:34:00 GMT+0900\n             * $('#time').$valueAsDate;    // Thu Jan 01 1970 12:34:00 GMT+0900\n             */\n            get $valueAsDate() {\n                // precdondition\n                if (!this.value) {\n                    return null;\n                }\n\n                // datetime-local doesn't have valueAsDate\n                if (this.type === 'datetime-local') {\n                    return new Date(this.value);\n                }\n\n                // other.valueAsDate is UTC\n                if ('valueAsDate' in this) {\n                    return new Date(this.valueAsDate.getTime() + this.valueAsDate.getTimezoneOffset() * 6e4);\n                }\n            },\n            /**\n             * set input value as date\n             *\n             * datetime-like's valueAsDate is UTC timezone, but this property is local timezone\n             * and triming value the format(by step|value)\n             *\n             * @descriptor set\n             *\n             * @param {?Date} value\n             *\n             * @example\n             * <input id=\"time0\" type=\"time\" step=\"\">\n             * <input id=\"time1\" type=\"time\" step=\"1\">\n             *\n             * $('#time0').valueAsDate = new Date('2014-12-24T12:34:56.789');\n             * $('#time1').valueAsDate = new Date('2014-12-24T12:34:56.789');\n             * $('#time0').value; // '03:34:56.789'\n             * $('#time1').value; // '03:34:56.789'\n             *\n             * $('#time0').$valueAsDate = new Date('2014-12-24T12:34:56.789');\n             * $('#time1').$valueAsDate = new Date('2014-12-24T12:34:56.789');\n             * $('#time0').value; // '12:34'\n             * $('#time1').value; // '12:34:56'\n             */\n            set $valueAsDate(value) {\n                // precdondition\n                if (value == null) {\n                    return;\n                }\n                if (!(value instanceof Date)) {\n                    // emulate native error\n                    this.valueAsDate = value;\n                    return;\n                }\n\n                // datetime-local doesn't have valueAsDate\n                if (this.type === 'datetime-local') {\n                    const strtime = toLocalISOString(value, 'notz');\n                    if (this.value !== '') {\n                        this.$value = strtime.slice(0, this.value.length);\n                    }\n                    else if (!this.step) {\n                        this.$value = strtime.slice(0, 16);\n                    }\n                    else if (this.step.includes('.')) {\n                        this.$value = strtime.slice(0, 23);\n                    }\n                    else {\n                        this.$value = strtime.slice(0, 19);\n                    }\n                    return;\n                }\n\n                // other.valueAsDate is UTC\n                if (this.type === 'month') {\n                    return this.$value = toLocalISOString(value, 'notz').slice(0, 7);\n                }\n                if (this.type === 'week') {\n                    return this.$value = toLocalISOString(value, 'week').slice(0, 8);\n                }\n                if (this.type === 'date') {\n                    return this.$value = toLocalISOString(value, 'notz').slice(0, 10);\n                }\n                if (this.type === 'time') {\n                    const strtime = toLocalISOString(value, 'notz');\n                    if (this.value !== '') {\n                        this.$value = strtime.slice(11, 11 + this.value.length);\n                    }\n                    else if (!this.step) {\n                        this.$value = strtime.slice(11, 16);\n                    }\n                    else if (this.step.includes('.')) {\n                        this.$value = strtime.slice(11, 23);\n                    }\n                    else {\n                        this.$value = strtime.slice(11, 19);\n                    }\n                }\n            },\n            /**\n             * get input value as number\n             *\n             * datetime-like delegates to $valueAsDate, and other work the same as native\n             *\n             * @descriptor get\n             *\n             * @return {Number}\n             */\n            get $valueAsNumber() {\n                // precdondition\n                if (!this.value) {\n                    return Number.NaN;\n                }\n\n                if (['datetime-local', 'month', 'week', 'date', 'time'].includes(this.type)) {\n                    return this.$valueAsDate.getTime();\n                }\n                if ('valueAsNumber' in this) {\n                    return this.valueAsNumber;\n                }\n\n                return Number.NaN;\n            },\n            /**\n             * set input value as number\n             *\n             * datetime-like delegates to $valueAsDate, and other work the same as native\n             *\n             * @descriptor set\n             *\n             * @param {?Number} value\n             */\n            set $valueAsNumber(value) {\n                // precdondition\n                if (isNaN(value) || value == null) {\n                    return;\n                }\n\n                if (['datetime-local', 'month', 'week', 'date', 'time'].includes(this.type)) {\n                    return this.$valueAsDate = new Date(+value);\n                }\n                if ('valueAsNumber' in this) {\n                    this.valueAsNumber = value;\n                }\n            },\n        },\n        [[HTMLInputElement.name, RadioNodeList.name, $NodeList.name]]: /** @lends HTMLInputCheckableElement.prototype */{\n            /**\n             * get input indeterminate\n             *\n             * returns undefined if not checkbox and supports RadioNodeList.\n             *\n             * @descriptor get\n             *\n             * @return {?Boolean}\n             */\n            get $indeterminate() {\n                if (this instanceof RadioNodeList) {\n                    return this.value === '';\n                }\n                if (this.type !== 'checkbox') {\n                    return undefined;\n                }\n                return this.indeterminate;\n            },\n            /**\n             * set input indeterminate\n             *\n             * accepts Array of Boolean\n             * - empty(e.g.[null, undefined])\n             *   - indeterminate=false\n             *   - checked no touch\n             * - all false(e.g.[false, ..., false])\n             *   - indeterminate=false\n             *   - checked=false\n             * - all true(e.g.[true, ..., true])\n             *   - indeterminate=false\n             *   - checked=true\n             * - mixed(e.g.[true, false, true])\n             *   - indeterminate=true\n             *   - checked no touch\n             *\n             * @descriptor set\n             *\n             * @param {Boolean|Boolean[]} value\n             */\n            set $indeterminate(value) {\n                kQuery.logger.assertInstanceOf(value, Boolean, Array)();\n\n                if (this instanceof RadioNodeList) {\n                    if (!value) {\n                        kQuery.logger.error(`RadioNodeList's $indeterminate is readonly`);\n                    }\n                    this.forEach(e => e.checked = false);\n                    return;\n                }\n\n                if (this.type !== 'checkbox') {\n                    return;\n                }\n                if (!(value instanceof Array)) {\n                    this.indeterminate = value;\n                    return;\n                }\n\n                value = value.filter(v => v != null);\n                // empty\n                if (value.length === 0) {\n                    this.indeterminate = false;\n                }\n                // all false\n                else if (value.every(v => !v)) {\n                    this.indeterminate = false;\n                    this.$value = null;\n                }\n                // all true\n                else if (value.every(v => v)) {\n                    this.indeterminate = false;\n                    this.$value = this.value;\n                }\n                // mixed\n                else {\n                    this.indeterminate = true;\n                }\n            },\n        },\n        [[HTMLInputElement.name, HTMLTextAreaElement.name, HTMLSelectElement.name, $NodeList.name]]: /** @lends HTMLInputLikeElement.prototype */{\n            /**\n             * get input default value\n             *\n             * Unify the individual implementations of input\n             *\n             * - simple input: defaultValue\n             * - radiobox/checkbox: defaultChecked\n             * - select: defaultSelected\n             * - file: always null or []\n             *\n             * @descriptor get\n             *\n             * @return {null|String|Array}\n             */\n            get $defaultValue() {\n                if (['select-one'].includes(this.type)) {\n                    return Array.prototype.find.call(this.options, option => option.defaultSelected)?.value ?? null;\n                }\n                if (['select-multiple'].includes(this.type)) {\n                    return [...this.options].filter(option => option.defaultSelected).map(option => option.value);\n                }\n                if (['radio', 'checkbox'].includes(this.type)) {\n                    return this.defaultChecked ? this.value : null;\n                }\n                if (['file'].includes(this.type)) {\n                    // HTML specifications is no default for file, so it always returns null to avoid unnecessary confusion\n                    return this.multiple ? [] : null;\n                }\n                if (this.type) {\n                    return this.defaultValue;\n                }\n            },\n            /**\n             * set input default value\n             *\n             * - simple input: defaultValue\n             * - radiobox/checkbox: defaultChecked\n             * - select: defaultSelected\n             * - file: do nothing\n             *\n             * @descriptor set\n             */\n            set $defaultValue(value) {\n                if (['select-one'].includes(this.type)) {\n                    value = '' + value;\n                    for (const option of this.options) {\n                        option.defaultSelected = option.value === value;\n                    }\n                }\n                else if (['select-multiple'].includes(this.type)) {\n                    const values = (value instanceof Array ? value : [value]).map(v => '' + v);\n                    for (const option of this.options) {\n                        option.defaultSelected = values.includes(option.value);\n                    }\n                }\n                else if (['radio', 'checkbox'].includes(this.type)) {\n                    this.defaultChecked = this.value === value;\n                }\n                else if (['file'].includes(this.type)) {\n                    // do nothing\n                }\n                else if (this.type) {\n                    this.defaultValue = value;\n                }\n            },\n            /**\n             * get input value\n             *\n             * - simple input: String\n             * - radiobox: checked String or null\n             * - checkbox: checked String or null\n             * - select(single): selected String or null\n             * - select(multiple): selected Array always\n             * - file(single): File or null\n             * - file(multiple): FileList always\n             *\n             * @descriptor get\n             *\n             * @return {null|String|Array|File|FileList}\n             */\n            get $value() {\n                if (['select-one'].includes(this.type)) {\n                    // https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/value\n                    // A string containing the value of the first selected <option> element in this <select> element,\n                    // or the empty string if no options are selected.\n                    return Array.prototype.find.call(this.options, option => option.selected)?.value ?? null;\n                }\n                if (['select-multiple'].includes(this.type)) {\n                    return [...this.options].filter(option => option.selected).map(option => option.value);\n                }\n                if (['radio', 'checkbox'].includes(this.type)) {\n                    return this.checked ? this.value : null;\n                }\n                if (['file'].includes(this.type)) {\n                    return this.multiple ? this.files : this.files[0] ?? null;\n                }\n                if (this.type) {\n                    return this.value;\n                }\n            },\n            /**\n             * set input value\n             *\n             * - simple input: must be String\n             * - radiobox: must be String\n             * - checkbox: must be String\n             * - select(single): must be String\n             * - select(multiple): must be Array\n             * - file(single): must be File|FileList\n             * - file(multiple): must be FileList\n             *\n             * this trigger $change event\n             *\n             * @descriptor set\n             */\n            set $value(value) {\n                let changed = false;\n\n                if (['select-one'].includes(this.type)) {\n                    if (this.value !== value) {\n                        this.value = value;\n                        changed = true;\n                    }\n                }\n                else if (['select-multiple'].includes(this.type)) {\n                    const values = (value instanceof Array ? value : [value]).filter(v => v !== null).map(v => '' + v);\n                    for (const option of this.options) {\n                        const selected = values.includes(option.value);\n                        if (option.selected !== selected) {\n                            option.selected = selected;\n                            changed = true;\n                        }\n                    }\n                }\n                else if (['radio', 'checkbox'].includes(this.type)) {\n                    const checked = this.value === value;\n                    if (this.checked !== checked) {\n                        this.checked = checked;\n                        changed = true;\n                    }\n                }\n                else if (['file'].includes(this.type)) {\n                    const files = Array.from(this.files, (f) => f.name).join('/');\n                    if (value instanceof File) {\n                        if (value.name !== files) {\n                            const dataTransfer = new DataTransfer();\n                            dataTransfer.items.add(value);\n                            this.files = dataTransfer.files;\n                            changed = true;\n                        }\n                    }\n                    else if (value instanceof FileList) {\n                        if (Array.from(value, (f) => f.name).join('/') !== files) {\n                            this.files = value;\n                            changed = true;\n                        }\n                    }\n                }\n                else if (this.type) {\n                    if (this.value !== value) {\n                        this.value = value;\n                        changed = true;\n                    }\n                }\n\n                if (changed) {\n                    this.dispatchEvent(new Event('$change', {\n                        bubbles: true,\n                    }));\n                }\n            },\n            /**\n             * clear input value\n             *\n             * clear doesn't mean reset. all input set blank, uncheck, unselect, empty file\n             *\n             * @return {this}\n             */\n            $clear() {\n                if (['select-one', 'select-multiple'].includes(this.type)) {\n                    this.$value = null;\n                }\n                else if (['radio', 'checkbox'].includes(this.type)) {\n                    this.$value = null;\n                }\n                else if (['file'].includes(this.type)) {\n                    this.$value = new DataTransfer().files;\n                }\n                else if (this.type) {\n                    this.$value = '';\n                }\n\n                return this;\n            },\n            /**\n             * writeback value to attribute\n             *\n             * @return {this}\n             */\n            $resetAttribute() {\n                if (['select-one', 'select-multiple'].includes(this.type)) {\n                    Array.from(this.options).forEach(option => option.toggleAttribute('selected', option.selected));\n                }\n                else if (this.type === 'textarea') {\n                    this.textContent = this.value;\n                }\n                else if (['radio', 'checkbox'].includes(this.type)) {\n                    this.toggleAttribute('checked', this.checked);\n                }\n                else {\n                    this.setAttribute('value', this.value);\n                }\n\n                return this;\n            },\n        },\n        [[HTMLSelectElement.name, HTMLDataListElement.name, $NodeList.name]]: /** @lends HTMLOptionableElement.prototype */{\n            /**\n             * set option elements\n             *\n             * preserveValue\n             * - false: fully replace all options, selection state is lost\n             * - true: fully replace all options, selection state is kept\n             * - String: keep selected options and insertion method\n             *\n             * @param {HTMLOptionElement[]|HTMLOptGroupElement[]|Object} options\n             * @param {Boolean|String} [preserveValue]\n             * @return {this}\n             *\n             * @example\n             * // object mode\n             * $('select').$options({\n             *     a1: 'A1',\n             *     a2: {label: 'A1', 'data-custom': 'custom'},\n             *     b1: {label: 'B1', optgroup: 'optgroup'},\n             *     b2: {label: 'B2', optgroup: 'optgroup'},\n             *     c1: document.$createElement('option', {label: 'C1'}),\n             * });\n             * // array mode\n             * $('select').$options([\n             *     'a1',\n             *     {value: 'a1', label: 'A1', 'data-custom': 'custom'},\n             *     {value: 'b1', label: 'B1', optgroup: 'optgroup'},\n             *     {value: 'b2', label: 'B2', optgroup: 'optgroup'},\n             *     document.$createElement('option', {value: 'c1', label: 'C1'}),\n             * ]);\n             */\n            $options(options, preserveValue = undefined) {\n                kQuery.logger.assertInstanceOf(options, Object, Array)();\n                preserveValue ??= this instanceof HTMLSelectElement ? 'append' : null;\n                kQuery.logger.assertInstanceOf(preserveValue, Nullable, Boolean, String)();\n\n                // browser behaves scroll when scrolling is enabled\n                // - scroll to the last element\n                // - but not every time, sometimes it scrolls to selected element\n                this.$willChange('scroll-position');\n                const scroll = {\n                    top: this.scrollTop,\n                    left: this.scrollLeft,\n                };\n                const recover = () => {\n                    this.scrollTop = scroll.top;\n                    this.scrollLeft = scroll.left;\n                };\n\n                const build = (data) => {\n                    const optgroups = {};\n                    const options = [];\n                    for (let [value, label] of F.objectToEntries(data)) {\n                        if (label instanceof Array) {\n                            options.push(this.$document.$createElement('optgroup', {label: value}, ...build(label)));\n                        }\n                        else if (label instanceof Node) {\n                            label.value ||= value;\n                            options.push(label);\n                        }\n                        else if (F.objectIsPlain(label)) {\n                            label = {...label};\n                            label.value ??= value;\n                            label.title ??= label.label;\n                            if (label.optgroup) {\n                                const optgroup = label.optgroup;\n                                delete label.optgroup;\n                                if (!optgroups[optgroup]) {\n                                    optgroups[optgroup] = this.$document.$createElement('optgroup', {label: optgroup});\n                                    options.push(optgroups[optgroup]);\n                                }\n                                optgroups[optgroup].append(this.$document.$createElement('option', label, label.label));\n                            }\n                            else {\n                                options.push(this.$document.$createElement('option', label, label.label));\n                            }\n                        }\n                        else {\n                            options.push(this.$document.$createElement('option', {value: value, title: label}, label));\n                        }\n                    }\n                    return options;\n                };\n                options = build(options);\n\n                const $value = preserveValue ? this.$value : null;\n\n                if (preserveValue && typeof (preserveValue) === 'string') {\n                    const $values = ($value instanceof Array ? $value : [$value]).filter(v => v != null).map(v => '' + v);\n\n                    // remove not preserve\n                    this.$$('option').$except(o => $values.includes(o.value)).forEach(e => e.remove());\n                    this.$$('optgroup').$except(o => o.$contains('option')).forEach(e => e.remove());\n                    this.$$('hr.kQuery-option-separator').forEach(e => e.remove());\n\n                    // merge optgroup\n                    for (const optgroup of this.$$('optgroup')) {\n                        const nexts = optgroup.$nextElements(`optgroup[label=\"${F.stringEscape(optgroup.label ?? '', 'selector')}\"]`);\n                        for (const next of [...nexts]) {\n                            optgroup[preserveValue](...next.$$('option'));\n                            if (!next.$contains('option')) {\n                                next.remove();\n                            }\n                        }\n                    }\n\n                    // insert new options\n                    this[preserveValue](this.$document.$createElement('hr', {class: 'kQuery-option-separator'}));\n                    this[preserveValue](...options);\n\n                    // remove current option from new options\n                    const filter = function (options) {\n                        return options.filter(o => {\n                            if (o instanceof HTMLOptionElement && $values.includes(o.value)) {\n                                o.remove();\n                                return false;\n                            }\n                            if (o instanceof HTMLOptGroupElement) {\n                                if (!filter([...o.$$('option')]).length) {\n                                    o.remove();\n                                    return false;\n                                }\n                            }\n                            return true;\n                        });\n                    };\n                    filter(options);\n                }\n                else {\n                    this.$replaceChildren(...options);\n                }\n\n                if (preserveValue) {\n                    this.$value = $value;\n                }\n\n                // first animation frame: browser scrolls to selected option\n                // second animation frame: recover scroll position\n                requestAnimationFrame(() => requestAnimationFrame(recover));\n\n                return this;\n            },\n        },\n        [[HTMLFormElement.name, $NodeList.name]]: /** @lends HTMLFormElement.prototype */{\n            /**\n             * writeback value to attribute\n             *\n             * @return {this}\n             */\n            $resetAttribute() {\n                this.elements.$resetAttribute();\n                return this;\n            },\n        },\n    };\n}\n", "import {$NodeList, F, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function manipulation(kQuery) {\n    const styleSheetMap = new Map();\n    const renderedNodes = new WeakMap();\n    const normalizeNodes = function (nodes) {\n        return [...nodes].flatMap(node => node instanceof NodeList ? [...node] : node);\n    };\n\n    class Value {\n        constructor(value) {\n            this.value = value;\n        }\n\n        toString() {\n            return '' + this.value;\n        }\n    }\n\n    return {\n        [[Window.name]]: /** @lends Window.prototype */{\n            /**\n             * jQuery like selector\n             *\n             * - Node/NodeList: return as it is\n             * - tag string: create and return Node/NodeList\n             * - selector string: select and return Node/NodeList\n             *\n             * returns if length is 1 then Node else NodeList (this case contains empty list)\n             *\n             * @param {String|Array|Node|NodeList|HTMLCollection} selectorFn\n             * @param {?Document} [ownerDocument]\n             * @return {Node|NodeList}\n             */\n            $query(selectorFn, ownerDocument = null) {\n                ownerDocument ??= (this ?? globalThis).document;\n\n                if (selectorFn instanceof Node || selectorFn instanceof NodeList) {\n                    return selectorFn;\n                }\n                if (selectorFn instanceof HTMLCollection) {\n                    return F.iterableToNodeList(selectorFn);\n                }\n\n                if (selectorFn instanceof Array) {\n                    const recursions = selectorFn.map(e => ownerDocument.defaultView.$query(e, ownerDocument));\n                    const nodes = [...new Set(recursions.flatMap(e => e instanceof Node ? [e] : [...e]))];\n                    return nodes.length === 1 ? nodes[0] : F.iterableToNodeList(nodes);\n                }\n\n                if (typeof (selectorFn) === 'string' && selectorFn.trim().charAt(0) === '<') {\n                    const nodes = ownerDocument.$createNodeListFromHTML(selectorFn.trim());\n                    return nodes.length === 1 ? nodes[0] : nodes;\n                }\n\n                const nodes = ownerDocument.$$(selectorFn);\n                return nodes.length === 1 ? nodes[0] : nodes;\n            },\n        },\n        [[Document.name]]: /** @lends Document.prototype */{\n            /**\n             * create Elements from html string\n             *\n             * @param {String} html\n             * @return {NodeList}\n             *\n             * @example\n             * document.$createNodeListFromHTML('<span>SPAN</span>Text<div>DIV</div>');\n             * // NodeList(3)[<span>SPAN</span>, Text, <div>DIV</div>]\n             */\n            $createNodeListFromHTML(html) {\n                kQuery.logger.assertInstanceOf(html, String)();\n\n                const template = this.createElement('template');\n                template.innerHTML = html;\n                // childNodes is living NodeList\n                return F.iterableToNodeList([...template.content.childNodes]);\n            },\n            /**\n             * create Element from tag, attributes, children\n             *\n             * - tag allows css selector like string\n             *   - but this is experimental\n             * - attributes allows bool for logical attribute\n             * - attributes.data allows nest object, convert to \"data-key=value\"\n             * - attributes.class allows array, convert to \"a b c\"\n             * - attributes.style allows object, convert to \"css:value\"\n             *\n             * @param {String} tag\n             * @param {Object<String, any|Object<String, String>>} [attributes={}]\n             * @param {...String|Node|NodeList} [children=[]]\n             * @return {Element}\n             *\n             * @example\n             * document.$createElement('span', {\n             *     logicalFalse: false,\n             *     logicalTrue: true,\n             *     data: {\n             *         a: 'a',\n             *         b: 'b',\n             *     },\n             *     class: ['a', 'b', 'c'],\n             *     style: {\n             *         color: 'red',\n             *         backgroundColor: 'red',\n             *     },\n             * }, 'plain', 'a>b');\n             * // <span logicaltrue=\"\" data-a=\"a\" data-b=\"b\" class=\"a b c\" style=\"color:red;background-color:red;\">plaina&gt;b</span>\n             *\n             * document.$createElement('span#id.c1.c2[a=A][b=B]');\n             * // <span id=\"id\" class=\"c1 c2\" a=\"A\" b=\"B\"></span>\n             */\n            $createElement(tag, attributes = {}, ...children) {\n                kQuery.logger.assertInstanceOf(tag, String)();\n                kQuery.logger.assertInstanceOf(attributes, Object)();\n\n                attributes.class = F.objectToClasses(attributes.class ?? []);\n\n                // tag#id.klass[attr=value] -> tag, attributes{id: \"id\", class: [\"klass\"], attr: \"value\"}\n                tag = tag.replaceAll(/\\#([-_0-9a-z]+)/ig, function (m0, m1) {\n                    attributes.id = m1;\n                    return '';\n                });\n                tag = tag.replaceAll(/\\.([-_0-9a-z]+)/ig, function (m0, m1) {\n                    attributes.class[m1] = true;\n                    return '';\n                });\n                tag = tag.replaceAll(/\\[([-_0-9a-z]+)(=(.+?))?\\]/ig, function (m0, m1, m2, m3) {\n                    attributes[m1] = m3 ?? '';\n                    return '';\n                });\n\n                const element = this.createElement(tag);\n\n                for (const [name, value] of Object.entries(F.objectToAttributes(attributes))) {\n                    if (typeof (value) === 'boolean') {\n                        element.toggleAttribute(name, value);\n                    }\n                    else {\n                        element.setAttribute(name, value);\n                    }\n                }\n\n                element.$append(...children);\n\n                return element;\n            },\n            /**\n             * create CSSRule\n             *\n             * - CSSRule is live, to change...\n             *   - cssRule.selectorText = 'span[attr=value]'\n             *   - cssRule.styleMap.set('color', 'red')\n             *   - cssRule.style.setProperty('color', 'red', 'important')\n             *   - or same as Element.$style\n             *     - cssRule.$style({color: 'red'})\n             *\n             * @param {?String} [media]\n             * @return {CSSRule|CSSStyleRule}\n             */\n            $createCSSRule(media) {\n                if (!styleSheetMap.has(media)) {\n                    const styleSheet = new CSSStyleSheet({\n                        baseURL: this.location.href,\n                        media: media,\n                    });\n                    styleSheetMap.set(media, styleSheet);\n                    this.adoptedStyleSheets = [...this.adoptedStyleSheets, styleSheet];\n                }\n\n                const styleSheet = styleSheetMap.get(media);\n                const index = styleSheet.insertRule(':root {}');\n                return styleSheet.cssRules.item(index);\n            },\n        },\n        [[HTMLTemplateElement.name, $NodeList.name]]: /** @lends HTMLTemplateElement.prototype */{\n            /**\n             * render template content\n             *\n             * this is experimental, very magical,evil and slow.\n             *\n             * vars:\n             * - Array: per below\n             * - String: text node\n             * - other Object: text node without escape\n             * - plain Object: render recursive\n             *\n             * rendered nodes are auto inserted to after this\n             * if specified insert:null, no inserted\n             *\n             * @param {Object|Object[]} vars\n             * @param {{escape?: String|Function, logical?: String, insert?: String}} [options={}]\n             * @return {NodeList}\n             */\n            $render(vars, options = {}) {\n                options = Object.assign({\n                    escape: 'html',\n                    logical: '---logical<false/>---',\n                    insert: 'after',\n                }, options);\n\n                const tag = function (value) {\n                    if (options.logical) {\n                        if (value === false) {\n                            return options.logical;\n                        }\n                        if (value === true) {\n                            return '';\n                        }\n                    }\n                    if (typeof (value) === 'object' && !(value instanceof Value)) {\n                        return value;\n                    }\n                    if (typeof (options.escape) === 'function') {\n                        return options.escape(value);\n                    }\n                    return F.stringEscape(value, options.escape);\n                };\n\n                const core = function (current, parent) {\n                    if (!current) {\n                        return [];\n                    }\n                    if (!(current instanceof Array)) {\n                        current = [current];\n                    }\n\n                    const elements = [];\n                    for (let [i, value] of current.entries()) {\n                        const fragment = this.content.cloneNode(true);\n\n                        if (F.anyIsPrimitive(value)) {\n                            value = new Value(value);\n                        }\n\n                        // magic values\n                        Object.assign(value, {\n                            $parent: parent,\n                            $index: i,\n                            $length: current.length,\n                            $first: i === 0,\n                            $last: i === current.length - 1,\n                        });\n\n                        // child first and remove\n                        const children = fragment.$$('template[data-slot-name]');\n                        for (const child of children) {\n                            child.after(...core.call(child, value[child.dataset.slotName], value));\n                            child.remove();\n                        }\n\n                        // render\n                        kQuery.logger.assert(() => fragment.$contains(e => !e.$isMetadataContent))();\n                        const template = [...fragment.childNodes].join('');\n                        const html = F.stringRender(template, value, tag);\n                        const nodes = this.$document.$createNodeListFromHTML(html);\n\n                        if (options.logical) {\n                            for (const node of nodes.$$$('*')) {\n                                for (const attribute of Array.from(node.attributes)) {\n                                    if (attribute.value === options.logical) {\n                                        node.attributes.removeNamedItem(attribute.name);\n                                    }\n                                }\n                            }\n                        }\n                        elements.push(...nodes);\n                    }\n\n                    return elements;\n                };\n\n                const elements = core.call(this, vars, null);\n\n                if (options.insert) {\n                    const olds = renderedNodes.reset(this, () => elements) ?? [];\n                    olds.forEach(old => old.remove());\n                    this[options.insert](...elements);\n                }\n\n                return F.iterableToNodeList(elements);\n            },\n        },\n        [[Node.name, $NodeList.name]]: /** @lends Node.prototype */{\n            /**\n             * clone Node\n             *\n             * withEvent:\n             * - false: same as cloneNode(true)\n             * - true: deep clone with event handler\n             *\n             * @param {Boolean} [withEvent = false]\n             * @return {Node}\n             */\n            $clone(withEvent = false) {\n                if (!withEvent) {\n                    return this.cloneNode(true);\n                }\n\n                // clone self\n                const cloned = this.cloneNode(false);\n                for (const ev of this.$events(null, false, false)) {\n                    cloned.$on(ev.type + ev.namespaces.map(ns => `.${ns}`).join(), ev.selector, ev.listener, ev.options);\n                }\n\n                // recursion\n                for (const child of this.childNodes) {\n                    // @todo: What should we do with the $bag...?\n                    if (child instanceof Element) {\n                        cloned.appendChild(child.$clone(true));\n                    }\n                    else {\n                        cloned.appendChild(child.cloneNode(true));\n                    }\n                }\n\n                return cloned;\n            },\n            /**\n             * insert before this\n             *\n             * almost the same as before, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * {!!!insert here!!!}\n             * <this>\n             *     child\n             * </this>\n             */\n            $before(...nodes) {\n                this.before(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * insert first child\n             *\n             * almost the same as prepend, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * <this>\n             *     {!!!insert here!!!}\n             *     child\n             * </this>\n             */\n            $prepend(...nodes) {\n                this.prepend(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * insert specified child\n             *\n             * @param {Number|String|Node|Function} selectorFn\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * <this>\n             *     child\n             *     {!!!insert here!!!}\n             *     child\n             * </this>\n             */\n            $insert(selectorFn, ...nodes) {\n                this.$childElement(selectorFn)?.$before?.(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * insert last child\n             *\n             * almost the same as append, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * <this>\n             *     child\n             *     {!!!insert here!!!}\n             * </this>\n             */\n            $append(...nodes) {\n                this.append(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * insert after this\n             *\n             * almost the same as after, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * <this>\n             *     child\n             * </this>\n             * {!!!insert here!!!}\n             */\n            $after(...nodes) {\n                this.after(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * replace this\n             *\n             * almost the same as replaceWith, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             */\n            $replace(...nodes) {\n                this.replaceWith(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * replace children\n             *\n             * exhange parameter of replaceChild, and variadic\n             * @see https://developer.mozilla.org/docs/Web/API/Node/replaceChild\n             * > The parameter order, new before old, is unusual\n             *\n             * @param {Node} oldChild\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             */\n            $replaceChild(oldChild, ...nodes) {\n                this.$insert(oldChild, ...nodes);\n                this.$childElement(oldChild)?.remove();\n                return this;\n            },\n            /**\n             * replace children\n             *\n             * almost the same as replaceChildren, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             */\n            $replaceChildren(...nodes) {\n                this.replaceChildren(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * trim whitespace textnode\n             *\n             * @return {this}\n             */\n            $trim() {\n                this.normalize();\n\n                if (this.firstChild?.nodeType === Node.TEXT_NODE && this.firstChild.nodeValue.trim() === '') {\n                    this.firstChild.remove();\n                }\n                if (this.lastChild?.nodeType === Node.TEXT_NODE && this.lastChild.nodeValue.trim() === '') {\n                    this.lastChild.remove();\n                }\n\n                return this;\n            },\n            /**\n             * wrap this element\n             *\n             * @param {Element} node\n             * @return {this}\n             *\n             * @example\n             * <div>\n             *   text\n             *   <span>span</span>\n             * </div>\n             *\n             * $('div').$wrap($('<section></section>'));\n             *\n             * <section>\n             *   <div>\n             *     text\n             *     <span>span</span>\n             *   </div>\n             * </section>\n             */\n            $wrap(node) {\n                this.parentNode.insertBefore(node, this);\n                node.appendChild(this);\n                return this;\n            },\n            /**\n             * unwrap parent\n             *\n             * @return {this}\n             *\n             * @example\n             * <section>\n             *   <div>\n             *     text\n             *     <span>span</span>\n             *   </div>\n             * </section>\n             *\n             * $('div').$unwrap();\n             *\n             * <div>\n             *   text\n             *   <span>span</span>\n             * </div>\n             */\n            $unwrap() {\n                this.parentNode.$unwrapChildren();\n                return this;\n            },\n            /**\n             * unwrap children\n             *\n             * @return {this}\n             *\n             * @example\n             * <section>\n             *   <div>\n             *     text\n             *     <span>span</span>\n             *   </div>\n             * </section>\n             *\n             * $('div').$unwrapChildren();\n             *\n             * <section>\n             *   text\n             *   <span>span</span>\n             * </section>\n             */\n            $unwrapChildren() {\n                this.replaceWith(...this.childNodes);\n                return this;\n            },\n        },\n    };\n}\n", "import {$NodeList, F, IntersectionObserver, Nullable, Promise, Timer, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function miscellaneous(kQuery) {\n    const interlockings = new WeakMap();\n    const documentChange = function (e) {\n        for (const [parent, selector] of interlockings.entries()) {\n            if (e.target.$matches(selector)) {\n                parent.$indeterminate = window.$query(selector).$filter('[type=checkbox]').checked;\n            }\n        }\n    };\n\n    let scrollIntoViewing = false;\n\n    return {\n        [[Window.name]]: /** @lends Window.prototype */{\n            /**\n             * open by objective windowFeature\n             *\n             * @param {Object} options\n             * @return {WindowProxy}\n             *\n             * @example\n             * window.$open({\n             *     url: 'http://example.jp',\n             *     left: 'auto',   // 'auto' means parent's center\n             *     top: 'auto',    // 'auto' means parent's center\n             *     width: 'auto',  // 'auto' means parent's half\n             *     height: 'auto', // 'auto' means parent's half\n             * });\n             */\n            $open(options) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // standard https://developer.mozilla.org/docs/Web/API/Window/open\n                    ...{\n                        // string\n                        url: undefined,\n                        // string\n                        target: undefined,\n                    },\n                    // windowFeatures https://developer.mozilla.org/docs/Web/API/Window/open#windowfeatures\n                    ...{\n                        // bool\n                        window: true,\n                        // int|string\n                        left: 'auto',\n                        // int|string\n                        top: 'auto',\n                        // int|string\n                        width: 'auto',\n                        // int|string\n                        height: 'auto',\n                        // bool\n                        noopener: undefined,\n                        // bool\n                        noreferrer: undefined,\n                    },\n                }, options);\n\n                if (options.width === 'auto') {\n                    options.width = this.outerWidth / 2;\n                }\n                if (options.height === 'auto') {\n                    options.height = this.outerHeight / 2;\n                }\n\n                if (options.left === 'auto' && options.width) {\n                    options.left = (this.outerWidth - options.width) / 2;\n                }\n                if (options.top === 'auto' && options.height) {\n                    options.top = (this.outerHeight - options.height) / 2;\n                }\n\n                if (options.window && options.left != null) {\n                    options.left += this.screenX;\n                }\n                if (options.window && options.top != null) {\n                    options.top += this.screenY;\n                }\n\n                const url = options.url;\n                const target = options.target;\n\n                F.objectWalkRecursive(options, function (v, k) {\n                    if (['url', 'target', 'window'].includes(k) || v === false) {\n                        return undefined;\n                    }\n                    return v;\n                });\n                const feature = F.objectJoin(options, ',');\n                kQuery.logger.debug(`windowFeature`, feature);\n\n                return this.open(url, target, feature);\n            },\n        },\n        [[Element.name, $NodeList.name]]: /** @lends Element.prototype */{\n            /**\n             * is metadata content\n             *\n             * @see https://html.spec.whatwg.org/multipage/dom.html#metadata-content\n             *\n             * @descriptor get\n             *\n             * @return {Boolean}\n             */\n            get $isMetadataContent() {\n                return ['base', 'link', 'meta', 'noscript', 'script', 'style', 'template', 'title'].includes(this.localName.toLowerCase());\n            },\n            /**\n             * get no content outerHTML\n             *\n             * @param {Boolean} [withClose=true]\n             * @return {String}\n             *\n             * @example\n             * document.$createElement('div', {a: 'A', b: 'B'}, 'child').$outerTag();\n             * // '<div a=\"A\" b=\"B\"></div>'\n             */\n            $outerTag(withClose = true) {\n                const name = this.localName;\n                const attrs = '' + this.$attrs;\n\n                let result = `<${name}${attrs ? ' ' + attrs : ''}>`;\n                if (withClose) {\n                    result += `</${name}>`;\n                }\n                return result;\n            },\n            /**\n             * mark matched text nodes\n             *\n             * @param {String|RegExp} word\n             * @param {String|Element} [wrapper]\n             * @param {String|Node|Function} [notSelectorFn]\n             * @return {this}\n             *\n             * @example\n             * <hgroup>\n             *   <h1>this is header</h1>\n             *   <p>this is subheader</p>\n             * </hgroup>\n             *\n             * $('hgroup').$markText('is');\n             *\n             * <hgroup>\n             *   <h1>th<mark>is</mark> <mark>is</mark> header</h1>\n             *   <p>th<mark>is</mark> <mark>is</mark> subheader</p>\n             * </hgroup>\n             */\n            $markText(word, wrapper, notSelectorFn) {\n                kQuery.logger.assertInstanceOf(word, String, RegExp)();\n                kQuery.logger.assertInstanceOf(wrapper, Nullable, String, Element)();\n\n                if (!(word instanceof RegExp)) {\n                    word = new RegExp(F.stringEscape(word, 'regex'));\n                }\n                if (!(wrapper instanceof Element)) {\n                    wrapper = this.$document.$createElement(wrapper ?? 'mark');\n                }\n\n                const core = (node) => {\n                    for (const child of node.children) {\n                        if (child.$isMetadataContent || (notSelectorFn != null && child.$matches(notSelectorFn)) || child.$outerTag(false) === wrapper.$outerTag(false)) {\n                            continue;\n                        }\n                        core(child);\n                    }\n                    for (const child of node.childNodes) {\n                        if (child instanceof CharacterData) {\n                            const matches = child.nodeValue.match(word);\n                            if (matches) {\n                                const after = child.splitText(matches.index);\n                                after.splitText(matches[0].length);\n                                after.$wrap(wrapper.$clone(true));\n                            }\n                        }\n                    }\n                    return node;\n                };\n\n                this.normalize();\n                return core(this);\n            },\n            /**\n             * asynchronous scrollIntoView\n             *\n             * @param {ScrollIntoViewOptions|Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $scrollIntoView(options = {}) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // standard https://developer.mozilla.org/docs/Web/API/Element/scrollIntoView\n                    ...{\n                        // string: \"smooth\" | \"instant\" | \"auto\"\n                        behavior: undefined,\n                        // string: \"start\" | \"center\" | \"end\" | \"nearest\"\n                        block: undefined,\n                        // string: \"start\" | \"center\" | \"end\" | \"nearest\"\n                        inline: undefined,\n                    },\n                    // extends\n                    ...{\n                        // bool\n                        global: true,\n                        // number\n                        timeout: undefined,\n                        // number https://developer.mozilla.org/docs/Web/API/IntersectionObserver/thresholds\n                        threshold: undefined,\n                        // bool emulate https://developer.mozilla.org/docs/Web/API/Element/scrollIntoViewIfNeeded\n                        ifNeeded: false,\n                    },\n                }, options);\n\n                if (options.global && scrollIntoViewing) {\n                    return Promise.resolve(false);\n                }\n\n                return new Promise((resolve, reject) => {\n                    const observer = new IntersectionObserver((entry, last) => {\n                        if (!last && entry.isIntersecting && options.ifNeeded) {\n                            resolve(false);\n                            observer.unobserve(entry.target);\n                            return;\n                        }\n\n                        entry.target.scrollIntoView(options);\n                        scrollIntoViewing = true;\n\n                        if (entry.isIntersecting) {\n                            timeouter?.stop();\n                            observer.unobserve(entry.target);\n                            scrollIntoViewing = false;\n                            resolve(true);\n                        }\n                    }, {\n                        threshold: options.threshold ?? 0.0,\n                    });\n                    const timeouter = options.timeout ? new Timer() : null;\n                    timeouter?.addEventListener('alarm', (e) => {\n                        observer.unobserve(this);\n                        scrollIntoViewing = false;\n                        reject(this);\n                    });\n                    timeouter?.start(options.timeout);\n                    observer.observe(this);\n                });\n            },\n        },\n        [[HTMLInputElement.name, $NodeList.name]]: /** @lends HTMLInputElement.prototype */{\n            /**\n             * synchronous checked\n             *\n             * parent checked -> sync all children checked\n             * child checked -> sync parent checked/indeterminate\n             *\n             * @param {Object} [selector]\n             * @return {this}\n             */\n            $interlock(selector) {\n                kQuery.logger.assertInstanceOf(selector, Nullable, String)();\n\n                if (this.type !== 'checkbox') {\n                    return this;\n                }\n\n                // trigger mode\n                if (selector == null) {\n                    const selector = interlockings.get(this);\n                    if (selector == null) {\n                        throw new Error(this + ' is not have child selector');\n                    }\n\n                    this.$indeterminate = window.$query(selector).$filter('[type=checkbox]').checked;\n                }\n                // initialize mode\n                else {\n                    interlockings.set(this, selector);\n                    this.$indeterminate = window.$query(selector).$filter('[type=checkbox]').checked;\n\n                    ['change', '$change'].forEach(e => {\n                        this.$document.addEventListener(e, documentChange);\n                        this.addEventListener(e, (e) => {\n                            const parent = e.target;\n                            const children = window.$query(selector).$filter('[type=checkbox]');\n                            for (const child of children) {\n                                child.$value = parent.checked ? child.value : null;\n                            }\n                        });\n                    });\n                }\n                return this;\n            },\n        },\n        [[HTMLDialogElement.name, $NodeList.name]]: /** @lends HTMLDialogElement.prototype */{\n            /**\n             * asynchronous showModal\n             *\n             * return returnValue\n             *\n             * @param {Object} [options={}]\n             * @return {Promise<?String>}\n             *\n             * @example\n             * setTimeout(() => $('dialog').close('this is return value'), 100);\n             * await $('dialog').$showModal();\n             * // 'this is return value'\n             */\n            $showModal(options = {}) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    outside: false,\n                    escape: true,\n                }, options);\n\n                return new Promise((resolve, reject) => {\n                    const close = (e) => {\n                        e.target.removeEventListener('close', close);\n                        e.target.removeEventListener('cancel', cancel);\n                        e.target.removeEventListener('click', onOutside);\n                        e.target.removeEventListener('keydown', onEscape);\n                        resolve(e.target.returnValue);\n                    };\n                    const cancel = (e) => {\n                        e.target.removeEventListener('close', close);\n                        e.target.removeEventListener('cancel', cancel);\n                        e.target.removeEventListener('click', onOutside);\n                        e.target.removeEventListener('keydown', onEscape);\n                        resolve(null);\n                    };\n                    const onOutside = (e) => {\n                        if (!this.getBoundingClientRect().$contains(new DOMPointReadOnly(e.clientX, e.clientY))) {\n                            this.close(null);\n                            this.dispatchEvent(new Event('cancel', {\n                                bubbles: false,\n                                cancelable: true,\n                                composed: false,\n                            }));\n                        }\n                    };\n                    const onEscape = (e) => {\n                        if (e.code === 'Escape') {\n                            e.preventDefault();\n                        }\n                    };\n\n                    // returnValue is not reset\n                    this.returnValue = '';\n\n                    // showModal and close once event\n                    this.showModal();\n                    this.addEventListener('close', close, {once: true});\n                    this.addEventListener('cancel', cancel, {once: true});\n\n                    if (options.outside) {\n                        this.addEventListener('click', onOutside);\n                    }\n                    if (!options.escape) {\n                        this.addEventListener('keydown', onEscape);\n                    }\n                });\n            },\n        },\n        [[HTMLCollection.name, NodeList.name, FileList.name, DataTransferItemList.name/* and more *List */]]: /** @lends List.prototype */{\n            /**\n             * return element of XList's index\n             *\n             * @param {Number} index\n             * @return {any}\n             *\n             * @example\n             * $$('span').$at(-1); // return last node\n             */\n            $at(index) {\n                kQuery.logger.assertInstanceOf(index, Number)();\n\n                return Array.prototype.at.call(this, index);\n            },\n            /**\n             * map and Promise.all\n             *\n             * @param {Function} callback\n             * @return {Promise<any>}\n             */\n            async $asyncMap(callback) {\n                kQuery.logger.assertInstanceOf(callback, Function)();\n\n                return Promise.all(F.objectToEntries(this).map(([i, e]) => callback(e, i, this)));\n            },\n        },\n    };\n}\n", "import {$FileList, $NodeList, F, Promise, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function networks(kQuery) {\n    const eventSources = {};\n\n    return {\n        [[Node.name, $NodeList.name]]: /** @lends Node.prototype */{\n            /**\n             * listen SSE event\n             *\n             * - same url connection is shared\n             *   - when all dom were deleted, close connection\n             * - url's hash means eventName\n             *\n             * @param {URL|String} url\n             * @param {Function} listener\n             * @param {Object} [options={}]\n             * @return {this}\n             */\n            $listen(url, listener, options = {}) {\n                options = Object.assign({\n                    credentials: false,\n                }, options);\n\n                url = new URL(url, this.baseURI);\n                const eventName = url.hash.substring(1) || 'message';\n                url.hash = '';\n\n                const eventSource = eventSources[url] ??= new class extends EventSource {\n                    #$nodeListeners;\n\n                    constructor(url, options) {\n                        super(url, options);\n\n                        kQuery.logger.debug(`SSE open ${url}#`);\n                        this.#$nodeListeners = new WeakMap();\n                    }\n\n                    $listen(node, name, listener) {\n                        const names = [...this.#$nodeListeners.entries()].flatMap(([, namedListeners]) => Object.keys(namedListeners));\n                        if (!names.includes(name)) {\n                            kQuery.logger.debug(`SSE listen ${this.url}#${name}`);\n                            this.addEventListener(name, e => {\n                                if (this.#$nodeListeners.size === 0) {\n                                    delete eventSources[this.url];\n                                    this.close();\n                                    kQuery.logger.debug(`SSE close ${this.url}`);\n                                }\n                                for (const [node, namedListeners] of this.#$nodeListeners.entries()) {\n                                    for (const listener of namedListeners[name] ?? []) {\n                                        listener.call(node, e);\n                                    }\n                                }\n                            });\n                        }\n\n                        const namedListeners = this.#$nodeListeners.getOrSet(node, () => ({}));\n                        namedListeners[name] ??= [];\n                        namedListeners[name].push(listener);\n                    }\n                }(url, {\n                    withCredentials: options.credentials,\n                });\n                if (eventSource.withCredentials !== !!options.credentials) {\n                    kQuery.logger.error(`SSE url(credentials) is difference`);\n                }\n\n                eventSource.$listen(this, eventName, listener);\n\n                return this;\n            },\n        },\n        [[HTMLAnchorElement.name, $NodeList.name]]: /** @lends HTMLAnchorElement.prototype */{\n            /**\n             * submit based on a href\n             *\n             * - specified form: submit that form, this behave submitter\n             * - this has download: download response\n             *\n             * @param {Object} [options={}]\n             * @return {this|Promise<Response>}\n             */\n            $submit(options = {}) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // false: navigation, true: fetch\n                    async: false,\n                    // HTMLFormElement: connect form\n                    form: undefined,\n                    // string: method\n                    method: undefined,\n                    // string: enctype\n                    enctype: 'application/x-www-form-urlencoded',\n                    // bool\n                    novalidate: false,\n                    // Object: additional data\n                    data: {},\n                }, options);\n                kQuery.logger.assertInstanceOf(options.data, Object, FormData)();\n\n                // url & parameters\n                const url = this.$URL;\n                const data = new FormData();\n                data.$appendFromEntries(url.searchParams);\n                data.$appendFromEntries(options.data);\n                url.search = '';\n\n                // build form\n                const form = options.form ?? this.$document.$createElement('form', {\n                    action: url,\n                    method: options.method ?? 'post',\n                    enctype: options.enctype,\n                    target: this.target,\n                    hidden: true,\n                });\n                let submitter;\n                if (options.form) {\n                    submitter = this.$document.$createElement('button', {\n                        type: 'submit',\n                        formaction: url,\n                        formtarget: this.target,\n                        formmethod: options.method ?? form.getAttribute('method') ?? 'post',\n                        formenctype: options.enctype,\n                        formnovalidate: options.novalidate,\n                    });\n                    form.append(submitter);\n                }\n                else {\n                    for (const [name, value] of data) {\n                        const hidden = this.$document.$createElement('input', {type: 'hidden'});\n                        hidden.name = name;\n                        hidden.value = value;\n                        form.append(hidden);\n                    }\n                }\n\n                // async or download mode\n                if (options.async || this.download) {\n                    const formoptions = {};\n                    if (submitter) {\n                        formoptions.data = data;\n                        formoptions.submitter = submitter;\n                    }\n                    try {\n                        const response = form.$request(formoptions);\n                        submitter?.remove(); // remove as soon as possible\n                        if (!this.download) {\n                            return response;\n                        }\n                        if (this.download && !options.raw) {\n                            return response.then((response) => {\n                                if (!response.ok) {\n                                    throw new response;\n                                }\n                                response.blob().then((blob) => {\n                                    const url = URL.createObjectURL(blob);\n                                    const newa = this.$document.$createElement('a', {\n                                        href: url,\n                                        download: this.download,\n                                        hidden: true,\n                                    });\n                                    try {\n                                        this.$document.body.appendChild(newa);\n                                        newa.click();\n                                    }\n                                    finally {\n                                        this.$document.body.removeChild(newa);\n                                        setTimeout(() => URL.revokeObjectURL(url), 1000);\n                                    }\n                                });\n                            });\n                        }\n                        return response;\n                    }\n                    finally {\n                        submitter?.remove();\n                    }\n                }\n\n                // submit mode\n                if (submitter) {\n                    form.requestSubmit(submitter);\n                    submitter.remove();\n                }\n                else {\n                    this.$document.body.append(form);\n                    form.submit();\n                    form.remove();\n                }\n                return this;\n            },\n        },\n        [[HTMLFormElement.name, $NodeList.name]]: /** @lends HTMLFormElement.prototype */{\n            /**\n             * request based on form value\n             *\n             * @param {RequestInit|{data: Object<String, String>}} [options={}]\n             * @return {Promise<Response>}\n             */\n            async $request(options = {}) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // ...RequestInit\n                    ...{},\n                    // extends\n                    ...{\n                        // string\n                        url: undefined,\n                        // string\n                        method: undefined,\n                        // string\n                        enctype: undefined,\n                        // bool\n                        novalidate: undefined,\n                        // HTMLElement\n                        submitter: undefined,\n                        // Object: additional data\n                        data: {},\n                        // string | Function\n                        fileConverter: undefined,\n                        // bool\n                        ok: false,\n                        // number\n                        timeout: 0,\n                    },\n                }, options);\n                if (!(options.headers instanceof Headers)) {\n                    options.headers = new Headers(options.headers ?? {});\n                }\n                kQuery.logger.assertInstanceOf(options.headers, Headers)();\n                kQuery.logger.assertInstanceOf(options.data, Object, FormData)();\n\n                const novalidate = options.novalidate ?? (options.submitter?.formNoValidate || this.noValidate || false);\n                if (!novalidate && !this.reportValidity()) {\n                    throw new Error(`Invalid form`);\n                }\n\n                // notice: form.enctype/action/method return normalized value, so use getAttribute\n                // priority: options value -> submitter attr -> form attr\n                const action = options.url ?? options.submitter?.getAttribute('formaction') ?? this.getAttribute('action') ?? '';\n                const method = options.method ?? options.submitter?.getAttribute('formmethod') ?? this.getAttribute('method') ?? 'GET';\n                const enctype = options.enctype ?? options.headers.get('content-type') ?? options.submitter?.getAttribute('formenctype') ?? this.getAttribute('enctype') ?? 'application/x-www-form-urlencoded';\n\n                // normalize\n                options.method = method.toUpperCase();\n                options.headers.set('content-type', enctype);\n\n                // url & parameters\n                const url = new URL(action, this.baseURI);\n                const formData = new FormData(this, options.submitter);\n                for (const [name, value] of F.objectToEntries(options.data)) {\n                    formData.append(name, value);\n                }\n\n                // GET application/x-www-form-urlencoded: merge URL+FormData\n                // POST application/x-www-form-urlencoded: unset File\n                // POST multipart/form-data: standard behavior\n                if (options.method === 'GET') {\n                    for (const [name, value] of formData.$toSearchParams()) {\n                        url.searchParams.append(name, value);\n                    }\n                }\n                else {\n                    if (enctype.startsWith('application/x-www-form-urlencoded')) {\n                        options.headers.delete('content-type'); // for encoding\n                        options.body = formData.$toSearchParams();\n                    }\n                    else if (enctype.startsWith('multipart/form-data')) {\n                        options.headers.delete('content-type'); // for boundary\n                        options.body = formData;\n                    }\n                    else if (enctype.startsWith('application/json')) {\n                        options.body = await formData.$json(options.fileConverter);\n                    }\n                    else {\n                        throw new Error(`Unknown enctype(${enctype})`);\n                    }\n                }\n\n                return await F.fetch(url, options);\n            },\n        },\n        [[Element.name, $NodeList.name]]: /** @lends Element.prototype */{\n            /**\n             * load server html\n             *\n             * @param {String|RequestInit|{data:Object<String, String>}} urlOrOptions\n             * @param {RequestInit|{data:Object<String, any>}} [options={}]\n             * @return {Promise<NodeList>}\n             */\n            async $load(urlOrOptions, options = {}) {\n                if (F.anyIsStringable(urlOrOptions)) {\n                    options.url = urlOrOptions;\n                }\n                else {\n                    options = urlOrOptions;\n                }\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // ...RequestInit\n                    ...{},\n                    // extends\n                    ...{\n                        // string\n                        url: undefined,\n                        // string\n                        method: undefined,\n                        // Object: additional data\n                        data: {},\n                        // bool\n                        ok: false,\n                        // number\n                        timeout: 0,\n                    },\n                }, options);\n                if (!(options.headers instanceof Headers)) {\n                    options.headers = new Headers(options.headers ?? {});\n                }\n                kQuery.logger.assertInstanceOf(options.url, String)();\n                kQuery.logger.assertInstanceOf(options.headers, Headers)();\n                kQuery.logger.assertInstanceOf(options.data, Object, FormData)();\n\n                // url & parameters\n                const parts = options.url.split(' ');\n                const url = new URL(parts.shift(), this.baseURI);\n                const selector = parts.join(' ');\n                const method = (options.method ?? 'GET').toUpperCase();\n                const dataEntries = F.objectToEntries(options.data).map(([k, v]) => [k, v instanceof Function ? v(this) : v]);\n\n                if (method === 'GET') {\n                    for (let [name, value] of dataEntries) {\n                        url.searchParams.append(name, value);\n                    }\n                }\n                else {\n                    options.headers.delete('content-type'); // for encoding\n                    options.body = new URLSearchParams(dataEntries);\n                }\n\n                const response = await F.fetch(url, options);\n                let nodes = this.$document.$createNodeListFromHTML(await response.text());\n                if (selector) {\n                    nodes = nodes.$$(selector);\n                }\n                this.$replaceChildren(nodes);\n                return nodes;\n            },\n        },\n        [[Blob.name, $FileList.name]]: /** @lends Blob.prototype */{\n            /**\n             * upload file\n             *\n             * @param {URL|String|RequestInit} urlOrOptions\n             * @param {RequestInit} [options={}]\n             * @return {Promise<Response>}\n             */\n            async $upload(urlOrOptions, options = {}) {\n                let url;\n                if (F.anyIsStringable(urlOrOptions)) {\n                    url = urlOrOptions;\n                }\n                else {\n                    url = options.url;\n                }\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    method: 'PUT',\n                    timeout: 0,\n                    ok: false,\n                    headers: {},\n                    credentials: 'same-origin',\n                    progress: () => null,\n                }, options);\n\n                const xhr = new XMLHttpRequest();\n                xhr.open(options.method.toUpperCase(), url, true);\n                xhr.timeout = options.timeout;\n                xhr.withCredentials = options.credentials !== 'omit';\n                xhr.responseType = 'arraybuffer';\n\n                for (const [name, value] of F.objectToEntries(options.headers)) {\n                    xhr.setRequestHeader(name, value);\n                }\n\n                const promise = new Promise((resolve, reject) => {\n                    const newResponse = function () {\n                        const response = new Response(xhr.response, {\n                            status: xhr.status,\n                            statusText: xhr.statusText,\n                            headers: xhr.getAllResponseHeaders().split(/\\r\\n?/).reduce(function (headers, line) {\n                                if (line.trim()) {\n                                    const [name, value] = line.split(':');\n                                    headers.append(name.trim(), value.trim());\n                                }\n                                return headers;\n                            }, new Headers()),\n                        });\n                        return Object.defineProperties(response, {\n                            url: {\n                                get() {return xhr.responseURL;},\n                            },\n                        });\n                    };\n                    xhr.addEventListener('readystatechange', function () {\n                        if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n                            if (!options.ok && !(200 <= xhr.status && xhr.status < 300)) {\n                                reject(new Error(`${xhr.status}: ${xhr.statusText}`, {\n                                    cause: newResponse(),\n                                }));\n                            }\n                            // if emulate fetch, should return Response at this timing\n                            // but ReadableByteStream is limited availability yet\n                        }\n                    });\n                    xhr.addEventListener('load', function () {\n                        resolve(newResponse());\n                    });\n                    xhr.addEventListener('error', function (e) {\n                        reject(e);\n                    });\n                    xhr.addEventListener('abort', function (e) {\n                        reject(e);\n                    });\n                    xhr.addEventListener('timeout', function (e) {\n                        reject(e);\n                    });\n                    xhr.upload.addEventListener('progress', function (e) {\n                        options.progress(e);\n                    });\n                });\n\n                if (options.method.toUpperCase() === 'POST') {\n                    const formData = new FormData();\n                    formData.append(options.name ?? 'tmp', this);\n                    xhr.send(formData);\n                }\n                else {\n                    xhr.send(this);\n                }\n\n                return promise;\n            },\n        },\n    };\n}\n", "import {$NodeList, F, Nullable} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function traversing(kQuery) {\n    const nodeGenerateSiblings = function* (node, selectorFn, flow) {\n        kQuery.logger.assertInstanceOf(node, Node)();\n\n        for (let sibling = node[flow]; sibling; sibling = sibling[flow]) {\n            if (selectorFn == null || sibling.$matches(selectorFn)) {\n                yield sibling;\n            }\n        }\n    };\n\n    return {\n        [[Document.name, DocumentFragment.name, Element.name]]: /** @lends DocumentLikeElement.prototype */{\n            /**\n             * functional querySelector\n             *\n             * @param {String|Function} selectorFn\n             * @return {?Element}\n             */\n            $(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                if (typeof (selectorFn) === 'function') {\n                    return Array.prototype.find.call(this.$$('*'), selectorFn) ?? null;\n                }\n                return this.querySelector(selectorFn);\n            },\n            /**\n             * functional querySelectorAll\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             */\n            $$(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                if (typeof (selectorFn) === 'function') {\n                    return F.iterableToNodeList([...this.$$('*')].filter(selectorFn));\n                }\n                return this.querySelectorAll(selectorFn);\n            },\n            /**\n             * functional querySelectorAll with self\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             */\n            $$$(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                const self = this.$matches(selectorFn) ? [this] : [];\n\n                // avoid setPrototypeOf NodeList -> Array -> NodeList -> Array -> NodeList\n                // return F.iterableToNodeList([...self, ...this.$$(selectorFn)]);\n                if (typeof (selectorFn) === 'function') {\n                    return F.iterableToNodeList([...self, ...[...this.$$('*')].filter(selectorFn)]);\n                }\n\n                return F.iterableToNodeList([...self, ...this.$$(selectorFn)]);\n            },\n            /**\n             * functional/queryable contains\n             *\n             * @param {String|Node|Function} selectorFn\n             * @return {Boolean}\n             */\n            $contains(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Node, Function)();\n\n                if (selectorFn instanceof Node) {\n                    return this.contains(selectorFn);\n                }\n                // for performance(length > 0 look for it until the end)\n                if (typeof (selectorFn) === 'string') {\n                    return !!(this.matches(selectorFn) || this.querySelector(selectorFn));\n                }\n                return this.$$$(selectorFn).length > 0;\n            },\n            /**\n             * functional matches\n             *\n             * @param {String|Node|Function} selectorFn\n             * @return {Boolean}\n             */\n            $matches(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Node, Function)();\n\n                if (typeof (selectorFn) === 'function') {\n                    return !!selectorFn.call(this, this);\n                }\n                if (selectorFn instanceof Node) {\n                    return this === selectorFn;\n                }\n                return this.matches(selectorFn);\n            },\n        },\n        [[NodeList.name]]: /** @lends NodeList.prototype */{\n            /**\n             * functional querySelector\n             *\n             * return first element from tree, not per NodeList\n             *\n             * @param {String|Function} selectorFn\n             * @return {?Element}\n             *\n             * @example\n             * <div>\n             *     <span>1</span>\n             *     <span>2</span>\n             * </div>\n             * <div>\n             *     <span>3</span>\n             *     <span>4</span>\n             * </div>\n             *\n             * $$('div').$('span');\n             * // <span>1</span>\n             */\n            $(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                for (const node of this) {\n                    const result = node.$?.(selectorFn);\n                    if (result) {\n                        return result;\n                    }\n                }\n                return null;\n            },\n            /**\n             * functional querySelectorAll\n             *\n             * return matched elements from tree, not per NodeList\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             *\n             * @example\n             * <div>\n             *     <span>1</span>\n             *     <span>2</span>\n             * </div>\n             * <div>\n             *     <span>3</span>\n             *     <span>4</span>\n             * </div>\n             *\n             * $$('div').$$('span');\n             * // [<span>1</span>, <span>2</span>, <span>3</span>, <span>4</span>]\n             */\n            $$(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                return F.iterableToNodeList(new Set([...this].flatMap(node => [...node.$$?.(selectorFn) ?? []])));\n            },\n            /**\n             * functional querySelectorAll with self\n             *\n             * return matched elements from self and tree, not per NodeList\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             *\n             * @example\n             * <div>\n             *     <span>1</span>\n             *     <span>2</span>\n             * </div>\n             * <div>\n             *     <span>3</span>\n             *     <span>4</span>\n             * </div>\n             *\n             * $$('div').$$$('div,span');\n             * // [<div></div>, <span>1</span>, <span>2</span>, <div></div>, <span>3</span>, <span>4</span>]\n             */\n            $$$(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                return F.iterableToNodeList(new Set([...this].flatMap(node => [...node.$$$?.(selectorFn) ?? []])));\n            },\n            /**\n             * functional/queryable contains\n             *\n             * not per NodeList\n             *\n             * @param {String|Element|Function} selectorFn\n             * @return {Boolean}\n             */\n            $contains(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Element, Function)();\n\n                return !!Array.prototype.find.call(this, node => node.$contains?.(selectorFn));\n            },\n            /**\n             * return first matched element from list\n             *\n             * not per NodeList\n             *\n             * @param {String|Element|Function} selectorFn\n             * @return {?Element}\n             */\n            $matches(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Element, Function)();\n\n                return Array.prototype.find.call(this, node => node.$matches?.(selectorFn));\n            },\n            /**\n             * get element index\n             *\n             * @param {String|Node|Function} selectorFn\n             * @return {?Number}\n             */\n            $index(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Node, Function)();\n\n                const index = Array.prototype.findIndex.call(this, node => (node.$matches?.(selectorFn) ?? false));\n                if (index === -1) {\n                    return null;\n                }\n                return index;\n            },\n            /**\n             * filter matches elements\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             */\n            $filter(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                return F.iterableToNodeList([...this].filter(node => (node.$matches?.(selectorFn) ?? false)));\n            },\n            /**\n             * filter !matches elements\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             */\n            $except(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                return F.iterableToNodeList([...this].filter(node => !(node.$matches?.(selectorFn) ?? true)));\n            },\n            /**\n             * slice elements\n             *\n             * @param {Number|String|Node|Function} [start]\n             * @param {Number|String|Node|Function} [end]\n             * @return {NodeList}\n             */\n            $slice(start, end) {\n                kQuery.logger.assertInstanceOf(start, Nullable, Number, String, Node, Function)();\n                kQuery.logger.assertInstanceOf(end, Nullable, Number, String, Node, Function)();\n\n                if (start != null && typeof (start) !== 'number') {\n                    start = this.$index(start) ?? undefined;\n                }\n                if (end != null && typeof (end) !== 'number') {\n                    end = this.$index(end) ?? undefined;\n                }\n                return F.iterableToNodeList(Array.prototype.slice.call(this, start, end));\n            },\n        },\n        [[Node.name, $NodeList.name]]: /** @lends Node.prototype */{\n            /**\n             * alias to ownerDocument.defaultView or global Window\n             *\n             * @descriptor get\n             *\n             * @return {Window}\n             */\n            get $window() {\n                return this.ownerDocument?.defaultView ?? window;\n            },\n            /**\n             * alias to ownerDocument or global Document\n             *\n             * @descriptor get\n             *\n             * @return {Document}\n             */\n            get $document() {\n                return this.ownerDocument ?? window.document;\n            },\n            /**\n             * get all textnodes\n             *\n             * @param {(Number|String)[]} selector\n             * @return {NodeList}\n             */\n            $textNodes(selector = [Node.TEXT_NODE, Node.COMMENT_NODE, Node.CDATA_SECTION_NODE]) {\n                kQuery.logger.assertElementsOf(selector, [Node.TEXT_NODE, Node.COMMENT_NODE, Node.CDATA_SECTION_NODE, 'metadata'])();\n\n                const texts = [];\n                for (const child of this.childNodes) {\n                    if (child instanceof CharacterData) {\n                        if (selector.includes(child.nodeType)) {\n                            texts.push(child);\n                        }\n                    }\n                    else {\n                        if (selector.includes('metadata') || !child.$isMetadataContent) {\n                            texts.push(...child.$textNodes(selector));\n                        }\n                    }\n                }\n                return F.iterableToNodeList(texts);\n            },\n            /**\n             * functional closest\n             *\n             * @param {String|Node|Function} selectorFn\n             * @return {?Element}\n             */\n            $closest(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Element, Function)();\n\n                if (typeof (selectorFn) === 'string') {\n                    return this.closest(selectorFn);\n                }\n\n                for (let parent = this; parent != null; parent = parent.parentElement) {\n                    if (parent.$matches(selectorFn)) {\n                        return parent;\n                    }\n                }\n                return null;\n            },\n            /**\n             * get matched parent elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $parents(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                const parents = [];\n                for (let parent = this.parentElement; parent != null; parent = parent.parentElement) {\n                    if (selectorFn == null || parent.$matches(selectorFn)) {\n                        parents.push(parent);\n                    }\n                }\n                return F.iterableToNodeList(parents);\n            },\n            /**\n             * get first matched child element\n             *\n             * @param {Number|String|Node|Function} [selectorFn]\n             * @return {?Element}\n             */\n            $childElement(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, Number, String, Element, Function)();\n\n                if (typeof (selectorFn) === 'number') {\n                    return this.children.$at(selectorFn);\n                }\n                for (const child of this.children) {\n                    if (selectorFn == null || child.$matches(selectorFn)) {\n                        return child;\n                    }\n                }\n                return null;\n            },\n            /**\n             * get matched child elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $childElements(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                const children = F.iterableToNodeList(this.children);\n                if (selectorFn == null) {\n                    return children;\n                }\n                return children.$filter(selectorFn);\n            },\n            /**\n             * get first matched previous element\n             *\n             * this isn't jQuery like, search all previous elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {Element}\n             */\n            $prevElement(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                return nodeGenerateSiblings(this, selectorFn, 'previousElementSibling').next().value ?? null;\n            },\n            /**\n             * get matched previous elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $prevElements(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                return F.iterableToNodeList([...nodeGenerateSiblings(this, selectorFn, 'previousElementSibling')].reverse());\n            },\n            /**\n             * get first matched next element\n             *\n             * this isn't jQuery like, search all next elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {Element}\n             */\n            $nextElement(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                return nodeGenerateSiblings(this, selectorFn, 'nextElementSibling').next().value ?? null;\n            },\n            /**\n             * get matched next elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $nextElements(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                return F.iterableToNodeList(nodeGenerateSiblings(this, selectorFn, 'nextElementSibling'));\n            },\n            /**\n             * get matched sibling elements\n             *\n             * @param {String|Node|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $siblingElements(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Node, Function)();\n\n                return F.iterableToNodeList([...this.parentNode.children].filter((child) => child !== this && (selectorFn == null || child.$matches?.(selectorFn))));\n            },\n        },\n        [[HTMLInputElement.name, $NodeList.name]]: /** @lends HTMLInputElement.prototype */{\n            /**\n             * get belonging RadioNodeList\n             *\n             * @return {?RadioNodeList}\n             */\n            get $radioNodeList() {\n                if (this.type !== 'radio') {\n                    return undefined;\n                }\n                if (!this.form) {\n                    return undefined;\n                }\n\n                // When there is only one radio in the form, form.elements does not return RadioNodeList\n\n                const form = this.form;\n                const name = this.name;\n\n                const nodelist = form.elements[name];\n                if (nodelist instanceof RadioNodeList) {\n                    return nodelist;\n                }\n\n                const pseudo = this.$document.$createElement('input', {\n                    type: 'radio',\n                    name: name,\n                    hidden: true,\n                });\n\n                this.insertAdjacentElement('afterend', pseudo);\n                try {\n                    return form.elements[name];\n                }\n                finally {\n                    pseudo.remove();\n                }\n            },\n        },\n    };\n}\n", "/**!\n * kQuery\n *\n * @file\n * @license MIT\n * @copyright ryunosuke\n * @ignore\n */\nimport attribute from './src/events/attribute.js';\nimport child from './src/events/child.js';\nimport cookie from './src/events/cookie.js';\nimport disable from './src/events/disable.js';\nimport flick from './src/events/flick.js';\nimport intersect from './src/events/intersect.js';\nimport resize from './src/events/resize.js';\nimport swipe from './src/events/swipe.js';\nimport visible from './src/events/visible.js';\nimport {KQuery} from './src/KQuery.js';\nimport {autoproperties} from './src/plugins/@autoproperties.js';\nimport {events} from './src/plugins/@events.js';\nimport {attributes} from './src/plugins/attributes.js';\nimport {data} from './src/plugins/data.js';\nimport {dimensions} from './src/plugins/dimensions.js';\nimport {effects} from './src/plugins/effects.js';\nimport {forms} from './src/plugins/forms.js';\nimport {manipulation} from './src/plugins/manipulation.js';\nimport {miscellaneous} from './src/plugins/miscellaneous.js';\nimport {networks} from './src/plugins/networks.js';\nimport {traversing} from './src/plugins/traversing.js';\n\n// documentation.js\n/**\n * @typedef {EventTarget} EventTarget\n */\n/**\n * @typedef {Window} Window\n */\n/**\n * @typedef {Document} Document\n */\n/**\n * @typedef {Document|DocumentFragment|Element} DocumentLikeElement\n */\n/**\n * @typedef {Node} Node\n */\n/**\n * @typedef {Element} Element\n */\n/**\n * @typedef {HTMLElement} HTMLElement\n */\n/**\n * @typedef {HTMLTemplateElement} HTMLTemplateElement\n */\n/**\n * @typedef {HTMLStyleElement|HTMLLinkElement} HTMLStylableElement\n */\n/**\n * @typedef {HTMLScriptElement} HTMLScriptElement\n */\n/**\n * @typedef {HTMLAnchorElement} HTMLAnchorElement\n */\n/**\n * @typedef {HTMLImageElement} HTMLImageElement\n */\n/**\n * @typedef {HTMLDialogElement} HTMLDialogElement\n */\n/**\n * @typedef {HTMLFormElement} HTMLFormElement\n */\n/**\n * @typedef {HTMLInputElement|HTMLTextAreaElement|HTMLSelectElement} HTMLInputLikeElement\n */\n/**\n * @typedef {HTMLInputElement|RadioNodeList} HTMLInputCheckableElement\n */\n/**\n * @typedef {HTMLInputElement} HTMLInputElement\n */\n/**\n * @typedef {HTMLSelectElement|HTMLDataListElement} HTMLOptionableElement\n */\n/**\n * @typedef {RadioNodeList} RadioNodeList\n */\n/**\n * @typedef {URL} URL\n */\n/**\n * @typedef {URLSearchParams} URLSearchParams\n */\n/**\n * @typedef {FormData} FormData\n */\n/**\n * @typedef {Blob} Blob\n */\n/**\n * @typedef {Storage} Storage\n */\n/**\n * @typedef {DOMRectReadOnly} DOMRectReadOnly\n */\n/**\n * @typedef {NodeList} NodeList\n */\n/**\n * @typedef {FileList|NodeList|DataTransferItemList} List\n */\n\nconst instance = new KQuery(import.meta ?? document.currentScript);\n\ninstance.logger.time('register Plugins');\ninstance.extends(autoproperties);\ninstance.extends(events);\ninstance.extends(attributes);\ninstance.extends(data);\ninstance.extends(forms);\ninstance.extends(traversing);\ninstance.extends(manipulation);\ninstance.extends(dimensions);\ninstance.extends(effects);\ninstance.extends(networks);\ninstance.extends(miscellaneous);\ninstance.logger.timeEnd('register Plugins');\n\nObject.assign(instance.customEvents, {attribute, child, cookie, disable, flick, intersect, resize, swipe, visible});\n\nexport default instance;\n"],
  "mappings": "uJAAA,IAAAA,EAAA,GAAAC,GAAAD,EAAA,kBAAAE,GAAA,cAAAC,EAAA,cAAAC,EAAA,kBAAAC,GAAA,2BAAAC,GAAA,eAAAC,EAAA,kBAAAC,EAAA,mBAAAC,EAAA,gBAAAC,EAAA,MAAAC,EAAA,eAAAC,EAAA,sBAAAC,GAAA,yBAAAC,EAAA,WAAAC,EAAA,qBAAAC,EAAA,aAAAC,EAAA,kBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,UAAAC,EAAA,mBAAAC,EAAA,UAAAC,EAAA,kBAAAC,EAAA,YAAAC,EAAA,YAAAC,IAAA,IAAMC,EAAK,WAGEC,EAAWC,EAAA,UAAoB,CAAC,EAArB,YACXC,IAAiB,SAAY,CAAC,GAAG,YACjCC,GAAqB,WAAa,CAAC,EAAG,YACtCC,GAA0B,iBAAmB,CAAC,EAAG,YAGjDC,EAAYJ,EAAA,UAAY,CACjC,MAAO,CAAC,SAAS,KAAM,eAAe,IAAI,CAC9C,EAFyB,aAGZK,GAAeL,EAAA,UAAY,CACpC,MAAO,CAAC,YAAY,IAAI,CAC5B,EAF4B,gBAGfM,EAAYN,EAAA,UAAY,CACjC,MAAO,CAAC,SAAS,IAAI,CACzB,EAFyB,aASZO,EAAI,CACb,eAAeC,KAAUC,EAAU,CAC/B,GAAID,GAAS,KACT,MAAO,GAEX,QAAWE,KAAWD,EAAU,CAE5B,GAAIC,IAAY,OAAQ,CACpB,GAAIH,EAAE,cAAcC,CAAK,EACrB,MAAO,GAEX,QACJ,CACA,GAAIA,aAAiBE,EACjB,MAAO,EAEf,CACA,MAAO,CAAC,CAAC,SAAU,UAAU,EAAE,SAAS,OAAQF,CAAM,CAC1D,EACA,gBAAgBA,EAAO,CACnB,OAAID,EAAE,eAAeC,CAAK,EACf,GAEHA,GAAO,UAAYA,EAAM,WAAa,OAAO,UAAU,QACnE,EACA,kBAAkBG,EAAQ,CACtB,OAAQ,GAAKA,GAAQ,WAAW,WAAY,IAAIC,IAAM,IAAMA,EAAE,CAAC,EAAE,YAAY,CAAC,CAClF,EACA,mBAAmBD,EAAQE,EAAW,CAClCA,IAAc,IACd,IAAMC,EAAQ,IAAI,OAAO,MAAMD,CAAS,WAAY,IAAI,EACxD,OAAQ,GAAKF,GAAQ,WAAWG,EAAO,IAAIF,IAAMA,EAAE,CAAC,EAAE,YAAY,CAAC,CACvE,EACA,aAAaD,EAAQI,EAAM,CACvB,IAAMC,EAAc,CAChB,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,OACL,IAAK,MACT,EAEA,OADAL,GAAU,GACFI,EAAM,CACV,QACI,MAAM,IAAI,MAAM,GAAGA,CAAI,cAAc,EACzC,IAAK,YAAa,CACd,IAAME,EAAM,SAAS,cAAc,KAAK,EACxC,OAAAA,EAAI,aAAaN,EAAQ,EAAE,EACpBM,EAAI,WAAW,CAAC,EAAE,IAC7B,CACA,IAAK,aACD,OAAON,EAAO,QAAQ,QAASO,GAAKF,EAAYE,CAAC,CAAC,EAEtD,IAAK,UACD,OAAOP,EAAO,QAAQ,SAAUO,GAAKF,EAAYE,CAAC,CAAC,EAEvD,IAAK,OACD,OAAOP,EAAO,QAAQ,WAAYO,GAAKF,EAAYE,CAAC,CAAC,EAEzD,IAAK,QACD,OAAOP,EAAO,QAAQ,yBAA0B,MAAM,EAE1D,IAAK,MACL,IAAK,WACD,OAAO,IAAI,OAAOA,CAAM,CAEhC,CACJ,EACA,YAAYA,EAAQI,EAAM,CAEtB,OADAJ,GAAU,GACFI,EAAM,CACV,QACI,MAAM,IAAI,MAAM,GAAGA,CAAI,cAAc,EAEzC,IAAK,UAED,OAAKJ,EAAO,SAAS,GAAG,EAGnBA,EAAO,SAAS,GAAG,EAGjBA,EAAO,WAAW,aAAc,MAAM,EAFlC,IAAMA,EAAS,IAHf,IAAMA,EAAS,GAOlC,CACJ,EACA,cAAcA,EAAQI,EAAM,CAExB,OADAJ,GAAU,GACFI,EAAM,CACV,QACI,MAAM,IAAI,MAAM,GAAGA,CAAI,cAAc,EAEzC,IAAK,UAED,OAAIJ,EAAO,GAAG,CAAC,IAAM,KAAOA,EAAO,GAAG,EAAE,IAAM,IACnCA,EAAO,MAAM,EAAG,EAAE,EAEzBA,EAAO,GAAG,CAAC,IAAM,KAAOA,EAAO,GAAG,EAAE,IAAM,IACnCA,EAAO,MAAM,EAAG,EAAE,EAAE,WAAW,OAAQ,GAAG,EAE9CA,EAAO,WAAW,eAAgB,IAAI,CAErD,CACJ,EACA,YAAYA,EAAQ,CAChB,OAAO,OAAO,MAAM,WAAWA,CAAM,CAAC,CAC1C,EACA,aAAc,UAAY,CACtB,IAAMQ,EAAQ,CAAC,EACf,OAAO,SAAUC,EAAUC,EAAQC,EAAM,KAAM,CAC3C,IAAMC,EAAcvB,EAAA,CAACwB,KAAWH,IACrBA,EACF,IAAKb,GACEc,GAAO,MAAQd,aAAiB,OACzBA,EAGJc,EAAId,CAAK,CACnB,EACA,IAAI,CAACA,EAAOiB,IAAUD,EAAOC,CAAK,EAAIjB,CAAK,EAC3C,OAAOgB,EAAO,MAAMH,EAAO,MAAM,CAAC,EAClC,KAAK,EAAE,EAXI,eAcdK,EAAW,GAAGJ,CAAG,KAAKF,CAAQ,KAC9BO,EAAIR,EAAMO,CAAQ,IAAM,IAAI,SAAS,GAAI,qDAAqDN,CAAQ,KAAK,EAEjHtB,EAAG,0BAA4B,CAAC,EAChCA,EAAG,wBAAwB,KAAKyB,CAAW,EAC3C,GAAI,CACA,OAAOI,EAAE,KAAKN,CAAM,CACxB,QACA,CACIvB,EAAG,wBAAwB,IAAI,CACnC,CACJ,CACJ,EAAE,EACF,SAAU,UAAY,CAClB,IAAM8B,EAAY,IAAI9B,EAAG,QACrB+B,EAAgB,EAEpB,OAAO,SAAUC,EAAQ,CACrB,OAAIA,IAAW,MAAQ,OAAQA,GAAY,SAChC,MAENF,EAAU,IAAIE,CAAM,GACrBF,EAAU,IAAIE,EAAQ,EAAED,CAAa,EAElCD,EAAU,IAAIE,CAAM,EAC/B,CACJ,EAAE,EACF,eAAgB,UAAY,CACxB,IAAMC,EAAY,IAAI,qBAAqBC,GAAaA,EAAU,CAAC,EAEnE,OAAO,SAAUF,EAAQG,EAAY,CACjCF,EAAU,SAASD,EAAQG,EAAYH,CAAM,CACjD,CACJ,EAAE,EACF,cAAcA,EAAQ,CAClB,OAAIA,GAAU,MAAQ,OAAQA,GAAY,SAC/B,GAEJA,EAAO,cAAgB,QAAUA,EAAO,aAAe,IAClE,EAaA,kBAAkBA,EAAQI,EAAgB,GAAM,CAE5C,GAAIJ,aAAkB,MAClB,MAAO,GAEX,GAAIA,GAAU,MAAQ,OAAQA,GAAY,SACtC,MAAO,GAIX,IAAMK,EAAO,OAAO,KAAKL,CAAM,EAC/B,GAAI,EAAE,WAAYA,IAAWK,EAAK,SAAW,EACzC,MAAO,GAIX,IAAMC,EAASN,EAAO,SAAWI,EAAgB,KAAOC,EAAK,QAC7D,GAAIC,GAAU,KACV,MAAO,GAIX,IAAMC,EAAcF,EAAK,QAAQ,QAAQ,EAIzC,GAHIE,IAAgB,IAChBF,EAAK,OAAOE,EAAa,CAAC,EAE1BF,EAAK,SAAW,CAACC,EACjB,MAAO,GAIX,IAAME,EAAYH,EAAK,IAAII,GAAK,CAACA,CAAC,EAClC,QAASC,EAAI,EAAGA,EAAIJ,EAAQI,IACxB,GAAIF,EAAUE,CAAC,IAAMA,EACjB,MAAO,GAGf,MAAO,EACX,EAMA,mBAAmBV,EAAQW,EAAS,GAAI,CACpC,IAAMC,EAAS,CAAC,EAEhB,OAAW,CAACC,EAAMnC,CAAK,IAAKD,EAAE,gBAAgBuB,CAAM,EAAG,CACnD,IAAIc,EAAWH,EAAS,GAAGA,CAAM,IAAIE,CAAI,GAAKA,EAK9C,GAJIC,EAAS,WAAW,OAAO,IAC3BA,EAAWrC,EAAE,kBAAkBqC,CAAQ,GAGvCA,IAAa,SAAWrC,EAAE,cAAcC,CAAK,EAAG,CAChD,IAAMqC,EAAS,CAAC,EAChB,OAAW,CAACC,EAAKC,CAAK,IAAKxC,EAAE,gBAAgBC,CAAK,EAC9CqC,EAAO,KAAKtC,EAAE,kBAAkBuC,CAAG,EAAI,IAAMC,CAAK,EAElDF,EAAO,SACPH,EAAOE,CAAQ,EAAIC,EAAO,KAAK,GAAG,EAAI,IAE9C,SACSD,IAAa,QAAS,CAC3B,IAAMI,EAAU,CAAC,EACjB,OAAW,CAACC,EAAOC,CAAI,IAAK3C,EAAE,gBAAgBA,EAAE,gBAAgBC,CAAK,CAAC,EAC9D0C,GACAF,EAAQ,KAAKC,CAAK,EAGtBD,EAAQ,SACRN,EAAOE,CAAQ,EAAII,EAAQ,KAAK,GAAG,EAE3C,MACSzC,EAAE,cAAcC,CAAK,EAC1B,OAAO,OAAOkC,EAAQnC,EAAE,mBAAmBC,EAAOmC,CAAI,CAAC,EAGvDD,EAAOE,CAAQ,EAAIpC,CAE3B,CAEA,OAAOkC,CACX,EAKA,gBAAgBZ,EAAQ,CAEpB,IAAMqB,EAAiBnD,EAAA,SAAUiD,EAAO,CACpC,OAAQ,GAAKA,GAAO,MAAM,GAAG,EAAE,OAAOG,GAAKA,EAAE,MAAM,CACvD,EAFuB,kBAIjBV,EAAS,CAAC,EAEhB,GAAIZ,aAAkB,MAClB,QAAWmB,KAASnB,EAChB,OAAO,OAAOY,EAAQnC,EAAE,gBAAgB0C,CAAK,CAAC,UAG7C1C,EAAE,cAAcuB,CAAM,EAC3B,OAAW,CAACuB,EAAKH,CAAI,IAAK3C,EAAE,gBAAgBuB,CAAM,EAC9C,QAAWmB,KAASE,EAAeE,CAAG,EAClCX,EAAOS,EAAeF,CAAK,CAAC,EAAI,CAAC,CAACC,MAK1C,SAAWD,KAASE,EAAerB,CAAM,EACrCY,EAAOS,EAAeF,CAAK,CAAC,EAAI,GAIxC,OAAOP,CACX,EAMA,gBAAgBZ,EAAQW,EAAS,GAAI,CACjC,IAAMC,EAAS,CAAC,EAEhB,OAAW,CAACC,EAAMW,CAAI,IAAK/C,EAAE,gBAAgBuB,CAAM,EAAG,CAClD,IAAMc,EAAWrC,EAAE,kBAAkBkC,EAAS,GAAGA,CAAM,IAAIE,CAAI,GAAKA,CAAI,EAExE,GAAIpC,EAAE,cAAc+C,CAAI,GAAKA,aAAgB,MAAO,CAChD,OAAW,CAACC,EAAOC,CAAK,IAAKjD,EAAE,gBAAgBA,EAAE,gBAAgB+C,EAAMV,CAAQ,CAAC,EAC5EF,EAAOa,CAAK,EAAIC,EAEhBF,aAAgB,QAChBZ,EAAOE,EAAW,SAAS,EAAIU,EAAK,OAE5C,MAEIZ,EAAOE,CAAQ,EAAIU,CAE3B,CAEA,OAAOZ,CACX,EAKA,gBAAgBZ,EAAQ,CAEpB,OAAIA,aAAkB,aACX,MAAM,KAAKA,CAAM,EAAE,IAAI2B,GAAQ,CAACA,EAAK,KAAMA,EAAK,KAAK,CAAC,EAG7D3B,aAAkB,oBACX,MAAM,KAAKA,CAAM,EAAE,IAAIa,GAAQ,CAACA,EAAMb,EAAOa,CAAI,CAAC,CAAC,EAG1D,CAAC,OAAO,OAAOb,EAAQ,SAAS,GAAK,OAAQA,EAAO,SAAa,WAC1D,CAAC,GAAGA,EAAO,QAAQ,CAAC,EAG3B,CAAC,OAAO,OAAOA,EAAQ,MAAM,GAAK,OAAQA,EAAO,MAAU,WACpD,CAAC,GAAG,MAAM,KAAKA,EAAO,KAAK,CAAC,EAAE,QAAQZ,GAAK,CAAC,CAACA,EAAGY,EAAOZ,CAAC,CAAC,CAAC,CAAC,CAAC,EAGnE,CAAC,OAAO,OAAOY,EAAQ,QAAQ,GAAK,OAAQA,EAAO,QAAY,WACxD,CAAC,GAAG,MAAM,KAAKA,EAAO,OAAO,CAAC,EAAE,QAAQ,CAAC,EAGhD,CAAC,OAAO,OAAOA,EAAQ,QAAQ,GAAK,WAAYA,EACzC,CAAC,GAAG,MAAM,KAAKA,CAAM,EAAE,QAAQ,CAAC,GAGvC,OAAO,YAAYA,EAMhB,OAAO,QAAQA,CAAM,EAChC,EAOA,WAAWA,EAAQ4B,EAAW7C,EAAY,IAAK,CAC3C,IAAM6B,EAAS,CAAC,EAChB,OAAS,CAACW,EAAK7C,CAAK,IAAKD,EAAE,gBAAgBuB,CAAM,EAC7C,GAAItB,IAAU,OAQd,GAJID,EAAE,cAAcC,CAAK,IACrBA,EAAQD,EAAE,WAAWC,EAAOkD,EAAW7C,CAAS,GAGhDA,aAAqB,SAAU,CAC/B,IAAM8C,EAAQ9C,EAAUL,EAAO6C,CAAG,EAC9BM,GACAjB,EAAO,KAAKiB,CAAK,CAEzB,MAEIjB,EAAO,KAAK,GAAGW,CAAG,GAAGxC,CAAS,GAAGL,CAAK,EAAE,EAGhD,OAAOkC,EAAO,KAAKgB,CAAS,CAChC,EACA,oBAAoB5B,EAAQ8B,EAAU,CAClC,IAAMC,EAAUD,aAAoB3D,GAC9B6D,EAAW,CAAC,EAClB,OAAW,CAACT,EAAK7C,CAAK,IAAKD,EAAE,gBAAgBuB,CAAM,EAAG,CAClD,IAAMiC,EAAS/D,EAACuC,GAAMT,EAAOuB,CAAG,EAAId,EAArB,UACTA,EAAI/B,aAAiB,OAASD,EAAE,cAAcC,CAAK,EACnDD,EAAE,oBAAoBC,EAAOoD,CAAQ,EACrCA,EAASpD,EAAO6C,EAAKvB,CAAM,EAE7B+B,EACAC,EAAS,KAAKvB,EAAE,KAAKwB,CAAM,CAAC,EAG5BA,EAAOxB,CAAC,CAEhB,CACA,OAAIsB,EACOG,EAAQ,IAAIF,CAAQ,EAAE,KAAMG,GAAUnC,CAAM,EAEhDA,CACX,EACA,mBAAmBoC,EAAU,CAarBA,aAAoB,UACpBC,EAAO,SAAS,OAAO,wCAAwC,EAGnE,IAAI,EAAI,EACFC,EAAa,CAAC,EACpB,QAAWC,KAAYH,EACnBE,EAAW,GAAG,EAAI,CACd,MAAOC,EACP,aAAc,GACd,SAAU,GACV,WAAY,EAChB,EAEJ,OAAAD,EAAW,OAAS,CAChB,MAAO,EACP,aAAc,GACd,SAAU,GACV,WAAY,EAChB,EACO,OAAO,OAAO,SAAS,UAAWA,CAAU,CACvD,EACA,0BAA0BtC,EAAQI,EAAgB,GAAM,CACpD,OAAW,CAACmB,EAAK7C,CAAK,IAAKD,EAAE,gBAAgBuB,CAAM,EAC3C,OAAQtB,GAAW,WACnBsB,EAAOuB,CAAG,EAAI9C,EAAE,0BAA0BC,EAAO0B,CAAa,GAGtE,OAAI3B,EAAE,kBAAkBuB,EAAQI,CAAa,IACrCA,GAAiB,WAAYJ,EAC7BA,EAAS,MAAM,KAAKA,CAAM,EAG1BA,EAAS,OAAO,OAAOA,CAAM,GAG9BA,CACX,EACA,gBAAgBwC,EAASC,EAAW,CAChC,IAAM7B,EAAS,CAAC,EAChB,OAAW,CAAC8B,EAAOhE,CAAK,IAAK8D,EACzBE,EAAM,OAAO,CAACC,EAAQC,EAASlC,IAAMiC,EAAOC,CAAO,IAAMlC,EAAI,KAAKgC,EAAQ,CAAC,EAAIhE,EAAOkC,CAAM,EAGhG,OAAI6B,GAAa,KACNhE,EAAE,0BAA0BmC,EAAQ6B,CAAS,EAGjD7B,CACX,EACA,iBAAiBiC,EAAM,CACnB,OAAO,SAAS,UAAU,SAAS,KAAKA,CAAI,EAAE,MAAM,IAAK,EAAE,IAAM,eACrE,EACA,uBAAuBA,EAAMC,KAAiBC,EAAc,CACxD,OAAO,YAAaC,EAAM,CACtB,OAAW,CAACtC,EAAGuC,CAAG,IAAKD,EAAK,QAAQ,EAAG,CACnC,IAAMlB,EAAW,OAAQmB,GAAS,WAAaA,EAAM,KACrD,GAAInB,IACAkB,EAAKtC,CAAC,EAAIoB,EAAS,KAAKgB,EAAc,GAAGC,CAAY,EACjDC,EAAKtC,CAAC,IAAM,QACZ,MAGZ,CACA,OAAOmC,EAAK,KAAK,KAAM,GAAGG,CAAI,CAClC,CACJ,EACA,MAAM,MAAME,EAAKC,EAAU,CAAC,EAAG,CAC3B,GAAIA,EAAQ,QAAS,CACjB,IAAMC,EAAO,IAAI,gBACjB,WAAW,IAAMA,EAAK,MAAM,EAAGD,EAAQ,OAAO,EAE1CA,EAAQ,OACRA,EAAQ,OAAS,YAAY,IAAI,CAACA,EAAQ,OAAQC,EAAK,MAAM,CAAC,EAG9DD,EAAQ,OAASC,EAAK,OAG1B,OAAOD,EAAQ,OACnB,CAEAA,EAAQ,UAAY,CAAC,EACfA,EAAQ,mBAAmB,UAC7BA,EAAQ,QAAU,IAAI,QAAQA,EAAQ,OAAO,GAEjDA,EAAQ,QAAQ,OAAO,mBAAoB,gBAAgB,EAE3D,IAAME,EAAW,MAAMrF,EAAG,MAAMkF,EAAKC,CAAO,EAC5C,GAAI,EAAEA,EAAQ,IAAM,KAAU,CAACE,EAAS,GACpC,MAAM,IAAI,MAAM,GAAGA,EAAS,MAAM,KAAKA,EAAS,UAAU,GAAI,CAC1D,MAAOA,CACX,CAAC,EAEL,OAAOA,CACX,CACJ,EAOaC,EAAN,MAAMC,CAAc,CAjiB3B,MAiiB2B,CAAArF,EAAA,sBACvB,OAAO,MAAQ,OAAO,OAAO,CAAC,OAAQ,MAAO,GAAG,CAAC,EACjD,OAAO,SAEPsF,GAEA,YAAYC,EAAQ,CAChBF,EAAc,SAAW,KAEzB,KAAKC,GAAUC,CACnB,CAEA,UAAUC,EAAUC,EAAQ,GAAO,CAC/B,OAAW,CAAC9C,EAAMnC,CAAK,IAAK,OAAO,QAAQgF,CAAQ,EAAG,CAClD,GAAIC,GAAS,KAAKH,GAAQ3C,CAAI,IAAM,OAAW,CAC3C,KAAKA,CAAI,EAAInC,EACb,QACJ,CAEI,OAAQA,GAAW,UACnB,KAAKmC,CAAI,EAAI0C,EAAc,MAAM,SAAS,KAAKC,GAAQ3C,CAAI,CAAC,EAEvD,OAAQnC,GAAW,SACxB,KAAKmC,CAAI,EAAI,CAAC,KAAK2C,GAAQ3C,CAAI,EAE1B,OAAQnC,GAAW,SACxB,KAAKmC,CAAI,EAAI,GAAK,KAAK2C,GAAQ3C,CAAI,EAE9B,OAAQnC,GAAW,WACxB,KAAKmC,CAAI,EAAInC,EAAM,KAAK8E,GAAQ3C,CAAI,EAAGA,EAAM,KAAK2C,EAAO,EAGzD,KAAK3C,CAAI,EAAI,KAAK,MAAM,KAAK2C,GAAQ3C,CAAI,CAAC,CAElD,CAEA,OAAO,IACX,CACJ,EAOawB,EAAN,MAAMuB,CAAO,CA9kBpB,MA8kBoB,CAAA1F,EAAA,eAChB,OAAO,SAEP,OAAO,gBAAgBQ,EAAOmF,EAAW,CA0BrC,MAxBI,GAAAnF,IAAUmF,GAIV5F,IAAa4F,GAAanF,GAAS,MAInCmF,IAAc,QAAUpF,EAAE,cAAcC,CAAK,GAI7CmF,IAAc,QAAU,OAAQA,GAAe,YAAc,OAAOnF,CAAK,YAAamF,GAItFA,IAAc,SAAWpF,EAAE,eAAeC,CAAK,GAI/CmF,IAAc,SAAW,OAAOnF,CAAK,YAAamF,GAAa,CAAC,MAAMnF,CAAK,IAI3EmF,IAAc,SAAW,OAAOnF,CAAK,YAAamF,GAAcnF,GAAO,UAAYA,EAAM,WAAa,OAAO,UAAU,UAK/H,CAEA,OAAO,iBAAiBA,EAAO,CAC3B,OAAIA,GAAS,KACF,GAAKA,EAEZ,OAAQA,GAAW,WACZA,EAAM,MAAQ,GAAKA,EAEvB,GAAKA,CAChB,CAEA,YAAYoF,EAAOC,EAAOpD,EAAQqD,EAAS,CACvCJ,EAAO,SAAW,KAElB,IAAMK,EAAO/F,EAAA,IAAM,KAAN,QACPgG,EAAQhG,EAAA,IAAM+F,EAAN,SAEd,KAAK,MAAQF,EAAQ,EAAIE,EAAOD,EAAQ,MAAM,KAAK,KAAMrD,CAAM,EAC/D,KAAK,KAAOoD,EAAQ,EAAIE,EAAOD,EAAQ,KAAK,KAAK,KAAMrD,CAAM,EAC7D,KAAK,KAAOoD,EAAQ,EAAIE,EAAOD,EAAQ,KAAK,KAAK,KAAMrD,CAAM,EAC7D,KAAK,MAAQoD,EAAQ,EAAIE,EAAOD,EAAQ,MAAM,KAAK,KAAMrD,CAAM,EAG/D,KAAK,OAASoD,EAAQ,EAAIE,EAAOH,EAAQE,EAAQ,KAAK,KAAK,KAAMrD,CAAM,EAAIqD,EAAQ,KAAK,KAAK,KAAMrD,CAAM,EAEzG,KAAK,KAAOoD,EAAQ,EAAIE,EAAOE,GAASH,EAAQ,KAAK,KAAK,KAAM,GAAGrD,CAAM,IAAIwD,CAAK,EAAE,EACpF,KAAK,QAAUJ,EAAQ,EAAIE,EAAOE,GAASH,EAAQ,QAAQ,KAAK,KAAM,GAAGrD,CAAM,IAAIwD,CAAK,EAAE,EAE1F,KAAK,OAAUL,EAAgB,CAACM,KAAWC,KACnCD,aAAkB,WAClBC,EAAO,QAAQ,GAAKD,CAAM,EAC1BA,EAASA,EAAO,GAEbJ,EAAQ,OAAO,KAAK,KAAMI,EAAQzD,EAAQ,GAAG0D,CAAM,GALvCH,EAOvB,KAAK,iBAAoBJ,EAAgB,CAACM,KAAWE,IAAc,CAC/D,QAAWC,KAAYD,EACnB,GAAIV,EAAO,gBAAgBQ,EAAQG,CAAQ,EACvC,OAAON,EAGf,OAAOD,EAAQ,OAAO,KAAK,KAAM,GAAOrD,EAAQ,GAAGiD,EAAO,iBAAiBQ,CAAM,CAAC,iBAAiBE,EAAU,IAAIV,EAAO,gBAAgB,EAAE,KAAK,GAAG,CAAC,EAAE,CACzJ,EAPiCM,EAQjC,KAAK,yBAA4BJ,EAAgB,CAACM,KAAWE,IAAc,CACvE,QAAWC,KAAYD,EACnB,GAAI,OAAO,OAAOF,CAAM,EAAE,MAAM3D,GAAKmD,EAAO,gBAAgBnD,EAAG8D,CAAQ,CAAC,EACpE,OAAON,EAGf,OAAOD,EAAQ,OAAO,KAAK,KAAM,GAAOrD,EAAQ,GAAGiD,EAAO,iBAAiBQ,CAAM,CAAC,iBAAiBE,EAAU,IAAIV,EAAO,gBAAgB,EAAE,KAAK,GAAG,CAAC,EAAE,CACzJ,EAPyCM,EAQzC,KAAK,gBAAmBJ,EAAgB,CAACM,KAAWE,IAAc,CAC9D,QAAWC,KAAYD,EACnB,GAAIC,EAAS,SAASH,CAAM,EACxB,OAAOH,EAGf,OAAOD,EAAQ,OAAO,KAAK,KAAM,GAAOrD,EAAQ,GAAGiD,EAAO,iBAAiBQ,CAAM,CAAC,mBAAmBE,EAAU,IAAIV,EAAO,gBAAgB,EAAE,KAAK,GAAG,CAAC,EAAE,CAC3J,EAPgCM,EAQhC,KAAK,iBAAoBJ,EAAgB,CAACM,KAAWE,IAAc,CAC/D,QAAWC,KAAYD,EACnB,GAAI,OAAO,OAAOF,CAAM,EAAE,MAAM3D,GAAK8D,EAAS,SAAS9D,CAAC,CAAC,EACrD,OAAOwD,EAGf,OAAOD,EAAQ,OAAO,KAAK,KAAM,GAAOrD,EAAQ,GAAGiD,EAAO,iBAAiBQ,CAAM,CAAC,mBAAmBE,EAAU,IAAIV,EAAO,gBAAgB,EAAE,KAAK,GAAG,CAAC,EAAE,CAC3J,EAPiCM,CAQrC,CACJ,EAOaM,EAAN,MAAMC,UAAmB,IAAK,CA5rBrC,MA4rBqC,CAAAvG,EAAA,mBACjC,YAAYwG,EAAO7D,EAAM8D,EAAU,CAC/BA,IAAaD,EACb,IAAME,EAAa,OAAO,iBAAiB,IAAM,CAAC,EAAG,CACjD,KAAM,CAAC,MAAO,iBAAiB/D,CAAI,EAAE,EACrC,OAAQ,CAAC,MAAO6D,EAAM,MAAM,CAChC,CAAC,EACD,OAAIpB,EAAc,SAAS,OAEvBoB,EAAM,QAAQ,CAACtF,EAAGsB,IAAMkE,EAAWlE,CAAC,EAAItB,CAAC,EAGtC,IAAIyF,EAAMD,EAAY,CACzB,IAAIjC,EAAQJ,EAAU,CAClB,OAAIA,KAAYmC,EACL,QAAQ,IAAIA,EAAOnC,CAAQ,GAElCmC,EAAM,SAAW,GACjBrC,EAAO,SAAS,OAAO,+FAA+F,EAGnHqC,EAAM,KAAKtF,GAAK,QAAQ,IAAIA,EAAGmD,CAAQ,CAAC,EACnD,EACA,IAAII,EAAQJ,EAAU,CAClB,GAAIA,KAAYmC,EACZ,OAAO,QAAQ,IAAIA,EAAOnC,CAAQ,EAOtC,GALImC,EAAM,SAAW,GACjBrC,EAAO,SAAS,OAAO,+FAA+F,EAItHE,IAAa,OAAO,YACpB,OAAQuC,GAASJ,EAAM,IAAItF,GAAKX,EAAE,eAAeW,EAAG,KAAK,EAAIA,EAAI,QAAQ,IAAIA,EAAGmD,CAAQ,GAAG,KAAKnD,EAAG0F,CAAI,CAAC,EAAE,KAAK,EAGnH,IAAMC,EAASL,EAAM,IAAItF,GAAKX,EAAE,eAAeW,EAAG,KAAK,EAAIA,EAAI,QAAQ,IAAIA,EAAGmD,CAAQ,CAAC,EACvF,OAAIwC,EAAO,MAAM3F,GAAKX,EAAE,eAAeW,EAAG,OAAQ,KAAK,CAAC,EAC7C2F,EAEJ,IAAIN,EAAWM,EAAQ,GAAGlE,CAAI,IAAI0B,CAAQ,GAAIoC,CAAQ,CACjE,EACA,IAAIhC,EAAQJ,EAAU7D,EAAO,CACzB,OAAI6D,KAAYmC,EACL,QAAQ,IAAIA,EAAOnC,EAAU7D,CAAK,GAEzCgG,EAAM,SAAW,GACjBrC,EAAO,SAAS,OAAO,+FAA+F,EAG1HqC,EAAM,QAAQ,CAACtF,EAAGsB,IAAMjC,EAAE,uBAAuBgC,GAAK,QAAQ,IAAIrB,EAAGmD,EAAU9B,CAAC,EAAGrB,EAAGuF,IAAWjE,CAAC,EAAGA,CAAC,EAAEhC,CAAK,CAAC,EACvG,GACX,EACA,eAAeiE,EAAQJ,EAAU,CAC7B,OAAIA,KAAYmC,EACL,QAAQ,eAAeA,EAAOnC,CAAQ,GAE7CmC,EAAM,SAAW,GACjBrC,EAAO,SAAS,OAAO,+FAA+F,EAG1HqC,EAAM,QAAQtF,GAAK,QAAQ,eAAeA,EAAGmD,CAAQ,CAAC,EAC/C,GACX,EACA,MAAMI,EAAQqC,EAASC,EAAU,CAC7B,GAAIP,EAAM,SAAW,EACjB,OAAArC,EAAO,SAAS,OAAO,+FAA+F,EAC/G,CAAC,EAIZ,GAAIqC,EAAM,KAAKtF,GAAK,OAAQA,GAAO,UAAU,EAAG,CAC5C,IAAI8F,EAAY,GACZC,EAAgB,GAChBC,EAAgB,GAChBC,EAAW,GACXC,EAAc,GAEZC,EAAUb,EAAM,IAAI,CAACtF,EAAGsB,IAAM,CAChC,GAAI,OAAQtB,GAAO,WAAY,CAC3B,GAAIA,aAAayF,GAASI,EAAS,SAAW,EAAG,CAC7CC,EAAY,GACZ,MACJ,CAEM9F,aAAayF,IACfzF,EAAE,EAAIsB,GAEV,IAAME,EAAS,QAAQ,MAAMxB,EAAG4F,IAAUtE,CAAC,EAAGuE,CAAQ,EAEtD,OAAAE,EAAgBA,GAAiBvE,IAAW,OAC5CwE,EAAgBA,GAAiB3G,EAAE,eAAemC,EAAQ,OAAQ,KAAK,EACvEyE,EAAWA,GAAYzE,IAAW+D,IAAWjE,CAAC,EAC9C4E,EAAcA,GAAe1E,aAAkB5C,EAAG,QAC3C4C,CACX,CACJ,CAAC,EAED,OAAIsE,EACOR,EAEPS,EACOH,EAEPI,EACOG,EAEPF,EACOV,EAEPW,EACOtH,EAAG,QAAQ,IAAIuH,CAAO,EAG1B,IAAId,EAAWc,EAAS,GAAG1E,CAAI,KAAM8D,CAAQ,CACxD,CAGA,GAAIM,EAAS,SAAW,EACpB,OAAOP,EAIPO,EAAS,OAIb5C,EAAO,SAAS,MAAM,mDAAoDM,CAAM,CACpF,CACJ,CAAC,CACL,CACJ,EAUa6C,EAAN,KAAc,CAz0BrB,MAy0BqB,CAAAtH,EAAA,gBACjB,aAAc,CACV,KAAK,IAAM,IAAIF,EAAG,GACtB,CAEA,IAAIuD,EAAK,CACL,OAAO,KAAK,IAAI,IAAI9C,EAAE,SAAS8C,CAAG,CAAC,CACvC,CAEA,IAAIA,EAAK,CACL,OAAO,KAAK,IAAI,IAAI9C,EAAE,SAAS8C,CAAG,CAAC,GAAG,KAC1C,CAEA,SAASA,EAAKkE,EAAU,CACpB,OAAK,KAAK,IAAIlE,CAAG,GACb,KAAK,IAAIA,EAAKkE,EAASlE,CAAG,CAAC,EAExB,KAAK,IAAIA,CAAG,CACvB,CAEA,IAAIA,EAAK7C,EAAO,CACZ,OAAO,KAAK,IAAI,IAAID,EAAE,SAAS8C,CAAG,EAAG,CACjC,IAAK,IAAI,QAAQA,CAAG,EACpB,MAAO7C,CACX,CAAC,CACL,CAEA,MAAM6C,EAAKmE,EAAW,CAClB,IAAMC,EAAW,KAAK,IAAIpE,CAAG,EAC7B,YAAK,IAAIA,EAAKmE,EAAUC,CAAQ,CAAC,EAC1BA,CACX,CAEA,OAAOpE,EAAK,CACR,OAAO,KAAK,IAAI,OAAO9C,EAAE,SAAS8C,CAAG,CAAC,CAC1C,CAEA,OAAQ,CACJ,OAAO,KAAK,IAAI,MAAM,CAC1B,CAEA,CAAE,SAAU,CACR,QAAWqE,KAAO,KAAK,IAAI,OAAO,EAAG,CACjC,IAAM5F,EAAS4F,EAAI,IAAI,MAAM,EAC7B,GAAI5F,IAAW,OAAW,CACtB,KAAK,IAAI,OAAOA,CAAM,EACtB,QACJ,CACA,KAAM,CAACA,EAAQ4F,EAAI,KAAK,CAC5B,CACJ,CAEA,IAAI,MAAO,CACP,MAAO,CAAC,GAAG,KAAK,QAAQ,CAAC,EAAE,MAC/B,CACJ,EASaC,EAAN,KAAoB,CAz4B3B,MAy4B2B,CAAA3H,EAAA,sBACvB,aAAc,CACV,KAAK,QAAU,IAAIsH,CACvB,CAEA,IAAIjE,EAAKuE,EAAQ,CACb,GAAIA,GAAU,KACV,OAAO,KAAK,QAAQ,IAAIvE,CAAG,EAE/B,IAAMvB,EAAS,KAAK,QAAQ,IAAIuB,CAAG,GAAK,CAAC,EACzC,OAAOuE,KAAU9F,CACrB,CAEA,IAAIuB,EAAKuE,EAAQ,CACb,OAAIA,GAAU,KACH,KAAK,QAAQ,IAAIvE,CAAG,GAAK,CAAC,GAEtB,KAAK,QAAQ,IAAIA,CAAG,GAAK,CAAC,KACzBuE,CAAM,CAC1B,CAEA,SAASvE,EAAKuE,EAAQL,EAAU,CAC5B,OAAK,KAAK,IAAIlE,EAAKuE,CAAM,GACrB,KAAK,IAAIvE,EAAKuE,EAAQL,EAASlE,EAAKuE,CAAM,CAAC,EAExC,KAAK,IAAIvE,EAAKuE,CAAM,CAC/B,CAEA,IAAIvE,EAAKuE,EAAQpH,EAAO,CACpB,GAAIoH,GAAU,KACV,OAAO,KAAK,QAAQ,IAAIvE,EAAK7C,CAAK,EAEtC,IAAMsB,EAAS,KAAK,QAAQ,IAAIuB,CAAG,GAAK,CAAC,EACzC,OAAAvB,EAAO8F,CAAM,EAAIpH,EACV,KAAK,QAAQ,IAAI6C,EAAKvB,CAAM,CACvC,CAEA,MAAMuB,EAAKuE,EAAQJ,EAAW,CAC1B,IAAMC,EAAW,KAAK,IAAIpE,EAAKuE,CAAM,EACrC,YAAK,IAAIvE,EAAKuE,EAAQJ,EAAUC,CAAQ,CAAC,EAClCA,CACX,CAEA,OAAOpE,EAAKuE,EAAQ,CAChB,GAAIA,GAAU,KACV,OAAO,KAAK,QAAQ,OAAOvE,CAAG,EAElC,IAAMvB,EAAS,KAAK,QAAQ,IAAIuB,CAAG,GAAK,CAAC,EAEzC,OADA,OAAOvB,EAAO8F,CAAM,EACf,OAAO,KAAK9F,CAAM,EAAE,OAGlB,GAFI,KAAK,QAAQ,OAAOuB,CAAG,CAGtC,CAEA,OAAQ,CACJ,OAAO,KAAK,QAAQ,MAAM,CAC9B,CAEA,CAAE,SAAU,CACR,MAAO,KAAK,QAAQ,QAAQ,CAChC,CAEA,IAAI,MAAO,CACP,OAAO,KAAK,QAAQ,IACxB,CACJ,EASaW,EAAN,MAAM6D,UAAgB/H,EAAG,OAAQ,CAp9BxC,MAo9BwC,CAAAE,EAAA,gBACpC,OAAO,qBAAuB,OAAO,UAAU,EAE/C,MAAO8H,GAAaC,EAAQC,EAAWC,EAAc,KAAM,CACvD9D,EAAO,SAAS,yBAAyB4D,EAAQ,SAAU9H,EAAa,EAAE,EAE1EgI,IAAgB,OAAO,UAAU,oBAEjC,IAAM9F,EAAO5B,EAAE,gBAAgBwH,CAAM,EAAE,IAAI,CAAC,CAACG,CAAC,IAAMA,CAAC,EAEjDzG,EAAQ,EACNiB,EAASqF,aAAkB,MAAQ,IAAI,MAAMA,EAAO,MAAM,EAAI,CAAC,EAC/DI,EAAUnI,EAAA,eAAgBqD,EAAK,CACjC5B,IACA,GAAI,CACAiB,EAAOW,CAAG,EAAI,MAAM0E,EAAO1E,CAAG,EAAEA,CAAG,CACvC,OACOnC,EAAG,CACN,GAAI8G,EACA,MAAM9G,EAGNwB,EAAOW,CAAG,EAAInC,CAEtB,CAEA,IAAMkH,EAAOjG,EAAKV,CAAK,EACvB,GAAI2G,GAAQL,EAAOK,CAAI,GAAK,KACxB,OAAOD,EAAQC,CAAI,CAE3B,EAlBgB,WAoBVtE,EAAW,CAAC,EAClB,QAAWT,KAAOlB,EAAK,MAAM,EAAG8F,CAAW,EACvCnE,EAAS,KAAKqE,EAAQ9E,CAAG,CAAC,EAG9B,MAAO,CAACS,EAAUpB,CAAM,CAC5B,CAEA,aAAa,eAAeqF,EAAQE,EAAc,KAAM,CACpD,GAAM,CAACnE,EAAUpB,CAAM,EAAImF,EAAQC,GAAaC,EAAQ,GAAME,CAAW,EACzE,aAAMJ,EAAQ,IAAI/D,CAAQ,EACnBpB,CACX,CAEA,aAAa,sBAAsBqF,EAAQE,EAAc,KAAM,CAC3D,GAAM,CAACnE,EAAUpB,CAAM,EAAImF,EAAQC,GAAaC,EAAQ,GAAOE,CAAW,EAC1E,aAAMJ,EAAQ,WAAW/D,CAAQ,EAC1BpB,CACX,CAEA,YAAYkB,EAAU,CAClB,IAAIyE,EAASC,EACb,MAAM,CAACC,EAAUC,IAAY,CACzBH,EAAUE,EACVD,EAASE,CACb,CAAC,EAED,IAAMD,EAAWvI,EAACuC,GAAM,CACpB,KAAK,OAAS,YACd8F,EAAQ9F,CAAC,CACb,EAHiB,YAIXiG,EAAUxI,EAACuC,GAAM,CACnB,KAAK,OAAS,WACd+F,EAAO/F,CAAC,CACZ,EAHgB,WAIVkG,EAAa,IAAI,gBACvBA,EAAW,OAAO,iBAAiB,QAAUvH,GAAM,CAC3CA,EAAE,OAAO,SAAW2G,EAAQ,qBAC5BU,EAAS,KAAK,QAAQ,EAGtBC,EAAQtH,EAAE,OAAO,MAAM,CAE/B,CAAC,EACD0C,EAAS2E,EAAUC,CAAO,EAE1B,KAAK,WAAaC,EAClB,KAAK,SAAW,KAChB,KAAK,OAAS,SAClB,CAEA,OAAOC,EAAU,CACb,KAAK,SAAWA,EAChB,KAAK,WAAW,MAAMb,EAAQ,oBAAoB,CACtD,CAEA,MAAMc,EAAQ,CACV,KAAK,WAAW,MAAMA,CAAM,CAChC,CACJ,EASaC,EAAN,cAAyB9I,EAAG,UAAW,CAxjC9C,MAwjC8C,CAAAE,EAAA,mBAC1C,SAAU,CACN,OAAO,IAAIgE,EAAQ,CAACqE,EAASC,IAAW,CACpC,KAAK,iBAAiB,OAAQpH,GAAKmH,EAAQnH,EAAE,OAAO,MAAM,CAAC,EAC3D,KAAK,iBAAiB,QAASA,GAAKoH,EAAOpH,EAAE,OAAO,KAAK,CAAC,CAC9D,CAAC,CACL,CACJ,EASayF,EAAN,MAAMkC,UAAc,IAAK,CAxkChC,MAwkCgC,CAAA7I,EAAA,cAC5B,OAAO,UAAY,IAAI,QAEvB,OAAQ,OAAO,WAAW,EAAE8I,EAAU,CAClC,OAAOD,EAAM,UAAU,IAAIC,CAAQ,CACvC,CAEA,YAAYhH,EAAQiH,EAAU,CAC1B,IAAMD,EAAW,IAAIhJ,EAAG,MAAMgC,EAAQiH,CAAQ,EAC9C,OAAAF,EAAM,UAAU,IAAIC,CAAQ,EACrBA,CACX,CACJ,EAUaE,EAAN,cAAoB,WAAY,CA9lCvC,MA8lCuC,CAAAhJ,EAAA,cACnC,aAAc,CACV,MAAM,EAEN,KAAK,GAAK,KACV,KAAK,YAAc,IACvB,CAEA,OAAO,KAAKiJ,EAAa,CACrB,IAAMC,EAAQ,IAAI,KAClB,OAAO,IAAIlF,EAAQ,CAACqE,EAASC,IAAW,CACpCY,EAAM,iBAAiB,QAAShI,GAAKmH,EAAQ,KAAK,IAAI,EAAInH,EAAE,OAAO,IAAI,CAAC,EACxEgI,EAAM,MAAMD,CAAW,CAC3B,CAAC,EAAE,QAAQ,IAAMC,EAAM,KAAK,CAAC,CACjC,CAEA,MAAMD,EAAaE,EAAS,EAAG,CAC3BhF,EAAO,SAAS,OAAO,KAAK,KAAO,KAAM,sCAAsC,EAAE,EAEjF,KAAK,YAAc8E,EAEnB,IAAMG,EAAQpJ,EAAA,CAACqJ,EAAMC,IAAS,CAC1B,KAAK,GAAK,WAAW,IAAM,CACvB,KAAK,cAAc,IAAIC,EAAY,QAAS,CACxC,OAAQ,CACJ,GAAI,KAAK,GACT,KAAMF,EACN,KAAMC,CACV,CACJ,CAAC,CAAC,EACED,EAAOF,GACPC,EAAMC,EAAO,EAAG,KAAK,IAAI,CAAC,CAElC,EAAG,KAAK,WAAW,CACvB,EAbc,SAcdD,EAAM,EAAG,KAAK,IAAI,CAAC,CACvB,CAEA,QAAQH,EAAaE,EAAQ,CACzB,YAAK,KAAK,EACH,KAAK,MAAMF,EAAaE,CAAM,CACzC,CAEA,MAAO,CACH,aAAa,KAAK,EAAE,EACpB,KAAK,GAAK,IACd,CACJ,EAUaK,EAAN,MAAMC,CAAQ,CAvpCrB,MAupCqB,CAAAzJ,EAAA,gBACjB,YAAY0J,EAAgBC,EAAa,GAAOC,EAAkB,GAAO,CACrE,KAAK,QAAUF,EACf,KAAK,WAAaC,EAClB,KAAK,gBAAkBC,CAC3B,CAEA,QAAQC,EAAc,CAClB,OAAO,IAAIJ,EAAQ,OAAO,OAAO,CAAC,EAAG,KAAK,QAASI,CAAY,EAAG,KAAK,WAAY,KAAK,eAAe,CAC3G,CAEA,MAAMA,EAAc,CAChB,IAAM5E,EAAU,CAAC,EACjB,QAAW5B,KAAO,OAAO,KAAK,KAAK,OAAO,EAClC,KAAK,YAAcA,KAAOwG,GAAgBA,EAAaxG,CAAG,IAAM,MAG3D,KAAK,iBAAmBA,KAAOwG,GAAgBA,EAAaxG,CAAG,IAAM,OAF1E4B,EAAQ5B,CAAG,EAAIwG,EAAaxG,CAAG,EAM/B4B,EAAQ5B,CAAG,EAAIwG,EAAaxG,CAAG,GAAK,KAAK,QAAQA,CAAG,EAG5D,OAAO4B,CACX,CACJ,EAOa6E,EAAN,MAAMC,CAAc,CAxrC3B,MAwrC2B,CAAA/J,EAAA,sBACvB,OAAO,UAAY,IAAIF,EAAG,IAC1B,OAAO,MAAQ,IAAIkJ,EAEnB,OAAO,eAAiB,IAAIQ,EAAQ,CAChC,SAAU,GACd,CAAC,EAED,YAAY5F,EAAUqB,EAAU,CAAC,EAAG,CAChC,KAAK,QAAU8E,EAAc,eAAe,MAAM9E,CAAO,EACzD,KAAK,cAAgB,IAAI0C,EACzB,KAAK,SAAYzG,GAAM,CACnB,IAAMoD,EAAU,CAAC,EACjB,OAAW,CAACG,EAAQjE,CAAK,IAAK,KAAK,cAAc,QAAQ,EAAG,CACxD,IAAMwJ,EAAO,KAAK,MAAMvF,CAAM,EACxBwF,EAAQ,KAAK,SAASzJ,EAAM,KAAMwJ,CAAI,EAC5C,KAAK,cAAc,IAAIvF,EAAQ,OAAQuF,CAAI,EAC3C,QAAWE,KAAQD,EACf3F,EAAQ,KAAK,OAAO,OAAO4F,EAAM,CAC7B,OAAQzF,EACR,KAAMvD,EAAE,SACZ,CAAC,CAAC,CAEV,CAEA,QAAWyC,KAASW,EAChBV,EAASD,EAAO,KAAK,cAAc,MAAMA,EAAM,OAAQ,OAAQ,IAAMA,CAAK,CAAC,CAEnF,EAEAoG,EAAc,MAAM,iBAAiB,QAAS,KAAK,QAAQ,CAC/D,CAEA,MAAMtF,EAAQ,CAAC,CAEf,SAAS0F,EAAO3G,EAAO,CAAC,CAExB,QAAQiB,EAAQ,CACZ,KAAK,cAAc,IAAIA,EAAQ,OAAQ,KAAK,MAAMA,CAAM,CAAC,EAEzDsF,EAAc,MAAM,QAAQ,KAAK,IAAIA,EAAc,MAAM,aAAe,KAAK,QAAQ,SAAU,KAAK,QAAQ,QAAQ,EAAG,GAAQ,EAC/HA,EAAc,UAAU,IAAI,IAAI,CACpC,CAEA,UAAUtF,EAAQ,CACd,KAAK,cAAc,OAAOA,CAAM,EAC5B,KAAK,cAAc,OAAS,GAC5B,KAAK,WAAW,CAExB,CAEA,YAAa,CACT,KAAK,cAAc,MAAM,EAEzBsF,EAAc,MAAM,oBAAoB,QAAS,KAAK,QAAQ,EAC9DA,EAAc,UAAU,OAAO,IAAI,EAC/BA,EAAc,UAAU,OAAS,GACjCA,EAAc,MAAM,KAAK,CAEjC,CAEA,SAAU,CACN,OAAO,KAAK,cAAc,QAAQ,CACtC,CACJ,EAOaK,EAAN,MAAMC,UAAuBP,CAAc,CA/vClD,MA+vCkD,CAAA9J,EAAA,uBAC9C,OAAO,eAAiB8J,EAAc,eAAe,QAAQ,CACzD,WAAY,MAChB,CAAC,EAED,OAAO,cAAc7E,EAAS,CAC1B,OAAO,KAAK,UAAU,KAAK,eAAe,MAAMA,CAAO,CAAC,CAC5D,CAEA,YAAYrB,EAAUqB,EAAU,CAAC,EAAG,CAChC,MAAMrB,EAAUqB,CAAO,EAEvB,KAAK,QAAUoF,EAAe,eAAe,MAAMpF,CAAO,CAC9D,CAEA,MAAMR,EAAQ,CACV,MAAO,CACH,OAAQA,EAAO,OACf,QAAS,OAAO,YAAYA,EAAO,OAAO,MAAM,IAAI,EAAE,IAAIlC,GAAKA,EAAE,MAAM,QAAQ,EAAE,IAAI,kBAAkB,CAAC,CAAC,CAC7G,CACJ,CAEA,SAAS4H,EAAO3G,EAAO,CACnB,GAAI2G,EAAM,SAAW3G,EAAM,OACvB,MAAO,CAAC,EAGZ,IAAMgB,EAAQ,IAAI,IAClB,OAAO,KAAK2F,EAAM,OAAO,EAAE,QAAQxH,GAAQ6B,EAAM,IAAI7B,CAAI,CAAC,EAC1D,OAAO,KAAKa,EAAM,OAAO,EAAE,QAAQb,GAAQ6B,EAAM,IAAI7B,CAAI,CAAC,EAE1D,IAAMsH,EAAQ,CAAC,EACf,QAAWtH,KAAQ6B,EAAM,OAAO,EAC5B,GAAI,KAAK,QAAQ,YAAc,MAAQ,KAAK,QAAQ,WAAW,SAAS7B,CAAI,EAAG,CAC3E,IAAM8E,EAAW0C,EAAM,QAAQxH,CAAI,EAC7B2H,EAAW9G,EAAM,QAAQb,CAAI,EAC/B8E,IAAa6C,GACbL,EAAM,KAAK,CACP,WAAYtH,EACZ,SAAU8E,EACV,SAAU6C,CACd,CAAC,CAET,CAEJ,OAAOL,CACX,CACJ,EAYaM,EAAN,MAAMC,UAAyB1K,EAAG,gBAAiB,CA1zC1D,MA0zC0D,CAAAE,EAAA,yBACtD,OAAO,eAAiB,IAAIwJ,EAAQ,CAChC,WAAY,OACZ,gBAAiB,OACjB,kBAAmB,OACnB,cAAe,OACf,sBAAuB,OACvB,UAAW,OACX,QAAS,MACb,CAAC,EAED,OAAO,cAAcvE,EAAS,CAC1B,OAAO,KAAK,UAAU,KAAK,eAAe,MAAMA,CAAO,CAAC,CAC5D,CAEA,YAAYrB,EAAUqB,EAAU,CAAC,EAAG,CAChC,MAAM,SAAUX,EAAS,CACrB,QAAWX,KAASW,EAChBV,EAASD,EAAO,KAAK,cAAc,MAAMA,EAAM,OAAQ,IAAMA,CAAK,CAAC,CAE3E,CAAC,EAED,KAAK,QAAU6G,EAAiB,eAAe,MAAMvF,CAAO,EAC5D,KAAK,cAAgB,IAAIqC,CAC7B,CAEA,QAAQ7C,EAAQ,CACZ,YAAK,cAAc,IAAIA,EAAQ,IAAI,EAC5B,MAAM,QAAQA,EAAQ,KAAK,OAAO,CAC7C,CAEA,UAAUA,EAAQ,CACd,MAAM,WAAW,EACjB,OAAW,CAACgG,CAAI,IAAK,KAAK,cAAc,QAAQ,EACxCA,IAAShG,EACT,KAAK,cAAc,OAAOgG,CAAI,EAG9B,KAAK,QAAQA,EAAM,KAAK,OAAO,CAG3C,CAEA,YAAa,CACT,YAAK,cAAc,MAAM,EAClB,MAAM,WAAW,CAC5B,CAEA,SAAU,CACN,OAAO,KAAK,cAAc,QAAQ,CACtC,CACJ,EAWaC,EAAN,MAAMC,UAAuB7K,EAAG,cAAe,CAx3CtD,MAw3CsD,CAAAE,EAAA,uBAClD,OAAO,eAAiB,IAAIwJ,EAAQ,CAChC,IAAK,MACT,CAAC,EAED,OAAO,cAAcvE,EAAS,CAC1B,OAAO,KAAK,UAAU,KAAK,eAAe,MAAMA,CAAO,CAAC,CAC5D,CAEA,YAAYrB,EAAUqB,EAAU,CAAC,EAAG,CAChC,MAAM,SAAUX,EAAS,CACrB,QAAWX,KAASW,EAChBV,EAASD,EAAO,KAAK,cAAc,MAAMA,EAAM,OAAQ,IAAMA,CAAK,CAAC,CAE3E,EAAGsB,CAAO,EAEV,KAAK,QAAU0F,EAAe,eAAe,MAAM1F,CAAO,EAC1D,KAAK,cAAgB,IAAIqC,CAC7B,CAEA,QAAQ7C,EAAQ,CACZ,YAAK,cAAc,IAAIA,EAAQ,IAAI,EAC5B,MAAM,QAAQA,EAAQ,KAAK,OAAO,CAC7C,CAEA,UAAUA,EAAQ,CACd,YAAK,cAAc,OAAOA,CAAM,EACzB,MAAM,UAAUA,CAAM,CACjC,CAEA,YAAa,CACT,YAAK,cAAc,MAAM,EAClB,MAAM,WAAW,CAC5B,CAEA,SAAU,CACN,OAAO,KAAK,cAAc,QAAQ,CACtC,CACJ,EAUamG,EAAN,MAAMC,UAA6B/K,EAAG,oBAAqB,CAx6ClE,MAw6CkE,CAAAE,EAAA,6BAC9D,OAAO,eAAiB,IAAIwJ,EAAQ,CAChC,KAAM,OACN,WAAY,OACZ,UAAW,MACf,CAAC,EAED,OAAO,cAAcvE,EAAS,CAE1B,IAAM6F,EAAW,IAAIhL,EAAG,qBAAqB,IAAM,CAAC,EAAGmF,CAAO,EACxD8F,EAAY,CACd,KAAMD,EAAS,KACf,WAAYA,EAAS,WACrB,UAAWA,EAAS,UACxB,EACA,OAAAC,EAAU,KAAOxK,EAAE,SAASwK,EAAU,IAAI,EACnC,KAAK,UAAUA,CAAS,CACnC,CAEA,YAAYnH,EAAUqB,EAAU,CAAC,EAAG,CAChCA,EAAU4F,EAAqB,eAAe,MAAM5F,CAAO,EAC3D,MAAM,SAAUX,EAAS,CACrB,QAAWX,KAASW,EAGhBX,EAAM,sBAAwBA,EAAM,kBAChCA,EAAM,wBAA0B,GAAKA,EAAM,iBAC3CA,EAAM,sBAAwB,OAAO,SAEzCC,EAASD,EAAO,KAAK,cAAc,MAAMA,EAAM,OAAQ,IAAMA,CAAK,CAAC,CAE3E,EAAGsB,CAAO,EAEV,KAAK,QAAUA,EACf,KAAK,cAAgB,IAAIqC,CAC7B,CAEA,QAAQ7C,EAAQ,CACZ,YAAK,cAAc,IAAIA,EAAQ,IAAI,EAC5B,MAAM,QAAQA,CAAM,CAC/B,CAEA,UAAUA,EAAQ,CACd,YAAK,cAAc,OAAOA,CAAM,EACzB,MAAM,UAAUA,CAAM,CACjC,CAEA,YAAa,CACT,YAAK,cAAc,MAAM,EAClB,MAAM,WAAW,CAC5B,CAEA,SAAU,CACN,OAAO,KAAK,cAAc,QAAQ,CACtC,CACJ,EAOa8E,EAAN,cAA0BzJ,EAAG,WAAY,CAt+ChD,MAs+CgD,CAAAE,EAAA,oBAC5C,YAAYgL,EAAM/F,EAAS,CACvB,MAAM+F,EAAM/F,CAAO,EAEnB,KAAK,UAAYA,EAAQ,SAC7B,CACJ,EAOagG,EAAN,cAAsB,QAAS,CAn/CtC,MAm/CsC,CAAAjL,EAAA,gBAClC,YAAYkL,EAAGC,EAAG,EAAG,CACjB,MAAMD,EAAGC,CAAC,EACV,KAAK,EAAI,CACb,CAEA,OAAO1G,EAAQ,CACX,OAAOA,EAAO,EAAI,KAAK,CAC3B,CAEA,OAAOA,EAAQ,CACX,OAAOA,EAAO,EAAI,KAAK,CAC3B,CAEA,OAAOA,EAAQ,CACX,OAAOA,EAAO,EAAI,KAAK,CAC3B,CAEA,SAASA,EAAQ,CACb,OAAO,KAAK,KAAK,KAAK,OAAOA,CAAM,GAAK,EAAI,KAAK,OAAOA,CAAM,GAAK,CAAC,CACxE,CAEA,OAAOA,EAAQ,CACX,IAAI2G,EAAS,KAAK,MAAM,KAAK,OAAO3G,CAAM,EAAG,KAAK,OAAOA,CAAM,CAAC,GAAK,IAAM,KAAK,IAAM,GACtF,OAAI2G,EAAS,IACTA,GAAU,KAEPA,CACX,CAEA,SAAS3G,EAAQ,CACb,OAAO,KAAK,SAASA,CAAM,EAAI,KAAK,OAAOA,CAAM,CACrD,CACJ,EClhDA,IAAO4G,EAAP,KAAqB,CAFrB,MAEqB,CAAAC,EAAA,gBACjB,OAAO,UAAY,CAAC,EAEpB,YAAYC,EAAQC,EAAUC,EAASC,EAAS,CAExCD,EAAQ,gBACRA,EAAQ,gBAAkBE,EAAE,kBAAkBF,EAAQ,aAAa,EAAIA,EAAQ,cAAgB,CAACA,EAAQ,aAAa,GAEzHA,EAAU,OAAO,OAAOA,EAAS,CAC7B,WAAY,GACZ,kBAAmB,EACvB,CAAC,EACD,KAAK,QAAUG,EAAiB,cAAcH,CAAO,EACrD,KAAK,SAAW,KAAK,YAAY,UAAU,KAAK,OAAO,IAAM,IAAIG,EAAiB,CAACC,EAAOC,IAAS,CAC/FJ,EAAQG,EAAM,OAAQ,CAClB,QAASA,EAAM,cACf,SAAUA,EAAM,SAChB,SAAUA,EAAM,OAAO,aAAaA,EAAM,aAAa,CAC3D,EAAG,CACC,UAAW,CACP,SAAU,KAAK,SACf,MAAOA,CACX,CACJ,CAAC,CACL,EAAGJ,CAAO,EACV,KAAK,SAAW,CACZ,OAAQH,EAACS,GAAS,KAAK,SAAS,QAAQA,CAAI,EAApC,UACR,OAAQT,EAACS,GAAS,KAAK,SAAS,UAAUA,CAAI,EAAtC,SACZ,CACJ,CACJ,EC9BA,IAAOC,EAAP,KAAqB,CAFrB,MAEqB,CAAAC,EAAA,gBACjB,OAAO,UAAY,CAAC,EAEpB,YAAYC,EAAQC,EAAUC,EAASC,EAAS,CAC5C,IAAMC,EAAiBF,EAAQ,WAC/BA,EAAU,OAAO,OAAOA,EAAS,CAC7B,UAAW,GACX,WAAY,EAChB,CAAC,EACD,KAAK,QAAUG,EAAiB,cAAcH,CAAO,EACrD,KAAK,SAAW,KAAK,YAAY,UAAU,KAAK,OAAO,IAAM,IAAIG,EAAiB,CAACC,EAAOC,IAAS,CAC/F,QAAWC,KAASF,EAAM,WAChBE,aAAiB,UAGvBL,EAAQG,EAAM,OAAQ,CAClB,QAAS,SACT,KAAME,CACV,EAAG,CACC,UAAW,CACP,SAAU,KAAK,SACf,MAAOF,CACX,CACJ,CAAC,EACD,KAAK,YAAY,UAAU,YAAc,KAAK,OAAO,GAAG,UAAUE,CAAK,GAE3E,QAAWA,KAASF,EAAM,aAChBE,aAAiB,UAGvBL,EAAQG,EAAM,OAAQ,CAClB,QAAS,SACT,KAAME,CACV,EAAG,CACC,UAAW,CACP,SAAU,KAAK,SACf,MAAOF,CACX,CACJ,CAAC,EACD,KAAK,YAAY,UAAU,YAAc,KAAK,OAAO,GAAG,YAAYE,CAAK,EAEjF,EAAGN,CAAO,EACNE,IACA,KAAK,WAAa,KAAK,YAAY,UAAU,YAAc,KAAK,OAAO,IAAM,IAAIC,EAAiB,CAACC,EAAOC,IAAS,CAC/GJ,EAAQG,EAAM,OAAO,cAAe,CAChC,QAAS,SACT,KAAMA,EAAM,OACZ,KAAMA,EAAM,cACZ,SAAUA,EAAM,SAChB,SAAUA,EAAM,OAAO,aAAaA,EAAM,aAAa,CAC3D,EAAG,CACC,UAAW,CACP,SAAU,KAAK,WACf,MAAOA,CACX,CACJ,CAAC,CACL,EAAG,CACC,QAASJ,EAAQ,QACjB,UAAW,GACX,WAAY,GACZ,kBAAmB,EACvB,CAAC,GAEL,KAAK,SAAW,CACZ,OAAQH,EAACU,GAAS,KAAK,SAAS,QAAQA,CAAI,EAApC,UACR,OAAQV,EAACU,GAAS,KAAK,SAAS,UAAUA,CAAI,EAAtC,SACZ,CACJ,CACJ,ECpEA,IAAOC,EAAP,KAAqB,CAFrB,MAEqB,CAAAC,EAAA,gBACjB,OAAO,UAAY,CAAC,EAEpB,YAAYC,EAAQC,EAAUC,EAASC,EAAS,CAC5C,KAAK,QAAUC,EAAe,cAAcF,CAAO,EACnD,KAAK,SAAW,KAAK,YAAY,UAAU,KAAK,OAAO,IAAM,IAAIE,EAAe,CAACC,EAAOC,IAAS,CAC7FH,EAAQE,EAAM,OAAQ,CAClB,QAASA,EAAM,WACf,SAAUA,EAAM,SAChB,SAAUA,EAAM,QACpB,EAAG,CACC,UAAW,CACP,SAAU,KAAK,SACf,MAAOA,CACX,EAEA,QAAS,GACT,WAAY,GACZ,SAAU,EACd,CAAC,CACL,EAAGH,CAAO,EACV,KAAK,SAAS,QAAQF,CAAM,CAChC,CAEA,WAAWA,EAAQ,CACf,KAAK,SAAS,UAAUA,CAAM,CAClC,CACJ,EC3BA,IAAOO,EAAP,KAAqB,CAFrB,MAEqB,CAAAC,EAAA,gBACjB,OAAO,UAAY,CAAC,EAEpB,YAAYC,EAAQC,EAAUC,EAASC,EAAS,CAC5CD,EAAU,OAAO,OAAOA,EAAS,CAC7B,WAAY,GACZ,kBAAmB,GACnB,gBAAiB,CAAC,UAAU,CAChC,CAAC,EACD,KAAK,QAAUE,EAAiB,cAAcF,CAAO,EACrD,KAAK,SAAWD,EAAW,GAAGA,CAAQ,aAAe,KACrD,KAAK,SAAW,KAAK,YAAY,UAAUA,EAAW,KAAK,OAAO,IAAM,IAAIG,EAAiB,CAACC,EAAOC,IAAS,CAC1G,IAAMC,EAAWR,EAACC,GAAW,CACzB,IAAMQ,EAAST,EAAA,SAAUC,EAAQS,EAAU,CACvC,QAASC,EAAOV,EAAQU,GAAQ,KAAMA,EAAOA,EAAK,cAC9C,GAAID,GAAYC,IAASL,EAAM,QAC3B,GAAIA,EAAM,UAAY,KAClB,MAAO,WAGNK,EAAK,SACV,MAAO,GAGf,MAAO,EACX,EAZe,UAcTC,EAAWH,EAAOR,EAAQ,EAAI,EAC9BY,EAAWJ,EAAOR,EAAQ,EAAK,EACjCW,IAAaC,GACbT,EAAQH,EAAQ,CACZ,QAASW,EAAW,SAAW,UAC/B,SAAUA,EACV,SAAUC,CACd,EAAG,CACC,UAAW,CACP,SAAU,KAAK,SACf,MAAOP,CACX,CACJ,CAAC,CAET,EA7BiB,aA+Bb,CAACJ,GAAYI,EAAM,OAAO,QAAQJ,CAAQ,IAC1CM,EAASF,EAAM,MAAM,EAErBJ,GACAI,EAAM,OAAO,iBAAiBJ,CAAQ,EAAE,QAAQS,GAAQH,EAASG,CAAI,CAAC,CAE9E,EAAGR,CAAO,EACV,KAAK,SAAW,CACZ,OAAQH,EAACW,GAAS,KAAK,SAAS,QAAQA,CAAI,EAApC,UACR,OAAQX,EAACW,GAAS,KAAK,SAAS,UAAUA,CAAI,EAAtC,SACZ,CACJ,CACJ,ECvDA,IAAOG,EAAP,KAAqB,CAFrB,MAEqB,CAAAC,EAAA,gBACjB,YAAYC,EAAQC,EAAUC,EAASC,EAAS,CAC5CD,EAAQ,UAAY,EACpB,KAAK,SAAW,GAChB,KAAK,QAAU,CAAC,EAEhB,KAAK,KAAQE,GAAM,CACfA,EAAE,OAAO,kBAAkBA,EAAE,SAAS,EAEtC,KAAK,SAAW,GAChB,KAAK,QAAQ,OAAO,CAAC,CACzB,EACA,KAAK,KAAQA,GAAM,CACVA,EAAE,QAAUF,EAAQ,SAAY,KAAK,UACtC,KAAK,QAAQ,KAAK,IAAIG,EAAQD,EAAE,QAASA,EAAE,QAASA,EAAE,SAAS,CAAC,CAExE,EACA,KAAK,GAAMA,GAAM,CAGb,GAFAA,EAAE,OAAO,sBAAsBA,EAAE,SAAS,EAEtC,KAAK,SAAU,CAEf,GADA,KAAK,SAAW,GACZ,KAAK,QAAQ,SAAW,EACxB,OAGJ,IAAME,EAAYJ,EAAQ,WAAa,GAEjCK,EAAiB,IAAIF,EAAQD,EAAE,QAASA,EAAE,QAASA,EAAE,SAAS,EAC9DI,EAAa,EAAI,KAAK,QAAQ,cAAeC,GAAMA,EAAE,OAAOF,CAAc,EAAID,CAAS,EACvFI,EAAc,KAAK,QAAQF,CAAU,EAErCG,EAAU,KAAK,QAAQ,MAAMH,CAAU,EACvCI,EAAWD,EAAQ,MAAM,EAAG,EAAE,EAAE,OAAO,CAACE,EAAKJ,EAAGK,IAAMD,EAAMF,EAAQG,CAAC,EAAE,SAASH,EAAQG,EAAI,CAAC,CAAC,EAAG,CAAC,EACxG,GAAIF,IAAa,EACb,OAGJ,KAAK,QAAQ,OAAO,CAAC,EACrBT,EAAQC,EAAE,OAAQ,CACd,SAAUQ,EAAWF,EAAY,OAAOH,CAAc,EACtD,OAAQG,EAAY,OAAOH,CAAc,EACzC,OAAQG,EAAY,OAAOH,CAAc,CAC7C,EAAG,CAAC,UAAWH,EAAG,QAAS,EAAI,CAAC,CACpC,CACJ,EACA,KAAK,OAAUA,GAAM,CACjBA,EAAE,OAAO,sBAAsBA,EAAE,SAAS,EAE1C,KAAK,SAAW,GAChB,KAAK,QAAQ,OAAO,CAAC,CACzB,EAEAJ,EAAO,iBAAiB,cAAe,KAAK,IAAI,EAChDA,EAAO,iBAAiB,gBAAiB,KAAK,MAAM,EACpDA,EAAO,iBAAiB,cAAe,KAAK,IAAI,EAChDA,EAAO,iBAAiB,YAAa,KAAK,EAAE,CAChD,CAEA,WAAWA,EAAQ,CACfA,EAAO,oBAAoB,cAAe,KAAK,IAAI,EACnDA,EAAO,oBAAoB,gBAAiB,KAAK,MAAM,EACvDA,EAAO,oBAAoB,cAAe,KAAK,IAAI,EACnDA,EAAO,oBAAoB,YAAa,KAAK,EAAE,CACnD,CACJ,ECjEA,IAAOe,EAAP,KAAqB,CAFrB,MAEqB,CAAAC,EAAA,gBACjB,OAAO,UAAY,CAAC,EAEpB,YAAYC,EAAQC,EAAUC,EAASC,EAAS,CAE5CD,EAAQ,QAAU,GAClB,KAAK,QAAUE,EAAqB,cAAcF,CAAO,EACzD,KAAK,SAAW,KAAK,YAAY,UAAU,KAAK,OAAO,IAAM,IAAIE,EAAqB,CAACC,EAAOC,IAAS,CACnG,GAAIJ,EAAQ,OAASI,EAAM,CACvB,IAAMC,EAAUD,EAAO,CAACA,EAAK,gBAAkBD,EAAM,eAAiB,QAAUC,EAAK,gBAAkB,CAACD,EAAM,eAAiB,QAAU,QAAU,KACnJF,EAAQE,EAAM,OAAQ,CAClB,QAASE,EAAS,SAAUD,GAAM,uBAAyB,KAAM,SAAUD,EAAM,qBACrF,EAAG,CACC,UAAW,CACP,SAAU,KAAK,SAAU,MAAOA,CACpC,CACJ,CAAC,CACL,CACJ,EAAGH,CAAO,EACV,KAAK,SAAW,CACZ,OAAQH,EAACS,GAAS,KAAK,SAAS,QAAQA,CAAI,EAApC,UAAuC,OAAQT,EAACS,GAAS,KAAK,SAAS,UAAUA,CAAI,EAAtC,SAC3D,CACJ,CACJ,ECvBA,IAAOC,EAAP,KAAqB,CAFrB,MAEqB,CAAAC,EAAA,gBACjB,OAAO,UAAY,CAAC,EAEpB,YAAYC,EAAQC,EAAUC,EAASC,EAAS,CAE5CD,EAAQ,QAAU,GAClB,KAAK,QAAUE,EAAe,cAAcF,CAAO,EACnD,KAAK,SAAW,KAAK,YAAY,UAAU,KAAK,OAAO,IAAM,IAAIE,EAAe,CAACC,EAAOC,IAAS,CAC7F,GAAIJ,EAAQ,OAASI,EAAM,CACvB,IAAMC,EAA2BC,EAAE,mBAAmBN,EAAQ,KAAO,cAAe,GAAG,EAAI,OAC3FC,EAAQE,EAAM,OAAQ,CAClB,QAASH,EAAQ,KAAO,cAExB,SAAUI,GAAQ,KAAO,KAAOA,EAAKC,CAAwB,EAAE,CAAC,EAChE,SAAUF,EAAME,CAAwB,EAAE,CAAC,CAC/C,EAAG,CACC,UAAW,CACP,SAAU,KAAK,SACf,MAAOF,CACX,CACJ,CAAC,CACL,CACJ,EAAGH,CAAO,EACV,KAAK,SAAW,CACZ,OAAQH,EAACU,GAAS,KAAK,SAAS,QAAQA,CAAI,EAApC,UACR,OAAQV,EAACU,GAAS,KAAK,SAAS,UAAUA,CAAI,EAAtC,SACZ,CACJ,CACJ,EC5BA,IAAOC,GAAP,KAAqB,CAFrB,MAEqB,CAAAC,EAAA,gBACjB,YAAYC,EAAQC,EAAUC,EAASC,EAAS,CAC5CD,EAAQ,UAAY,EACpB,KAAK,YAAc,KAEnB,KAAK,KAAQE,GAAM,CACfA,EAAE,OAAO,kBAAkBA,EAAE,SAAS,EAEtC,KAAK,YAAc,IAAIC,EAAQD,EAAE,QAASA,EAAE,QAASA,EAAE,SAAS,CACpE,EACA,KAAK,KAAQA,GAAM,CACf,GAAKA,EAAE,QAAUF,EAAQ,SAAY,KAAK,YAAa,CACnD,IAAMI,EAAgB,IAAID,EAAQD,EAAE,QAASA,EAAE,QAASA,EAAE,SAAS,EAC7DG,EAAW,KAAK,YAAY,SAASD,CAAa,EACpDC,IAAa,GACbJ,EAAQC,EAAE,OAAQ,CACd,SAAUG,EACV,OAAQ,KAAK,YAAY,OAAOD,CAAa,EAC7C,OAAQ,KAAK,YAAY,OAAOA,CAAa,EAC7C,SAAU,KAAK,YAAY,SAASA,CAAa,EACjD,OAAQ,KAAK,YAAY,OAAOA,CAAa,EAC7C,OAAQ,KAAK,YAAY,OAAOA,CAAa,CACjD,EAAG,CAAC,UAAWF,EAAG,QAAS,EAAI,CAAC,CAExC,CACJ,EACA,KAAK,GAAMA,GAAM,CACbA,EAAE,OAAO,sBAAsBA,EAAE,SAAS,EAE1C,KAAK,YAAc,IACvB,EACA,KAAK,OAAUA,GAAM,CACjBA,EAAE,OAAO,sBAAsBA,EAAE,SAAS,EAE1C,KAAK,YAAc,IACvB,EAEAJ,EAAO,iBAAiB,cAAe,KAAK,IAAI,EAChDA,EAAO,iBAAiB,cAAe,KAAK,IAAI,EAChDA,EAAO,iBAAiB,YAAa,KAAK,EAAE,EAC5CA,EAAO,iBAAiB,gBAAiB,KAAK,MAAM,CACxD,CAEA,WAAWA,EAAQ,CACfA,EAAO,oBAAoB,cAAe,KAAK,IAAI,EACnDA,EAAO,oBAAoB,cAAe,KAAK,IAAI,EACnDA,EAAO,oBAAoB,YAAa,KAAK,EAAE,EAC/CA,EAAO,oBAAoB,gBAAiB,KAAK,MAAM,CAC3D,CACJ,ECjDA,IAAOQ,GAAP,KAAqB,CAFrB,MAEqB,CAAAC,EAAA,gBACjB,OAAO,UAAY,CAAC,EAEpB,YAAYC,EAAQC,EAAUC,EAASC,EAAS,CAE5CD,EAAQ,QAAU,GAClB,KAAK,QAAUE,EAAe,cAAcF,CAAO,EACnD,KAAK,SAAW,KAAK,YAAY,UAAU,KAAK,OAAO,IAAM,IAAIE,EAAe,CAACC,EAAOC,IAAS,CAG7F,IAAMC,EAAUF,EAAM,YAAY,EAAI,GAAKA,EAAM,YAAY,EAAI,GAAKA,EAAM,YAAY,MAAQ,GAAKA,EAAM,YAAY,OAAS,GAE5HH,EAAQ,OAASI,IACbC,IAAYD,GAAM,SAClBH,EAAQE,EAAM,OAAQ,CAClB,QAAS,qBACT,SAAUC,GAAQ,KAAO,KAAO,CAACC,EACjC,SAAUA,CACd,EAAG,CACC,UAAW,CACP,SAAU,KAAK,SACf,MAAOF,CACX,CACJ,CAAC,CAGb,EAAGH,CAAO,EACV,KAAK,SAAW,CACZ,OAAQH,EAACS,GAAS,KAAK,SAAS,QAAQA,CAAI,EAApC,UACR,OAAQT,EAACS,GAAS,KAAK,SAAS,UAAUA,CAAI,EAAtC,SACZ,CACJ,CACJ,EC3BO,IAAMC,GAAN,KAAa,CAPpB,MAOoB,CAAAC,EAAA,eAChB,YAAYC,EAAM,CACd,IAAMC,EAAS,KAGf,KAAK,IAAMC,EAGX,KAAK,OAAS,IAAQC,EAAe,UAAY,CAC7C,GAAQC,EAAE,cAAcJ,CAAI,GAAK,CAACA,EAAK,IACnC,OAAOA,EAGX,IAAMK,EAAS,CAAC,EAChB,GAAIL,EAAK,KAAOA,EAAK,IACjB,OAAW,CAACM,EAAKC,CAAK,IAAK,IAAI,IAAIP,EAAK,KAAOA,EAAK,GAAG,EAAE,aAAa,QAAQ,EACtEM,EAAI,WAAW,SAAS,IACxBD,EAAOC,EAAI,UAAU,CAAgB,CAAC,EAAIC,GAItD,GAAIP,aAAgB,mBAChB,OAAW,CAACM,EAAKC,CAAK,IAASH,EAAE,gBAAgBJ,EAAK,OAAO,EACzD,GAAIM,EAAI,WAAW,QAAQ,EAAG,CAC1B,IAAME,EAAOF,EAAI,UAAU,CAAe,EAC1CD,EAAOG,EAAK,OAAO,CAAC,EAAE,YAAY,EAAIA,EAAK,UAAU,CAAC,CAAC,EAAID,CAC/D,EAGR,OAAOF,CACX,EAAG,CAAC,EAGJ,KAAK,OAAO,UAAU,CAClB,MAAO,GACP,SAAU,EACV,OAAQ,QACZ,CAAC,EACD,WAAW,KAAK,OAAO,MAAM,EAAI,KAEjC,KAAK,OAAS,IAAQI,EAAO,KAAK,OAAO,MAAO,KAAK,OAAO,SAAU,WAAY,WAAW,OAAO,CACxG,CAEA,QAAQC,EAAQ,CACZ,IAAMT,EAAS,KACTU,EAAaD,EAAO,KAAOA,EAAO,KAAOA,EAE/C,KAAK,OAAO,KAAKC,CAAU,EAC3B,OAAW,CAACC,EAAOC,CAAU,IAAK,OAAO,QAAQH,EAAOT,CAAM,CAAC,EAAG,CAC9D,IAAMa,EAAc,OAAO,0BAA0BD,CAAU,EAG/D,QAAWE,KAAc,OAAO,OAAOD,CAAW,EAC9C,GAAIC,EAAW,IAAK,CAChB,IAAMC,EAAWD,EAAW,KACxBd,EAAO,OAAO,aAAe,CAAKG,EAAE,iBAAiBY,CAAQ,KAC7DD,EAAW,IAAM,YAAaE,EAAM,CAChC,OAAWb,EAAE,uBAAuBY,EAAS,KAAK,IAAI,EAAG,KAAM,IAAI,EAAE,GAAGC,CAAI,CAChF,EAER,CAGJ,QAAWC,KAAQN,EAAM,MAAM,GAAG,EAE9B,GAAIM,EAAK,OAAO,CAAC,IAAM,IACnB,QAAWC,KAAYjB,EAAIgB,CAAI,EAAE,EAC7B,OAAW,CAACE,EAAML,CAAU,IAAK,OAAO,QAAQD,CAAW,EAEnDM,IAAS,UAGb,OAAO,eAAe,WAAWD,CAAQ,EAAE,UAAWC,EAAM,CACxD,KAAM,CACF,IAAMC,EAAajB,EAAE,gBAAgB,IAAI,EAAE,IAAI,CAAC,CAACkB,EAAGC,CAAC,IAAMA,IAAIH,CAAI,CAAC,EACpE,OAAIC,EAAO,QAAUA,EAAO,MAAME,GAASnB,EAAE,eAAemB,EAAG,OAAQ,MAAO,QAAQ,CAAC,EAC5EF,EAEJ,IAAQG,EAAWH,EAAQD,EAAM,IAAI,CAChD,EACA,IAAIb,EAAO,CACP,OAAWH,EAAE,gBAAgB,IAAI,EAAE,QAAQ,CAAC,CAACkB,EAAGC,CAAC,IAAM,CAC/CH,KAAQG,GACJnB,EAAE,uBAAuB,GAAKmB,EAAEH,CAAI,EAAI,EAAG,KAAMG,EAAGD,CAAC,EAAEf,CAAK,CAExE,CAAC,CACL,EACA,aAAcQ,EAAW,aACzB,WAAYA,EAAW,UAC3B,CAAC,OAMT,OAAO,iBAAiB,WAAWG,CAAI,EAAE,UAAWJ,CAAW,CAG3E,CACA,KAAK,OAAO,QAAQH,CAAU,CAClC,CACJ,ECnGO,SAASc,GAAeC,EAAQ,CACnC,IAAMC,EAAmB,CACrB,YAAa,CAAC,eAAe,EAC7B,QAAS,CAAC,mBAAoB,gBAAiB,eAAgB,eAAgB,cAAe,gBAAiB,qBAAsB,oBAAqB,WAAY,wBAAwB,EAC9L,kBAAmB,CAAC,iBAAkB,UAAW,SAAU,OAAQ,MAAO,OAAO,EACjF,gBAAiB,CAAC,QAAQ,EAC1B,cAAe,CAAC,OAAO,EACvB,gBAAiB,CAAC,QAAS,aAAc,UAAW,OAAQ,eAAgB,gBAAiB,iBAAkB,SAAU,UAAW,UAAW,eAAgB,mBAAoB,SAAU,YAAa,iBAAkB,YAAa,WAAY,aAAc,aAAc,aAAc,qBAAsB,WAAY,WAAY,YAAa,uBAAwB,WAAY,OAAQ,OAAO,EAC7Y,iBAAkB,CAAC,SAAS,EAC5B,qBAAsB,CAAC,GAAG,EAC1B,eAAgB,CAAC,OAAO,EACxB,YAAa,CAAC,oBAAqB,cAAe,UAAW,iBAAkB,uBAAwB,mBAAoB,aAAc,gBAAiB,gBAAiB,iBAAkB,mBAAoB,SAAU,WAAY,YAAa,mBAAoB,WAAY,UAAW,UAAW,qCAAsC,gBAAiB,gBAAiB,oBAAqB,SAAU,cAAe,QAAS,aAAc,SAAU,YAAa,cAAe,cAAe,aAAc,cAAe,SAAU,mBAAoB,YAAa,UAAW,UAAW,UAAW,aAAc,sBAAuB,UAAW,YAAa,YAAa,aAAc,UAAW,SAAU,eAAgB,mBAAoB,cAAe,uBAAwB,cAAe,eAAgB,eAAgB,cAAe,aAAc,cAAe,YAAa,eAAgB,UAAW,UAAW,SAAU,YAAa,kBAAmB,gBAAiB,iBAAkB,iBAAkB,gBAAiB,eAAgB,gBAAiB,qBAAsB,cAAe,aAAc,eAAgB,UAAW,WAAY,WAAY,cAAe,qBAAsB,uBAAwB,4BAA6B,WAAY,YAAa,WAAY,oBAAqB,gBAAiB,eAAgB,YAAa,WAAY,YAAa,eAAgB,WAAY,qBAAsB,kBAAmB,kBAAmB,oBAAqB,iBAAkB,YAAa,UAAW,wBAAyB,oBAAoB,EACjjD,iBAAkB,CAAC,QAAS,MAAM,EAClC,uBAAwB,CAAC,GAAG,EAC5B,gBAAiB,CAAC,QAAS,OAAQ,MAAM,EACzC,gBAAiB,CAAC,qBAAqB,EACvC,iBAAkB,CAAC,GAAG,EACtB,oBAAqB,CAAC,OAAQ,eAAgB,gBAAiB,iBAAkB,SAAU,UAAW,UAAW,eAAgB,mBAAoB,SAAU,YAAa,iBAAkB,YAAa,WAAY,aAAc,aAAc,aAAc,qBAAsB,WAAY,WAAY,YAAa,uBAAwB,WAAY,MAAM,EACtW,cAAe,CAAC,QAAS,QAAS,UAAW,OAAQ,OAAO,EAC5D,mBAAoB,CAAC,OAAO,EAC5B,gBAAiB,CAAC,SAAS,EAC3B,kBAAmB,CAAC,mBAAoB,QAAS,sBAAuB,iBAAkB,MAAO,gBAAiB,cAAe,WAAY,eAAgB,cAAe,eAAgB,wBAAyB,WAAW,EAChO,iBAAkB,CAAC,QAAS,iBAAkB,SAAU,gBAAiB,SAAU,WAAY,OAAQ,wBAAyB,QAAQ,EACxI,iBAAkB,CAAC,QAAS,cAAe,SAAU,iBAAiB,EACtE,cAAe,CAAC,MAAM,EACtB,kBAAmB,CAAC,OAAO,EAC3B,gBAAiB,CAAC,UAAW,WAAY,gBAAiB,MAAO,QAAQ,EACzE,mBAAoB,CAAC,GAAG,EACxB,iBAAkB,CAAC,gBAAiB,aAAc,eAAgB,wBAAyB,aAAc,cAAe,kBAAmB,SAAU,YAAa,QAAQ,EAC1K,gBAAiB,CAAC,SAAS,EAC3B,gBAAiB,CAAC,QAAQ,EAC1B,iBAAkB,CAAC,SAAS,EAC5B,kBAAmB,CAAC,QAAS,UAAW,SAAU,OAAQ,WAAY,WAAY,UAAW,SAAU,UAAW,QAAQ,EAC1H,qBAAsB,CAAC,OAAO,EAC9B,iBAAkB,CAAC,OAAQ,OAAQ,QAAS,WAAW,EACvD,eAAgB,CAAC,OAAO,EACxB,kBAAmB,CAAC,iBAAkB,WAAY,UAAW,QAAS,eAAe,EACrF,iBAAkB,CAAC,WAAY,MAAM,EACrC,wBAAyB,CAAC,OAAO,EACjC,qBAAsB,CAAC,QAAS,OAAQ,UAAW,KAAM,QAAS,SAAU,SAAU,SAAU,OAAO,EACvG,oBAAqB,CAAC,QAAS,KAAM,QAAS,OAAQ,SAAU,OAAO,EACvE,iBAAkB,CAAC,QAAS,UAAW,SAAU,cAAe,cAAe,QAAS,QAAS,UAAW,OAAO,EACnH,oBAAqB,CAAC,QAAS,UAAW,KAAM,QAAS,QAAQ,EACjE,wBAAyB,CAAC,QAAS,KAAM,QAAS,QAAQ,EAC1D,iBAAkB,CAAC,UAAW,MAAM,EACpC,iBAAkB,CAAC,2BAA4B,0BAA2B,0BAA2B,cAAe,0BAA2B,2BAA2B,CAC9K,EAEMC,EAAmB,CAErB,KAAM,CAAC,cAAe,OAAQ,QAAS,SAAU,OAAQ,MAAM,EAE/D,QAAS,CAAC,QAAS,UAAW,SAAU,aAAc,mBAAoB,mBAAoB,6BAA8B,WAAY,cAAe,eAAgB,eAAgB,mBAAoB,cAAe,cAAe,kBAAmB,eAAgB,eAAgB,eAAgB,aAAc,cAAe,mBAAoB,YAAa,YAAa,WAAY,YAAa,gBAAiB,sBAAuB,kBAAmB,kBAAmB,eAAgB,cAAe,eAAgB,eAAgB,eAAgB,sBAAuB,eAAgB,eAAgB,mBAAoB,cAAe,eAAgB,cAAe,WAAY,eAAgB,eAAgB,eAAgB,gBAAiB,eAAgB,eAAgB,aAAc,SAAU,kBAAmB,oBAAqB,WAAY,YAAa,YAAa,eAAgB,aAAc,YAAa,cAAe,UAAW,iBAAkB,oBAAqB,gBAAiB,eAAgB,iBAAkB,oBAAqB,mBAAoB,qBAAsB,wBAAyB,iBAAkB,yBAA0B,uBAAwB,yBAA0B,UAAW,eAAgB,iBAAkB,gBAAiB,oBAAqB,KAAM,YAAa,wBAAyB,qBAAsB,qBAAsB,mBAAoB,YAAa,UAAW,aAAc,eAAgB,qBAAsB,YAAa,OAAQ,SAAU,UAAW,yBAA0B,gBAAiB,mBAAoB,wBAAyB,SAAU,kBAAmB,oBAAqB,sBAAuB,kBAAmB,cAAe,oBAAqB,qBAAsB,OAAQ,SAAU,WAAY,eAAgB,iBAAkB,aAAc,WAAY,YAAa,cAAe,eAAgB,iBAAkB,mBAAoB,qBAAsB,gBAAiB,oBAAqB,aAAc,OAAQ,UAAW,iBAAiB,EAE3gE,YAAa,CAAC,mBAAoB,qBAAqB,EAEvD,KAAM,CAAC,eAAgB,mBAAoB,MAAM,EAEjD,kBAAmB,CAAC,WAAY,OAAQ,OAAQ,WAAY,OAAQ,WAAY,SAAU,WAAY,WAAY,OAAQ,OAAQ,WAAY,iBAAkB,MAAO,UAAW,SAAU,SAAU,OAAQ,WAAY,OAAQ,UAAU,EAE5O,gBAAiB,CAAC,MAAO,SAAU,WAAY,OAAQ,OAAQ,WAAY,OAAQ,SAAU,WAAY,WAAY,OAAQ,OAAQ,WAAY,iBAAkB,MAAO,UAAW,SAAU,QAAS,SAAU,WAAY,UAAU,EAExO,gBAAiB,CAAC,OAAQ,QAAQ,EAElC,kBAAmB,CAAC,gBAAiB,WAAY,OAAQ,aAAc,cAAe,aAAc,iBAAkB,aAAc,SAAU,OAAQ,sBAAuB,uBAAwB,iBAAkB,oBAAqB,OAAQ,oBAAqB,WAAY,QAAS,cAAc,EAE5S,kBAAmB,CAAC,gBAAiB,aAAc,SAAU,SAAU,YAAa,6BAA8B,OAAO,EAEzH,gBAAiB,CAAC,OAAO,EAEzB,oBAAqB,CAAC,SAAS,EAE/B,mBAAoB,CAAC,OAAQ,MAAM,EAEnC,kBAAmB,CAAC,QAAS,WAAY,OAAQ,eAAgB,cAAe,OAAQ,WAAW,EAEnG,YAAa,CAAC,YAAa,kBAAmB,iBAAkB,YAAa,OAAQ,QAAS,kBAAmB,UAAW,MAAO,YAAa,eAAgB,QAAS,SAAU,cAAe,QAAS,YAAa,YAAa,oBAAqB,OAAQ,QAAS,eAAgB,aAAc,eAAgB,YAAa,cAAe,YAAa,UAAW,cAAe,aAAc,QAAS,WAAY,QAAS,gBAAiB,WAAW,EAEpc,iBAAkB,CAAC,iBAAkB,SAAU,MAAO,OAAQ,OAAO,EAErE,oBAAqB,CAAC,gBAAiB,WAAY,WAAY,OAAQ,OAAQ,iBAAkB,oBAAqB,OAAQ,oBAAqB,WAAY,cAAc,EAE7K,gBAAiB,CAAC,gBAAiB,SAAU,eAAgB,gBAAiB,WAAY,WAAY,UAAW,SAAU,SAAU,OAAQ,aAAc,MAAO,UAAW,iBAAkB,gBAAiB,QAAS,SAAU,QAAQ,EAE3O,kBAAmB,CAAC,QAAS,kBAAmB,kBAAmB,gBAAiB,iBAAkB,SAAU,UAAW,OAAQ,iBAAkB,UAAW,MAAO,SAAU,OAAO,EAExL,iBAAkB,CAAC,MAAO,WAAY,cAAe,aAAc,SAAU,WAAY,SAAU,QAAS,UAAW,SAAU,gBAAiB,eAAgB,iBAAkB,QAAS,MAAO,SAAU,SAAU,QAAS,IAAK,GAAG,EAEzO,iBAAkB,CAAC,SAAU,MAAO,eAAgB,gBAAiB,UAAW,iBAAkB,eAAgB,UAAW,WAAY,QAAS,OAAQ,aAAc,cAAe,aAAc,iBAAkB,aAAc,SAAU,gBAAiB,SAAU,OAAQ,MAAO,YAAa,MAAO,YAAa,WAAY,OAAQ,UAAW,cAAe,sBAAuB,uBAAwB,WAAY,iBAAkB,WAAY,SAAU,qBAAsB,eAAgB,iBAAkB,oBAAqB,eAAgB,oBAAqB,aAAc,OAAQ,MAAO,OAAQ,WAAY,SAAU,OAAQ,oBAAqB,WAAY,QAAS,cAAe,gBAAiB,QAAS,cAAc,EAEjuB,cAAe,CAAC,OAAO,EAEvB,iBAAkB,CAAC,UAAW,OAAQ,SAAS,EAE/C,kBAAmB,CAAC,MAAM,EAE1B,gBAAiB,CAAC,KAAM,cAAe,WAAY,OAAQ,WAAY,aAAc,cAAe,YAAa,QAAS,iBAAkB,MAAO,UAAW,QAAS,QAAS,MAAM,EAEtL,eAAgB,CAAC,QAAS,MAAM,EAEhC,iBAAkB,CAAC,eAAgB,WAAY,WAAY,cAAe,WAAY,cAAe,aAAc,cAAe,eAAgB,sBAAuB,WAAY,QAAS,QAAS,OAAQ,OAAQ,QAAS,eAAgB,QAAS,SAAU,OAAQ,eAAgB,SAAU,UAAW,iBAAkB,aAAc,WAAY,UAAW,MAAO,YAAa,aAAc,QAAQ,EAEjZ,gBAAiB,CAAC,UAAW,YAAa,QAAS,MAAM,EAEzD,iBAAkB,CAAC,OAAQ,SAAU,MAAO,MAAO,MAAO,UAAW,OAAO,EAE5E,eAAgB,CAAC,OAAQ,UAAU,EAEnC,iBAAkB,CAAC,WAAY,QAAS,MAAM,EAE9C,kBAAmB,CAAC,gBAAiB,kBAAmB,gBAAiB,OAAQ,OAAQ,iBAAkB,SAAU,OAAQ,iBAAkB,oBAAqB,OAAQ,SAAU,oBAAqB,WAAY,QAAS,cAAc,EAE9O,oBAAqB,CAAC,WAAY,OAAO,EAEzC,kBAAmB,CAAC,kBAAmB,WAAY,OAAQ,QAAS,QAAS,WAAY,OAAQ,OAAO,EAExG,kBAAmB,CAAC,gBAAiB,eAAgB,OAAQ,UAAW,SAAU,OAAQ,iBAAkB,oBAAqB,OAAQ,oBAAqB,WAAY,QAAS,cAAc,EAEjM,oBAAqB,CAAC,SAAU,MAAO,WAAY,OAAO,EAE1D,iBAAkB,CAAC,MAAM,EAEzB,kBAAmB,CAAC,QAAS,cAAe,QAAS,UAAW,YAAa,WAAY,iBAAkB,MAAO,OAAQ,MAAM,EAEhI,kBAAmB,CAAC,MAAO,eAAgB,gBAAiB,WAAY,OAAQ,OAAQ,SAAU,SAAU,WAAY,OAAQ,YAAa,UAAW,SAAU,iBAAkB,WAAY,gBAAiB,kBAAmB,oBAAqB,aAAc,OAAQ,OAAQ,oBAAqB,WAAY,QAAS,cAAc,EAE/U,gBAAiB,CAAC,SAAU,mBAAoB,gBAAiB,MAAM,EAEvE,kBAAmB,CAAC,SAAU,QAAS,QAAS,MAAO,SAAU,OAAQ,OAAO,EAEhF,iBAAkB,CAAC,WAAY,QAAS,OAAO,EAE/C,qBAAsB,CAAC,OAAQ,YAAa,UAAW,UAAW,UAAW,OAAO,EAEpF,iBAAkB,CAAC,UAAW,gBAAiB,cAAe,cAAe,cAAe,gBAAiB,YAAa,cAAe,cAAe,YAAa,OAAQ,UAAW,QAAS,OAAO,EAExM,oBAAqB,CAAC,QAAS,aAAc,aAAc,WAAY,iBAAiB,EAExF,wBAAyB,CAAC,YAAa,YAAa,MAAM,EAE1D,oBAAqB,CAAC,UAAW,qBAAsB,2BAA4B,iBAAkB,wBAAwB,EAE7H,oBAAqB,CAAC,eAAgB,gBAAiB,OAAQ,eAAgB,UAAW,WAAY,OAAQ,SAAU,YAAa,YAAa,OAAQ,cAAe,WAAY,iBAAkB,WAAY,OAAQ,SAAU,qBAAsB,eAAgB,iBAAkB,oBAAqB,eAAgB,oBAAqB,aAAc,OAAQ,oBAAqB,WAAY,QAAS,eAAgB,MAAM,EAE7a,gBAAiB,CAAC,UAAU,EAE5B,iBAAkB,CAAC,MAAM,EAEzB,iBAAkB,CAAC,UAAW,OAAQ,QAAS,aAAc,MAAO,UAAW,OAAO,EAEtF,iBAAkB,CAAC,0BAA2B,0BAA2B,SAAU,SAAU,cAAe,aAAc,OAAO,EAEjI,KAAM,CAAC,cAAe,UAAW,aAAc,YAAa,0BAA2B,WAAY,aAAc,cAAe,gBAAiB,eAAgB,cAAe,qBAAsB,cAAe,aAAc,YAAa,qBAAsB,eAAgB,cAAe,WAAY,WAAY,YAAa,YAAa,gBAAiB,gBAAiB,aAAc,kBAAmB,cAAe,eAAgB,aAAa,CAC1c,EACMC,EAAkBH,EAAO,OAAO,MAA4B,UAAY,CAC1E,IAAMI,EAAS,OAAO,OAAO,IAAI,EAGjC,QAAWC,KAAQ,OAAO,KAAK,OAAO,0BAA0B,UAAU,CAAC,EAAG,CAC1E,GAAI,CAACA,EAAK,MAAM,8DAA8D,EAC1E,SAGJ,IAAMC,EAAY,WAAWD,CAAI,EACjC,QAAWE,KAAYD,EAAU,UAEzBC,EAAS,YAAY,IAAMA,IAI3BA,EAAS,MAAM,oBAAoB,GAAKA,EAAS,WAAW,UAAU,GAIrE,OAAO,UAAU,eAAe,KAAKD,EAAU,UAAWC,CAAQ,IAInEF,KAAQJ,IAAqBA,EAAiBI,CAAI,EAAE,SAASE,CAAQ,GAAKN,EAAiBI,CAAI,EAAE,SAAS,GAAG,KAIjHD,EAAOE,EAAU,IAAI,GAAKF,EAAOE,EAAU,IAAI,GAAK,IAAI,KAAO,IAAIC,CAAQ,IAEnF,CAGA,IAAMC,EAAU,CAAC,EACjB,QAAWH,KAAQ,OAAO,KAAKD,CAAM,EAAE,SAAS,EAC5CI,EAAQH,CAAI,EAAI,CAAC,GAAGD,EAAOC,CAAI,CAAC,EAAE,SAAS,EAI/C,OAAAL,EAAO,OAAO,MAAM,OAAO,KAAKQ,CAAO,EAAE,IAAIH,GAAQ,iDAAiDA,CAAI;AAAA,EAAKA,CAAI,KAAK,KAAK,UAAUG,EAAQH,CAAI,CAAC,CAAC,GAAG,EAAE,KAAK;AAAA,CAAI,CAAC,EAE7JG,CACX,EAAG,EA1C2CN,EA4C9CF,EAAO,OAAO,UAAU,CACpB,aAAc,GACd,YAAa,EACjB,CAAC,EAGD,IAAMS,EAAmBT,EAAO,OAAO,aAAe,CAClD,CAAC,CAAC,KAAK,IAAI,CAAC,EAA+B,CAMvC,CAAC,OAAO,WAAW,GAAI,CACnB,OAAO,KAAK,WAAa,KAAK,WAAa,IAC/C,CACJ,EACA,CAAC,CAAC,SAAS,IAAI,CAAC,EAAmC,CAM/C,CAAC,OAAO,WAAW,GAAI,CACnB,MAAO,CAAC,GAAG,IAAI,EAAE,KAAK,EAAE,CAC5B,EASA,cAAcU,EAAO,CACjB,IAAMN,EAAS,CAAC,EAChB,QAAWO,KAAQ,KAAM,CAErB,IAAMC,EAAW,IAAIF,EAAM,YAAYA,EAAM,KAAMA,CAAK,EAExDN,EAAO,KAAKO,EAAK,cAAcC,CAAQ,CAAC,CAC5C,CACA,OAAOR,CACX,CACJ,EACA,CAAC,CAAC,cAAc,IAAI,CAAC,EAAwC,CAQzD,IAAI,MAAO,CACP,OAAO,KAAK,CAAC,GAAG,IACpB,EAQA,IAAI,KAAKC,EAAM,CAEX,CAAC,GAAG,IAAI,EAAE,QAAQ,SAAUQ,EAAG,CAC3BA,EAAE,KAAOR,CACb,CAAC,CACL,CACJ,CACJ,EAAI,CAAC,EAECS,EAAiBC,EAAA,SAAUC,EAAMT,EAAUU,EAAY,CACzDR,EAAiBO,CAAI,IAAM,CAAC,EAC5B,OAAO,eAAeP,EAAiBO,CAAI,EAAGT,EAAUU,CAAU,CACtE,EAHuB,kBAKvB,OAAW,CAACD,EAAME,CAAU,IAAK,OAAO,QAAQf,CAAc,EAC1D,GAAIa,KAAQ,WAAY,CACpB,IAAMV,EAAY,WAAWU,CAAI,EAAE,UACnC,QAAWT,KAAYW,EAAY,CAC/B,IAAMD,EAAa,OAAO,yBAAyBX,EAAWC,CAAQ,EAClEU,IACAH,EAAeE,EAAMT,EAAUU,CAAU,GAErC,WAAWD,CAAI,IAAM,WAAW,aAAkBV,aAAqB,cACvEQ,EAAeK,EAAU,KAAMZ,EAAUU,CAAU,GAEnD,WAAWD,CAAI,IAAM,WAAW,MAAWV,aAAqB,OAChEQ,EAAeK,EAAU,KAAMZ,EAAUU,CAAU,GAEnD,WAAWD,CAAI,IAAM,WAAW,MAAWV,aAAqB,OAChEQ,EAAeM,EAAU,KAAMb,EAAUU,CAAU,EAG/D,CACJ,CAGJ,OAAOR,CACX,CA1SgBM,EAAAhB,GAAA,kBCAT,SAASsB,GAAOC,EAAQ,CAC3BA,EAAO,OAAO,UAAU,CACpB,kBAAmB,GACvB,CAAC,EAED,OAAO,OAAOA,EAAsC,CAChD,gBAAiB,CACb,MAAO,YACX,EACA,aAAc,CAAC,CACnB,CAAC,EAED,IAAMC,EAAe,IAAIC,EAEnBC,EAAWC,EAAA,SAAUC,EAAYC,EAAM,CACzC,GAAIA,GAAQ,KAAM,CACd,GAAI,CAACD,EACD,MAAM,IAAI,MAAM,8CAA8C,EAElE,MAAO,CAAC,CAAC,KAAM,CAAC,CAAC,CAAC,CACtB,CAEA,OAAQ,GAAKC,GAAM,KAAK,EACnB,MAAM,KAAK,EACX,IAAIC,GAAKA,EAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAC5B,IAAI,CAAC,CAACC,EAAM,GAAAC,CAAC,IAAM,CAChB,GAAI,CAACJ,GAAc,CAACG,EAAE,OAClB,MAAM,IAAI,MAAM,8CAA8C,EAElE,MAAO,CAACA,EAAGC,EAAE,OAAOF,GAAKA,EAAE,MAAM,CAAC,CACtC,CAAC,CACT,EAjBiB,YAmBXG,EAAoBN,EAAA,SAAUE,EAAM,CACtC,OAAIA,KAAQN,EAAO,eACfM,EAAON,EAAO,OAAO,kBAAoBM,GAEtCA,CACX,EAL0B,qBAOpBK,EAA2B,IAAI,KAAM,CACvC,aAAc,CACV,IAAMC,EAA0BR,EAAA,SAAUS,EAAUC,EAAU,CAC1D,IAAMC,EAAS,IAAI,IACnB,QAAWC,KAAQH,EACf,GAAIG,aAAgB,QAAS,CACrBA,EAAK,QAAQF,CAAQ,GACrBC,EAAO,IAAIC,CAAI,EAEnB,QAAWC,KAASD,EAAK,iBAAiBF,CAAQ,EAC9CC,EAAO,IAAIE,CAAK,CAExB,CAEJ,OAAOF,CACX,EAbgC,2BAchC,KAAK,qBAAuB,IAAIb,EAChC,KAAK,SAAW,IAAIgB,EAAkBC,GAAU,CAC5C,OAAW,CAACH,EAAMI,CAAiB,IAAK,KAAK,qBAAqB,QAAQ,EACtE,OAAW,CAAC,SAAAN,EAAU,UAAAO,CAAS,IAAKD,EAAmB,CACnD,QAAWH,KAASL,EAAwBO,EAAM,WAAYL,CAAQ,EAClEd,EAAO,OAAO,MAAM,0CAA2CgB,CAAI,EACnEK,EAAU,OAAOJ,CAAK,EAE1B,QAAWA,KAASL,EAAwBO,EAAM,aAAcL,CAAQ,EACpEd,EAAO,OAAO,MAAM,0CAA2CgB,CAAI,EACnEK,EAAU,OAAOJ,CAAK,CAE9B,CAER,EAAG,CACC,WAAY,GACZ,kBAAmB,GACnB,cAAe,GACf,sBAAuB,GACvB,UAAW,GACX,QAAS,EACb,CAAC,CACL,CAEA,MAAMD,EAAMF,EAAUO,EAAW,CAC7B,GAAIP,GAAY,KACZO,EAAU,OAAOL,CAAI,MAEpB,CACD,KAAK,qBAAqB,SAASA,EAAM,IAAM,CAAC,CAAC,EAAE,KAAK,CAAC,SAAAF,EAAU,UAAAO,CAAS,CAAC,EAG7E,QAAWJ,KAASD,EAAK,iBAAiBF,CAAQ,EAC9Cd,EAAO,OAAO,MAAM,2CAA4CiB,CAAK,EACrEI,EAAU,OAAOJ,CAAK,EAG1B,OAAO,KAAK,SAAS,QAAQD,CAAI,CACrC,CACJ,CAEA,QAAQA,EAAMF,EAAUO,EAAW,CAC3BP,GAAY,KACZO,EAAU,OAAOL,CAAI,EAGrB,KAAK,qBAAqB,MAAMA,EAAOI,GAAsBA,EAAkB,OAAOE,GAC9EA,EAAiB,WAAaR,GAAYQ,EAAiB,YAAcD,GACzErB,EAAO,OAAO,MAAM,2CAA4CgB,CAAI,EAC7D,IAEJ,EACV,CAAC,CAEV,CACJ,EAEA,MAAO,CACH,CAAC,CAAC,YAAY,KAAMO,EAAU,IAAI,CAAC,EAAsC,CA8CrE,IAAIC,EAAOV,EAAUW,EAAUC,EAAS,CAChC,OAAQZ,GAAc,aACtBY,EAAUD,EACVA,EAAWX,EACXA,EAAW,MAEfY,EAAU,OAAO,OAAO,CAIhB,KAAM,OAEN,QAAS,OAET,QAAS,OAET,OAAQ,OAKR,QAAS,GAET,SAAU,OAEV,SAAU,OAEV,SAAU,OAEV,QAAS,OAET,SAAU,MAGlB,EAAGA,CAAO,EACV1B,EAAO,OAAO,iBAAiBwB,EAAO,MAAM,EAAE,EAC9CxB,EAAO,OAAO,iBAAiBc,EAAUa,EAAU,MAAM,EAAE,EAC3D3B,EAAO,OAAO,iBAAiByB,EAAU,QAAQ,EAAE,EACnDzB,EAAO,OAAO,iBAAiB0B,EAAS,MAAM,EAAE,EAE5CZ,GAAY,MAAQY,EAAQ,SAC5B1B,EAAO,OAAO,KAAK,kEAAkE,EAGrF0B,EAAQ,UAAY,CAACA,EAAQ,WAC7BA,EAAQ,UAAY,GACpBA,EAAQ,WAAa,IAErBA,EAAQ,UAAY,CAACA,EAAQ,WAC7BA,EAAQ,UAAY,GACpBA,EAAQ,WAAa,IAGzB,OAAW,CAACpB,EAAMsB,CAAU,IAAKzB,EAAS,GAAOqB,CAAK,EAAG,CACrD,IAAMK,EAAY,CAAC,KAAAvB,EAAM,WAAAsB,EAAY,SAAAd,EAAU,SAAAW,EAAU,QAAAC,EAAS,QAAS,IAAIxB,EAAW,WAAY,CAAC,CAAC,EAEpG4B,EACA,EAAE,gBAAgB,SAAWxB,KAAQN,EAAO,eAC5C8B,EAAc,IAAI9B,EAAO,aAAaM,CAAI,EAAE,KAAMQ,EAAUY,EAAS,SAAUK,EAAQC,EAAS,CAAC,EAAGN,EAAU,CAAC,EAAG,CAC9GI,EAAY,QAAU,YAAaJ,EACnCA,EAAQ,YAAc,CAAC,EACvBA,EAAQ,UAAU,WAAaI,EAAY,QAC3CJ,EAAQ,WAAaI,EAAY,UAAYhB,IAAa,KAC1DY,EAAQ,SAAWM,EACnBD,EAAO,SAASzB,EAAMoB,CAAO,CACjC,CAAC,EACDI,EAAY,WAAa,CAAC,EAC1BA,EAAY,SAAS,SAAYd,GAAS,CAAC,EAC3Cc,EAAY,SAAS,SAAYd,GAAS,CAAC,EAC3CL,EAAyB,MAAM,KAAMmB,EAAY,UAAYhB,EAAUgB,EAAY,QAAQ,EAC3FD,EAAU,WAAW,KAAK,IAAM,CAC5BlB,EAAyB,QAAQ,KAAMmB,EAAY,UAAYhB,EAAUgB,EAAY,QAAQ,EAC7FA,EAAY,aAAa,IAAI,CACjC,CAAC,GAGL,IAAMG,EAAc,IAAIC,EAClBC,EAAU/B,EAAA,MAAOG,GAAM,CAMzB,GAJIA,EAAE,aAAa,QAAUA,EAAE,YAAY,KAAK6B,GAAM,CAACP,EAAU,WAAW,SAASO,CAAE,CAAC,GAIpFN,GAAa,UAAYvB,EAAE,WAAW,SACtC,OAIJ,IAAMwB,EAASxB,EAAE,OACX8B,EAAWjC,EAAA,MAAOkC,EAAMC,IAAY,CACtC,IAAMC,EAAQC,EAAM,KAAKH,CAAI,EACvBI,GAAUT,EAAY,MAAMF,EAAQ,QAAS,IAAMS,CAAK,EAC9D,MAAI,IAACD,GAAYG,IAAS,SAAW,aACjCA,IAAS,OAAO,IAAI,EACf,MAAMF,IAAW,MAGlB,CAACd,EAAQ,UAKrB,EAbiB,YAejB,GAAI,EAAAA,EAAQ,UAAY,MAChB,CAAC,MAAMW,EAASX,EAAQ,SAAUA,EAAQ,OAAO,GAIzD,IAAIA,EAAQ,UAAY,KAAM,CAE1B,GADcO,EAAY,SAASF,EAAQ,QAAS,IAAM,KAAK,IAAI,GAAKL,EAAQ,QAAUA,EAAQ,SAAW,EAAE,EAClGA,EAAQ,SAAY,KAAK,IAAI,GAClC,CAAC,MAAMW,EAASX,EAAQ,SAAU,EAAK,EACvC,OAGRO,EAAY,IAAIF,EAAQ,QAAS,KAAK,IAAI,CAAC,CAC/C,CAIA,GAFAxB,EAAE,OAAUoC,GAAWd,EAAU,gBAAgB,MAAMc,CAAM,EAEzDd,EAAU,UAAY,KACtB,OAAOA,EAAU,SAAS,KAAK,KAAMtB,CAAC,EAG1C,QAASqC,EAASb,EAAQa,GAAUA,IAAW,KAAMA,EAASA,EAAO,cAAe,CAChF,GAAIA,EAAO,QAAQf,EAAU,QAAQ,GAAK,EAAEH,EAAQ,MAAQG,EAAU,QAAQ,IAAIE,CAAM,GACpF,MAAI,CAACF,EAAU,QAAQ,MAAME,EAASc,IAAWA,GAAS,GAAK,CAAC,GAAKnB,EAAQ,MACzEI,GAAa,UAAU,SAASC,CAAM,EAGtCD,GAAe,CAACA,EAAY,SAC5BvB,EAAE,gBAAgB,EAEtBA,EAAE,gBAAkBqC,EACbf,EAAU,SAAS,KAAK,KAAMtB,CAAC,EAG1C,GAAImB,EAAQ,QACR,KAER,EACJ,EAjEgB,WAoEhBG,EAAU,QAAU,IAAI,QAAQM,CAAO,EACvClC,EAAa,SAAS,KAAM,IAAM,CAAC,CAAC,EAAE,KAAK4B,CAAS,EAGpD,IAAMiB,EAAkBjB,EAAU,UAAY,KAAOH,EAAU,OAAO,OAAO,CAAC,EAAGA,EAAS,CAAC,KAAM,EAAK,CAAC,EAEvGG,EAAU,gBAAkB,IAAI,gBAChCA,EAAU,gBAAgB,OAAO,iBAAiB,QAASA,EAAU,UAAU,EAC3EiB,EAAgB,OAChBA,EAAgB,OAAS,YAAY,IAAI,CAACA,EAAgB,OAAQjB,EAAU,gBAAgB,MAAM,CAAC,EAGnGiB,EAAgB,OAASjB,EAAU,gBAAgB,OAEvD,KAAK,iBAAiBnB,EAAkBJ,CAAI,EAAG6B,EAASW,CAAe,EAIvEjB,EAAU,WAAa,UAAY,CAC/B7B,EAAO,OAAO,MAAM,cAAeM,EAAMQ,EAAUY,CAAO,EAE1DG,EAAU,WAAW,QAAQkB,GAAaA,EAAU,CAAC,EACrDlB,EAAU,WAAa,CAAC,CAC5B,EACAmB,EAAE,eAAeb,EAASN,EAAU,UAAU,CAClD,CAEA,OAAO,IACX,EAgBA,KAAKL,EAAOV,EAAUW,EAAUC,EAAS,CACjC,OAAQZ,GAAc,aACtBY,EAAUD,EACVA,EAAWX,EACXA,EAAW,MAEfd,EAAO,OAAO,iBAAiBwB,EAAOG,EAAU,MAAM,EAAE,EACxD3B,EAAO,OAAO,iBAAiBc,EAAUa,EAAU,MAAM,EAAE,EAC3D3B,EAAO,OAAO,iBAAiByB,EAAUE,EAAU,QAAQ,EAAE,EAC7D3B,EAAO,OAAO,iBAAiB0B,EAASC,EAAU,MAAM,EAAE,EAE1D,OAAW,CAACrB,EAAMsB,CAAU,IAAKzB,EAAS,GAAMqB,CAAK,EACjDvB,EAAa,MAAM,KAAOgD,IAAgBA,GAAc,CAAC,GAAG,OAAOpB,GAC3DvB,GAAQA,IAASuB,EAAU,MAG3BD,EAAW,QAAUA,EAAW,KAAKQ,GAAM,CAACP,EAAU,WAAW,SAASO,CAAE,CAAC,GAG7EtB,GAAYA,IAAae,EAAU,UAGnCJ,GAAYA,IAAaI,EAAU,UAGnCH,GAAS,UAAYG,EAAU,QAAQ,QAChC,IAGX,KAAK,oBAAoBnB,EAAkBmB,EAAU,IAAI,EAAGA,EAAU,QAAQ,MAAM,EAAGA,EAAU,OAAO,EACxGA,EAAU,WAAW,EACd,GACV,CAAC,EAGN,OAAO,IACX,EAYA,SAASL,EAAOE,EAAU,CAAC,EAAG,CAC1B1B,EAAO,OAAO,iBAAiBwB,EAAO,MAAM,EAAE,EAC9CxB,EAAO,OAAO,iBAAiB0B,EAAS,MAAM,EAAE,EAEhD,IAAIX,EAAS,GACb,OAAW,CAACT,EAAMsB,CAAU,IAAKzB,EAAS,GAAOqB,CAAK,EAAG,CACrD,IAAM0B,EAAQlD,EAAO,gBAAgBM,CAAI,GAAK6C,EACxCC,EAAc,IAAIF,EAAMxC,EAAkBJ,CAAI,EAAG,OAAO,OAAO,CACjE,QAAS,GACT,WAAY,GACZ,SAAU,EACd,EAAGoB,CAAO,CAAC,EACX0B,EAAY,YAAcxB,EAE1B,IAAMyB,EAAY,KAAK,cAAcD,CAAW,EAChDpD,EAAO,OAAO,MAAM,SAASM,CAAI,OAAO+C,EAAY,YAAc,UAAU,GAAI,KAAMD,CAAW,EACjGrC,EAASA,GAAUsC,CACvB,CACA,OAAOtC,CACX,EAYA,QAAQS,EAAO8B,EAAUC,EAAU,GAAO,CACtCvD,EAAO,OAAO,iBAAiBwB,EAAOG,EAAU,MAAM,EAAE,EACxD3B,EAAO,OAAO,iBAAiBsD,EAAU3B,EAAU,OAAO,EAAE,EAC5D3B,EAAO,OAAO,iBAAiBuD,EAAS,OAAO,EAAE,EAEjD,IAAMxC,EAASd,EAAa,IAAI,IAAI,GAAK,CAAC,EAE1C,GAAIqD,EACA,QAASV,EAAS,KAAK,WAAYA,EAAQA,EAASA,EAAO,WACvD,QAAWY,KAAMvD,EAAa,IAAI2C,CAAM,GAAK,CAAC,EAEtCY,EAAG,UAAY,MAAQ,KAAK,QAAQA,EAAG,QAAQ,IACzCA,EAAG,QAAQ,MAAQA,EAAG,QAAQ,IAAI,IAAI,GACxCzC,EAAO,KAAKyC,CAAE,GAOlC,OAAOzC,EAAO,OAAOyC,GAAM,CAEvB,GAAI,CAACA,EAAG,QAAQ,MAAM,EAClB,MAAO,GAGX,OAAW,CAAClD,EAAMsB,CAAU,IAAKzB,EAAS,GAAMqB,CAAK,EAIjD,GAHIlB,GAAQA,IAASkD,EAAG,MAGpB5B,EAAW,QAAUA,EAAW,KAAKQ,GAAM,CAACoB,EAAG,WAAW,SAASpB,CAAE,CAAC,EACtE,MAAO,GAIf,OAAImB,KAAaC,EAAG,QAAQ,SAAW,GAK3C,CAAC,CACL,CACJ,CACJ,CACJ,CAxdgBpD,EAAAL,GAAA,UCFT,SAAS0D,GAAWC,EAAQ,CAC/B,IAAMC,EAAc,IAAIC,EAExB,MAAMC,CAAc,CAVxB,MAUwB,CAAAC,EAAA,sBAChB,OAAO,eAAiB,OAAO,gBAAgB,EAE/C,YAAYC,EAAMC,EAAM,CACpB,KAAK,KAAOD,EACZ,KAAK,KAAOC,EACZ,KAAK,OAASD,EAAKC,CAAI,CAC3B,CAEA,IAAIC,EAAQC,EAAU,CAClB,OAAO,KAAK,UAAUA,CAAQ,CAClC,CAEA,UAAUA,EAAU,CAChB,OAAO,QAAQ,IAAI,KAAK,OAAQA,CAAQ,CAC5C,CAEA,IAAID,EAAQC,EAAU,CAClB,GAAIA,IAAa,OAAO,aAAeA,IAAa,WAChD,MAAO,IAAM,KAAK,WAAW,EAEjC,GAAIA,EAAS,OAAO,CAAC,IAAM,IAAK,CAC5B,IAAMC,EAAS,KAAK,WAAWD,EAAS,UAAU,CAAC,CAAC,EACpD,GAAIC,IAAWN,EAAc,eACzB,OAAOM,CAEf,CACA,IAAMC,EAAO,QAAQ,IAAI,KAAK,OAAQF,CAAQ,EAC9C,OAAI,OAAQE,GAAU,WACX,KAAK,aAAaF,EAAUE,CAAI,EAEpC,KAAK,UAAUF,EAAUE,CAAI,CACxC,CAEA,YAAa,CAAC,CAEd,WAAWF,EAAU,CACjB,OAAOL,EAAc,cACzB,CAEA,aAAaK,EAAUG,EAAO,CAC1B,IAAMC,EAASR,EAAA,IAAIS,IAAS,CACxB,IAAMC,EAASC,EAAE,uBAAuBJ,EAAO,KAAK,KAAM,KAAK,KAAMC,EAAO,CAAC,EAAE,KAAK,KAAK,OAAQ,GAAGC,CAAI,EACxG,OAAOC,IAAW,OAAYb,EAAY,IAAI,KAAK,KAAM,KAAK,IAAI,EAAIa,CAC1E,EAHe,UAIf,OAAOF,CACX,CAEA,UAAUJ,EAAUG,EAAO,CACvB,OAAOA,CACX,CAEA,IAAIJ,EAAQC,EAAUG,EAAO,CAIzB,OAHI,OAAQA,GAAW,aACnBA,EAAQ,KAAK,aAAaH,EAAUG,CAAK,GAEzCH,EAAS,OAAO,CAAC,IAAM,KACR,KAAK,WAAWA,EAAS,UAAU,CAAC,EAAGG,CAAK,IAC5CR,EAAc,gBAIjC,KAAK,UAAUK,EAAUG,CAAK,EACvB,EACX,CAEA,WAAWH,EAAUG,EAAO,CACxB,OAAOR,EAAc,cACzB,CAEA,aAAaK,EAAUG,EAAO,CAC1B,OAAOA,EAAM,KAAK,KAAK,OAAQ,KAAK,IAAI,CAC5C,CAEA,UAAUH,EAAUG,EAAO,CACnBA,IAAU,QAGd,KAAK,MAAM,KAAM,KAAM,CAAC,CAAC,CAACH,CAAQ,EAAGG,CAAK,CAAC,CAAC,CAChD,CAEA,eAAeJ,EAAQC,EAAU,CAC7B,IAAMG,EAAQ,QAAQ,IAAI,KAAK,OAAQH,CAAQ,EAC/C,YAAK,aAAaA,EAAUG,CAAK,EAC1B,EACX,CAEA,aAAaH,EAAUG,EAAO,CAC1B,QAAQ,eAAe,KAAK,OAAQH,CAAQ,CAChD,CAEA,MAAMD,EAAQS,EAASC,EAAU,CAC7B,OAAIA,EAAS,CAAC,YAAa,OAASF,EAAE,cAAcE,EAAS,CAAC,CAAC,GAC3D,KAAK,UAAU,GAAGA,CAAQ,EACnBhB,EAAY,IAAI,KAAK,KAAM,KAAK,IAAI,GAGpC,KAAK,UAAU,GAAGgB,CAAQ,CAEzC,CAEA,aAAaJ,EAAM,CAAC,CAEpB,aAAaA,EAAM,CAAC,CACxB,CAEA,MAAO,CACH,CAAC,CAAC,QAAQ,KAAMK,EAAU,IAAI,CAAC,EAAkC,CAuB7D,IAAI,QAAS,CACT,OAAOjB,EAAY,SAAS,KAAM,aAAc,CAACI,EAAMC,IAAS,IAAIa,EAAMf,EAAA,UAAkB,CAAC,EAAnB,UAAsB,IAAI,cAAcD,CAAc,CAC5H,YAAa,CACT,OAAO,OAAO,OAAOE,EAAK,UAAU,EAAE,IAAKe,GAAS,GAAGL,EAAE,aAAaK,EAAK,KAAM,WAAW,CAAC,KAAKL,EAAE,aAAaK,EAAK,MAAO,YAAY,CAAC,GAAG,EAAE,KAAK,GAAG,CAC3J,CAEA,WAAWZ,EAAU,CACjB,OAAOH,EAAK,QAAQ,IAAIU,EAAE,aAAaP,EAAU,KAAK,CAAC,GAAG,GAAG,aAAaA,CAAQ,GAAK,IAC3F,CAEA,UAAUA,EAAUG,EAAO,CACvB,OAAOA,GAAO,KAClB,CAEA,aAAaH,EAAUG,EAAO,CAC1BN,EAAK,gBAAgBG,CAAQ,CACjC,CAEA,WAAY,CACR,OAAO,OAAO,YAAY,MAAM,KAAKH,EAAK,WAAYe,GAAQ,CAACA,EAAK,KAAMA,EAAK,KAAK,CAAC,CAAC,CAC1F,CAEA,UAAUC,EAAQ,CACd,IAAMC,EAAuBP,EAAE,mBAAmBM,CAAM,EACxD,OAAW,CAACf,EAAMK,CAAK,IAAK,OAAO,QAAQW,CAAoB,EACvD,OAAQX,GAAW,UACnBN,EAAK,gBAAgBC,EAAMK,CAAK,EAGhCN,EAAK,aAAaC,EAAMK,CAAK,CAGzC,CACJ,EAAEN,EAAMC,CAAI,CAAC,CAAC,CAClB,EAYA,IAAI,OAAOK,EAAO,CAId,GAHAX,EAAO,OAAO,iBAAiBW,EAAOY,EAAU,MAAM,EAAE,EAGpDZ,GAAS,KAKb,SAAWS,KAAQ,OAAO,OAAO,KAAK,UAAU,EAC5C,KAAK,WAAW,gBAAgBA,EAAK,IAAI,EAI7C,KAAK,OAAOT,CAAK,EACrB,EAmBA,IAAI,OAAQ,CACR,OAAOV,EAAY,SAAS,KAAM,UAAW,CAACI,EAAMC,IAAS,IAAIa,EAAMf,EAAA,UAAiB,CAAC,EAAlB,SAAqB,IAAI,cAAcD,CAAc,CACxH,YAAa,CACT,OAAO,KAAK,UAAU,KAAK,MAAM,KAAM,KAAM,CAAC,EAAE,CAAC,CAAC,CACtD,CAEA,WAAWK,EAAU,CACjB,OAAO,KAAK,UAAUA,CAAQ,CAClC,CAEA,UAAUA,EAAU,CAChB,IAAMM,EAAS,CAAC,EAChB,OAAW,CAACR,EAAMkB,CAAI,IAAK,OAAO,QAAQnB,EAAK,OAAO,EAClDS,EAAOR,CAAI,EAAIkB,EAEnB,GAAI,OAAQhB,GAAc,SACtB,OAAOM,EAIX,IAAMW,EAAeV,EAAE,kBAAkBP,CAAQ,EAC3CkB,EAAQ,IAAI,OAAOD,EAAe,IAAIjB,CAAQ,QAAU,IAAI,EAC5DmB,EAAS,CAAC,EAChB,OAAW,CAACrB,EAAMkB,CAAI,IAAK,OAAO,QAAQV,CAAM,EACxCY,EAAM,KAAKpB,CAAI,IACfqB,EAAOZ,EAAE,kBAAkBT,CAAI,CAAC,EAAIkB,GAI5C,GAAI,OAAO,KAAKG,CAAM,EAAE,SAAW,GAAKnB,KAAYH,EAAK,QACrD,GAAI,CACA,OAAO,KAAK,MAAMA,EAAK,QAAQG,CAAQ,CAAC,CAC5C,MACU,CACV,CAGJ,IAAMoB,EAAU,OAAO,QAAQD,CAAM,EAAE,IAAI,CAAC,CAACrB,EAAMK,CAAK,IAAM,CAACL,EAAK,MAAM,GAAG,EAAGK,CAAK,CAAC,EAChFU,EAASN,EAAE,gBAAgBa,EAAS,EAAI,EAE9C,OAAOH,EAAeA,EAAa,MAAM,GAAG,EAAE,OAAO,CAAClB,EAAQsB,IAAQtB,IAASsB,CAAG,EAAGR,CAAM,GAAK,CAAC,EAAIA,CACzG,CAEA,WAAWb,EAAUG,EAAO,CACxBN,EAAK,QAAQG,CAAQ,EAAI,KAAK,UAAUG,CAAK,CACjD,CAEA,UAAUU,EAAQ,CACd,OAAW,CAACf,EAAMkB,CAAI,IAAK,OAAO,QAAQT,EAAE,gBAAgBM,CAAM,CAAC,EAC/DhB,EAAK,QAAQU,EAAE,mBAAmBT,CAAI,CAAC,EAAIkB,CAEnD,CACJ,EAAEnB,EAAMC,CAAI,CAAC,CAAC,CAClB,EAYA,IAAI,MAAMK,EAAO,CAIb,GAHAX,EAAO,OAAO,iBAAiBW,EAAOY,EAAU,MAAM,EAAE,EAGpDZ,GAAS,KAIb,SAAWL,KAAQ,OAAO,KAAK,KAAK,OAAO,EACvC,OAAO,KAAK,QAAQA,CAAI,EAI5B,KAAK,MAAMK,CAAK,EACpB,EAmBA,IAAI,QAAS,CACT,OAAOV,EAAY,SAAS,KAAM,YAAa,CAACI,EAAMC,IAAS,IAAIa,EAAMf,EAAA,UAAkB,CAAC,EAAnB,UAAsB,IAAI,cAAcD,CAAc,CAC3H,UAAUK,EAAU,CAChB,OAAOH,EAAK,UAAU,SAASG,CAAQ,CAC3C,CAEA,YAAa,CACT,OAAOH,EAAK,UAAU,KAC1B,CAEA,UAAUG,EAAUG,EAAO,CACvB,OAAON,EAAK,UAAU,SAASG,CAAQ,CAC3C,CAEA,aAAaA,EAAUG,EAAO,CAC1BN,EAAK,UAAU,OAAOG,CAAQ,CAClC,CAEA,WAAY,CACR,MAAO,CAAC,GAAGH,EAAK,UAAU,OAAO,CAAC,CACtC,CAEA,UAAUgB,EAAQ,CACd,OAAW,CAACS,EAAOC,CAAI,IAAKhB,EAAE,gBAAgBA,EAAE,gBAAgBM,CAAM,CAAC,EACnEhB,EAAK,UAAU,OAAOyB,EAAOC,CAAI,CAEzC,CACJ,EAAE1B,EAAMC,CAAI,CAAC,CAAC,CAClB,EAYA,IAAI,OAAOK,EAAO,CACdX,EAAO,OAAO,iBAAiBW,EAAOY,EAAU,OAAQ,OAAQ,KAAK,EAAE,EAGnEZ,GAAS,OAIb,KAAK,UAAU,MAAQ,GAGvB,KAAK,OAAOA,CAAK,EACrB,CACJ,EACA,CAAC,CAAC,QAAQ,KAAM,aAAa,KAAMO,EAAU,KAAMc,GAAa,IAAI,CAAC,EAEzC,CAqBxB,IAAI,QAAS,CACT,OAAO/B,EAAY,SAAS,KAAM,QAAS,CAACI,EAAMC,IAAS,IAAIa,EAAMf,EAAA,UAAkB,CAAC,EAAnB,UAAsB,IAAI,cAAcD,CAAc,CACvH,UAAUK,EAAU,CAChB,MAAO,CAAC,CAAC,QAAQ,IAAIH,EAAK,MAAOG,CAAQ,CAC7C,CAEA,YAAa,CACT,OAAOH,EAAK,MAAM,OACtB,CAEA,WAAWG,EAAU,CACjB,GAAI,CAACF,EAAM2B,CAAM,EAAIzB,EAAS,MAAM,IAAI,EACxCyB,EAASA,EAAS,KAAKA,CAAM,GAAK,KAElC,IAAMC,EAAS7B,EAAK,QAAQ,iBAAiBA,EAAM4B,CAAM,EACzD,OAAK3B,EAAK,OAGH4B,EAAO,iBAAiBnB,EAAE,kBAAkBT,CAAI,CAAC,EAF7C4B,CAGf,CAEA,UAAU1B,EAAUG,EAAO,CACvB,OAAIH,EAAS,WAAW,IAAI,EACjBH,EAAK,MAAM,iBAAiBU,EAAE,kBAAkBP,CAAQ,CAAC,EAE7DG,GAASA,IAAU,OAAYA,EAAQ,IAClD,CAEA,aAAaH,EAAUG,EAAO,CAC1BN,EAAK,MAAM,eAAeU,EAAE,kBAAkBP,CAAQ,CAAC,CAC3D,CAEA,UAAU2B,EAAU,CAChB,IAAMrB,EAAS,CAAC,EAChB,QAASsB,EAAI,GAASA,IAAK,CACvB,IAAM9B,EAAOD,EAAK,MAAM+B,CAAC,EACzB,GAAI,CAAC9B,EACD,MAEJ,GAAI6B,IAAa,GAAM,CACnB,IAAMA,EAAW9B,EAAK,MAAM,oBAAoBC,CAAI,EACpDQ,EAAOR,CAAI,EAAID,EAAK,MAAM,iBAAiBC,CAAI,GAAK6B,EAAW,IAAIA,CAAQ,GAAK,GACpF,MAEIrB,EAAOR,CAAI,EAAID,EAAK,MAAM,iBAAiBC,CAAI,CAEvD,CACA,OAAOQ,CACX,CAEA,UAAUO,EAAQ,CACd,OAAW,CAACf,EAAM+B,CAAK,IAAKtB,EAAE,gBAAgBM,CAAM,EAAG,CACnD,IAAMiB,EAAW,GAAKD,EAChBE,EAAWD,EAAS,QAAQ,cAAe,EAAE,EACnDjC,EAAK,MAAM,YAAYU,EAAE,kBAAkBT,CAAI,EAAGiC,EAAUD,IAAaC,EAAW,GAAK,WAAW,CACxG,CACJ,CACJ,EAAElC,EAAMC,CAAI,CAAC,CAAC,CAClB,EAYA,IAAI,OAAOK,EAAO,CACdX,EAAO,OAAO,iBAAiBW,EAAOY,EAAU,MAAM,EAAE,EAGpDZ,GAAS,OAIb,KAAK,MAAM,QAAU,GAGrB,KAAK,OAAOA,CAAK,EACrB,CACJ,CACJ,CACJ,CAzdgBP,EAAAL,GAAA,cCAT,SAASyC,GAAKC,EAAQ,CACzB,IAAMC,EAAU,IAAIC,EACdC,EAAiB,IAAID,EAE3B,MAAO,CACH,CAAC,CAAC,IAAI,IAAI,CAAC,EAA8B,CAOrC,QAAQE,EAAO,CACXJ,EAAO,OAAO,iBAAiBI,EAAO,MAAM,EAAE,EAE9C,OAAW,CAACC,EAAKC,CAAK,IAAKC,EAAE,gBAAgBH,CAAK,EAC1CC,IAAQ,eACR,KAAKA,CAAG,EAAE,QAAQC,CAAK,EAElBD,KAAO,OACZ,KAAKA,CAAG,EAAIC,GAGpB,OAAO,IACX,EAOA,SAASF,EAAO,CACZ,OAAAJ,EAAO,OAAO,iBAAiBI,EAAO,MAAM,EAAE,EAEvC,IAAI,IAAI,IAAI,EAAE,QAAQA,CAAK,CACtC,EAOA,QAAQI,EAAQ,CACZ,OAAAR,EAAO,OAAO,iBAAiBQ,EAAQ,MAAM,EAAE,EAExC,KAAK,QAAQ,CAAC,aAAcA,CAAM,CAAC,CAC9C,CACJ,EACA,CAAC,CAAC,gBAAgB,IAAI,CAAC,EAA0C,CAW7D,QAAQA,EAAQ,CACZR,EAAO,OAAO,iBAAiBQ,EAAQ,MAAM,EAAE,EAE/C,OAAW,CAACC,EAAMH,CAAK,IAAKC,EAAE,gBAAgBC,CAAM,EAChD,GAAIF,GAAS,KACT,KAAK,OAAOG,CAAI,UAEXH,aAAiB,MAAO,CAC7B,KAAK,OAAOG,CAAI,EAChB,QAAWC,KAAKJ,EACZ,KAAK,OAAOG,EAAMC,CAAC,CAE3B,MAEI,KAAK,IAAID,EAAMH,CAAK,EAG5B,OAAO,IACX,EACA,QAAS,CACL,QAAWD,IAAO,CAAC,GAAG,KAAK,KAAK,CAAC,EAC7B,KAAK,OAAOA,CAAG,EAEnB,OAAO,IACX,CACJ,EACA,CAAC,CAAC,SAAS,IAAI,CAAC,EAAmC,CAQ/C,IAAI,MAAO,CACP,OAAO,IAAI,IAAI,KAAK,IAAK,KAAK,OAAO,CACzC,EA0BA,IAAI,SAAU,CACV,OAAOF,EAAe,SAAS,KAAOQ,GAAa,IAAIC,EAAMC,EAAA,UAAmB,CAAC,EAApB,WAAuB,CAChF,IAAIC,EAAQC,EAAU,CAClB,OAAO,KAAK,IAAID,EAAQC,CAAQ,GAAK,IACzC,EACA,IAAID,EAAQC,EAAU,CAClB,GAAIA,IAAa,OAAO,aAAeA,IAAa,WAChD,MAAO,IAAMJ,EAAS,OAG1B,GAAII,IAAa,qBACb,OAAQC,GAECA,GAGL,KAAK,IAAIF,EAAQC,EAAU,OAAO,OAAOD,EAAO,mBAAoBE,CAAiB,CAAC,EAC/Eb,EAAe,IAAIQ,CAAQ,GAHvBG,EAAO,oBAAsB,CAAC,EAOjD,IAAMG,EAAUN,EAAS,OAAO,MAAM,KAAK,EAC3C,QAAWO,KAAUD,EAAS,CAC1B,GAAM,CAACR,EAAMH,CAAK,EAAIY,EAAO,MAAM,QAAQ,EAAE,IAAI,kBAAkB,EACnE,GAAIT,IAASM,EACT,OAAOT,CAEf,CAEJ,EACA,IAAIQ,EAAQC,EAAUT,EAAO,CAEzB,GAAIS,IAAa,qBACb,OAAAf,EAAO,OAAO,iBAAiBM,EAAO,MAAM,EAAE,EAC1CA,EAAM,SACNN,EAAO,OAAO,KAAK,gIAAgI,EAGvJc,EAAO,mBAAqBR,EACrB,GAIPA,GAAS,OACTA,EAAQ,CACJ,MAAO,GACP,OAAQ,EACZ,GAGJ,IAAMa,EAAa,OAAO,OAAO,CAC7B,OAAQ,GACR,KAAM,IACN,OAAQR,EAAS,YAAY,gBAC7B,SAAU,KACd,EAAGG,EAAO,kBAAkB,EAExBP,EAAE,cAAcD,CAAK,IACrB,OAAO,OAAOa,EAAYb,CAAK,EAC/BA,EAAQA,EAAM,OAASA,EAAM,EAAE,GAEnC,OAAOa,EAAW,MAClB,OAAOA,EAAW,EAAE,EAEpBnB,EAAO,OAAO,iBAAiBmB,EAAW,OAAQC,EAAU,MAAM,EAAE,EACpEpB,EAAO,OAAO,iBAAiBmB,EAAW,QAASC,EAAU,IAAI,EAAE,EAEnE,IAAIF,EAAS,GAAG,mBAAmBH,CAAQ,CAAC,IAAI,mBAAmBT,CAAK,CAAC,GACzE,OAAIa,EAAW,SACXD,GAAU,YAAYC,EAAW,MAAM,IAEvCA,EAAW,OACXD,GAAU,UAAUC,EAAW,IAAI,IAEnCA,EAAW,SACXD,GAAU,YAEVC,EAAW,WACXD,GAAU,cAAcC,EAAW,QAAQ,IAE3CA,EAAW,SACXD,GAAU,aAAa,CAACC,EAAW,MAAM,IAIzCA,EAAW,UACXD,GAAU,aAAaC,EAAW,QAAQ,YAAY,CAAC,IAG3DR,EAAS,OAASO,EACX,EACX,EACA,eAAeJ,EAAQC,EAAU,CAC7B,YAAK,IAAID,EAAQC,EAAU,IAAI,EACxB,EACX,EACA,MAAMD,EAAQO,EAASC,EAAU,CAC7B,GAAIf,EAAE,cAAce,EAAS,CAAC,CAAC,EAC3B,OAAW,CAACb,EAAMH,CAAK,IAAKC,EAAE,gBAAgBe,EAAS,CAAC,CAAC,EACrD,KAAK,IAAIR,EAAQL,EAAMH,CAAK,EAGpC,OAAO,OAAO,YAAYK,EAAS,OAAO,MAAM,KAAK,EAAE,IAAIY,GAAKA,EAAE,MAAM,QAAQ,EAAE,IAAI,kBAAkB,CAAC,CAAC,CAC9G,CACJ,CAAC,CAAC,CACN,EAiBA,IAAI,QAAQjB,EAAO,CAIf,GAHAN,EAAO,OAAO,iBAAiBM,EAAOc,EAAU,MAAM,EAAE,EAGpDd,GAAS,KAIb,QAAW,CAACG,CAAI,IAAKF,EAAE,gBAAgB,KAAK,QAAQ,CAAC,EACjD,KAAK,QAAQE,CAAI,EAAI,KAGzB,KAAK,QAAQH,CAAK,EACtB,CACJ,EACA,CAAC,CAAC,KAAK,KAAMkB,EAAU,IAAI,CAAC,EAA+B,CAYvD,IAAI,MAAO,CACP,IAAMC,EAAM,CAAC,EACb,OAAOxB,EAAQ,SAAS,KAAM,IAAM,IAAIW,EAAMC,EAAA,UAAgB,CAAC,EAAjB,QAAoB,CAC9D,IAAIC,EAAQC,EAAU,CAClB,OAAO,QAAQ,IAAIU,EAAKV,CAAQ,CACpC,EACA,IAAID,EAAQC,EAAU,CAClB,OAAIA,IAAa,OAAO,aAAeA,IAAa,WACzC,IAAM,KAAK,UAAUU,CAAG,EAE5B,QAAQ,IAAIA,EAAKV,CAAQ,CACpC,EACA,IAAID,EAAQC,EAAUT,EAAO,CACzB,eAAQ,IAAImB,EAAKV,EAAUT,CAAK,EACzB,EACX,EACA,eAAeQ,EAAQC,EAAU,CAC7B,eAAQ,eAAeU,EAAKV,CAAQ,EAC7B,EACX,EACA,MAAMD,EAAQO,EAASC,EAAU,CAC7B,OAAIf,EAAE,cAAce,EAAS,CAAC,CAAC,GAC3B,OAAO,OAAOG,EAAKH,EAAS,CAAC,CAAC,EAE3BG,CACX,CACJ,CAAC,CAAC,CACN,EAYA,IAAI,KAAKnB,EAAO,CAIZ,GAHAN,EAAO,OAAO,iBAAiBM,EAAOc,EAAU,MAAM,EAAE,EAGpDd,GAAS,KACT,OAGJ,IAAMoB,EAAO,KAAK,KAClB,QAAWrB,KAAO,OAAO,KAAKqB,EAAK,CAAC,EAChC,OAAOA,EAAKrB,CAAG,EAGnBqB,EAAKpB,CAAK,CACd,CACJ,EACA,CAAC,CAAC,iBAAiB,KAAM,gBAAgB,KAAMkB,EAAU,IAAI,CAAC,EAA8C,CAWxG,MAAM,UAAUG,EAAa,GAAM,CAC/B,IAAIC,EAQJ,GAPI,gBAAgB,gBAChBA,EAAW,MAAO,MAAMrB,EAAE,MAAM,KAAK,IAAI,GAAG,KAAK,EAGjDqB,EAAW,KAAK,YAGhBD,EAAY,CACZ,IAAME,EAAQ,0BACRC,EAAYjB,EAACkB,IACfA,EAAMxB,EAAE,cAAcwB,EAAK,SAAS,EAGhCA,EAAI,OAAO,CAAC,IAAM,IACX,KAEJ,IAAI,IAAIA,EAAK,KAAK,IAAI,GAPf,aAUZC,EAAW,CAAC,EAClB,OAAW,CAAC,CAAED,CAAG,IAAKH,EAAS,SAASC,CAAK,EAAG,CAC5C,IAAMI,EAAUH,EAAUC,CAAG,EACzBE,IACAD,EAASC,CAAO,IAAM,MAAOA,GAAY,CACrC,IAAMC,EAAW,MAAM3B,EAAE,MAAM0B,CAAO,EAAE,MAAMV,IAAM,CAAC,GAAI,EAAK,EAAE,EAChE,OAAKW,EAAS,IAGN,MAAMA,EAAS,KAAK,GAAG,SAAS,EAF7B,IAGf,EAER,CAEA,IAAMC,EAAY,MAAMC,EAAQ,eAAeJ,EAAU,CAAC,EAC1DJ,EAAWA,EAAS,QAAQC,EAAO,CAACQ,EAAIN,IAAQ,CAC5C,IAAME,EAAUH,EAAUC,CAAG,EAC7B,OAAIE,GAAWE,EAAUF,CAAO,EACrB,OAAS1B,EAAE,YAAY4B,EAAUF,CAAO,EAAIA,EAAQ,KAAM,SAAS,EAAI,IAE3EI,CACX,CAAC,CACL,CAEA,OAAOT,CACX,CACJ,EACA,CAAC,CAAC,kBAAkB,KAAMJ,EAAU,IAAI,CAAC,EAA4C,CASjF,MAAM,WAAY,CACd,IAAII,EACJ,OAAI,KAAK,IACLA,EAAW,MAAO,MAAMrB,EAAE,MAAM,KAAK,GAAG,GAAG,KAAK,EAGhDqB,EAAW,KAAK,YAIbA,CACX,CACJ,EACA,CAAC,CAAC,iBAAiB,KAAMJ,EAAU,IAAI,CAAC,EAA2C,CAQ/E,IAAI,MAAO,CACP,OAAO,IAAI,IAAI,KAAK,IAAK,KAAK,OAAO,CACzC,EAQA,IAAI,KAAKO,EAAK,CACV,KAAK,IAAMA,CACf,EASA,MAAM,WAAY,CACd,IAAMA,EAAM,IAAI,IAAI,KAAK,WAAY,KAAK,OAAO,EAE3CG,EAAW,MAAM3B,EAAE,MAAMwB,CAAG,EAC5BO,EAAO,MAAMJ,EAAS,KAAK,EACjC,OAAO,IAAI,KAAK,CAACI,CAAI,EAAGP,EAAI,SAAS,MAAM,GAAG,EAAE,GAAG,EAAE,GAAK,KAAK,WAAY,CACvE,KAAMO,EAAK,KACX,GAAIJ,EAAS,QAAQ,IAAI,eAAe,EAAI,CACxC,aAAc,IAAI,KAAKA,EAAS,QAAQ,IAAI,eAAe,CAAC,EAAE,QAAQ,CAC1E,EAAI,CAAC,CACT,CAAC,CACL,EAQA,MAAM,SAASK,EAAUC,EAAS,CAC9B,OAAAxC,EAAO,OAAO,iBAAiBuC,EAAUnB,EAAU,MAAM,EAAE,EAC3DpB,EAAO,OAAO,iBAAiBwC,EAASpB,EAAU,MAAM,EAAE,EAEnD,IAAIgB,EAASK,GAAY,CAC5B,IAAMC,EAAS,KAAK,UAAU,cAAc,QAAQ,EACpDA,EAAO,MAAQ,KAAK,MACpBA,EAAO,OAAS,KAAK,OACrBA,EAAO,WAAW,IAAI,EAAE,UAAU,KAAM,EAAG,CAAC,EAC5CD,EAAQC,EAAO,UAAUH,EAAUC,CAAO,CAAC,CAC/C,CAAC,CACL,EAQA,MAAM,MAAMD,EAAUC,EAAS,CAC3B,OAAAxC,EAAO,OAAO,iBAAiBuC,EAAUnB,EAAU,MAAM,EAAE,EAC3DpB,EAAO,OAAO,iBAAiBwC,EAASpB,EAAU,MAAM,EAAE,EAEnD,IAAIgB,EAASK,GAAY,CAC5B,IAAMC,EAAS,KAAK,UAAU,cAAc,QAAQ,EACpDA,EAAO,MAAQ,KAAK,MACpBA,EAAO,OAAS,KAAK,OACrBA,EAAO,WAAW,IAAI,EAAE,UAAU,KAAM,EAAG,CAAC,EAC5CA,EAAO,OAAOD,EAASF,EAAUC,CAAO,CAC5C,CAAC,CACL,EAQA,MAAM,MAAMD,EAAUC,EAAS,CAC3BxC,EAAO,OAAO,iBAAiBuC,EAAUnB,EAAU,MAAM,EAAE,EAC3DpB,EAAO,OAAO,iBAAiBwC,EAASpB,EAAU,MAAM,EAAE,EAE1D,IAAMW,EAAM,IAAI,IAAI,KAAK,WAAY,KAAK,OAAO,EACjD,OAAO,IAAI,KAAK,CAAC,MAAM,KAAK,MAAMQ,EAAUC,CAAO,CAAC,EAAGT,EAAI,SAAS,MAAM,GAAG,EAAE,GAAG,EAAE,GAAK,KAAK,WAAY,CACtG,KAAMQ,CACV,CAAC,CACL,CACJ,EACA,CAAC,CAAC,kBAAkB,KAAMf,EAAU,IAAI,CAAC,EAA4C,CAQjF,IAAI,MAAO,CACP,OAAO,IAAI,IAAI,KAAK,KAAM,KAAK,OAAO,CAC1C,EAQA,IAAI,KAAKO,EAAK,CACV,KAAK,KAAOA,CAChB,CACJ,EACA,CAAC,CAAC,gBAAgB,KAAMP,EAAU,IAAI,CAAC,EAA0C,CAQ7E,IAAI,MAAO,CACP,OAAO,IAAI,IAAI,KAAK,OAAQ,KAAK,OAAO,CAC5C,EAQA,IAAI,KAAKO,EAAK,CACV,KAAK,OAASA,CAClB,CACJ,EACA,CAAC,CAAC,KAAK,KAAMY,EAAU,IAAI,CAAC,EAA+B,CAMvD,UAAUC,EAAU,CAChB5C,EAAO,OAAO,iBAAiB4C,EAAUxB,EAAU,MAAM,EAAE,EAG3DwB,IAAa,KAAK,MAAQ,GAE1B,IAAMb,EAAM,IAAI,gBAAgB,IAAI,EAC1B,SAAS,eAAe,IAAK,CACnC,KAAMA,EACN,SAAUa,CACd,CAAC,EAEC,MAAM,EACR,WAAW,UAAY,CACnB,IAAI,gBAAgBb,CAAG,CAC3B,EAAG,GAAI,CACX,EAOA,MAAM,MAAMc,EAAU,CAClB,OAAA7C,EAAO,OAAO,iBAAiB6C,EAAUzB,EAAU,MAAM,EAAE,EAGvC,IAAI,YAAYyB,CAAQ,EACzB,OAAO,MAAM,KAAK,YAAY,CAAC,CACtD,EAMA,MAAM,SAAU,CACZ,IAAMC,EAAU,MAAM,KAAK,SAAS,EACpC,OAAOA,EAAQ,UAAUA,EAAQ,QAAQ,GAAG,EAAI,CAAC,CACrD,EAOA,MAAM,SAASP,EAAU,CACrBvC,EAAO,OAAO,iBAAiBuC,EAAUnB,EAAU,MAAM,EAAE,EAE3D,IAAM2B,EAAOR,EAAW,KAAK,MAAM,EAAG,KAAK,KAAMA,CAAQ,EAAI,KACvDS,EAAS,IAAIC,EACnB,OAAAD,EAAO,cAAcD,CAAI,EAClBC,EAAO,QAAQ,CAC1B,CACJ,EACA,CAAC,CAAC,QAAQ,IAAI,CAAC,EAAkC,CAO7C,SAASE,EAAS,CACd,IAAMC,EAAO,KAAK,QAAQD,CAAO,EACjC,OAAOC,IAAS,KAAO,OAAY,KAAK,MAAMA,CAAI,CACtD,EAQA,SAASD,EAASE,EAAU,CACxB,YAAK,QAAQF,EAAS,KAAK,UAAUE,CAAQ,CAAC,EACvC,IACX,EAMA,CAAE,UAAW,CACT,QAASC,EAAI,EAAGA,EAAI,KAAK,OAAQA,IAAK,CAClC,IAAMhD,EAAM,KAAK,IAAIgD,CAAC,EAChBF,EAAO,KAAK,QAAQ9C,CAAG,EAC7B,KAAM,CAACA,EAAK8C,CAAI,CACpB,CACJ,CACJ,CACJ,CACJ,CAloBgBtC,EAAAd,GAAA,QCAT,SAASuD,GAAWC,EAAQ,CAC/B,IAAMC,EAAUC,EAAA,SAAUC,EAAS,CAC/B,IAAMC,EAASD,EAAQ,aAAa,OAAO,EAE3C,GAAI,CACA,IAAME,EAASF,EAAQ,QAAQ,iBAAiBA,CAAO,EACjDG,EAAc,WAAWD,EAAO,UAAU,EAAI,WAAWA,EAAO,WAAW,EAC3EE,EAAe,WAAWF,EAAO,SAAS,EAAI,WAAWA,EAAO,YAAY,EAElFF,EAAQ,MAAM,YAAY,aAAc,cAAe,WAAW,EAClEA,EAAQ,MAAM,YAAY,WAAY,SAAU,WAAW,EAE3D,IAAMK,EAAML,EAAQ,sBAAsB,EACtCM,EAAeD,EAAI,MACnBE,EAAgBF,EAAI,OAExBL,EAAQ,MAAM,YAAY,SAAU,OAAQ,WAAW,EACvD,IAAMQ,EAAcF,EAAeN,EAAQ,YACrCS,EAAeF,EAAgBP,EAAQ,aAC7CM,GAAgBE,EAChBD,GAAiBE,EAEjBT,EAAQ,MAAM,YAAY,UAAW,EAAG,WAAW,EACnD,IAAMU,EAAeJ,EAAeN,EAAQ,YACtCW,EAAgBJ,EAAgBP,EAAQ,aACxCY,EAAcZ,EAAQ,YACtBa,EAAeb,EAAQ,aAC7BM,GAAgBI,EAChBH,GAAiBI,EAGjB,IAAMG,EAAcd,EAAQ,YACtBe,EAAef,EAAQ,aAC7BA,EAAQ,MAAM,YAAY,WAAY,SAAU,WAAW,EAC3D,IAAMgB,EAAiBF,EAAcd,EAAQ,YACvCiB,EAAkBjB,EAAQ,aAAee,EAC/C,OAAAT,GAAgBU,EAGT,CACH,YAAAb,EAAa,YAAAK,EAAa,aAAAE,EAAc,eAAAM,EAAgB,aAAAV,EACxD,aAAAF,EAAc,aAAAK,EAAc,cAAAE,EAAe,gBAAAM,EAAiB,cAAAV,CAChE,CACJ,QACA,CACQN,GAAU,KACVD,EAAQ,gBAAgB,OAAO,EAG/BA,EAAQ,aAAa,QAASC,CAAM,CAE5C,CACJ,EAnDgB,WAqDhB,MAAO,CACH,CAAC,CAAC,SAAS,IAAI,CAAC,EAAmC,CAQ/C,IAAI,kBAAmB,CACnB,IAAMiB,EAAO,KAAK,GAAG,oCAAoC,EACzD,GAAIA,EAAK,QAAU,EACf,OAAOA,EAAK,CAAC,GAAK,KAGtB,QAAWC,KAAOD,EACd,GAAIC,IAAQ,KAAK,iBAAiB,EAAG,CAAC,EAClC,OAAOA,EAIf,OAAO,IACX,EAMA,IAAI,eAAgB,CAEhB,IAAMC,EAAS,KAAK,iBAAiB,QAAQ,EACvCD,EAAM,KAAK,iBAAiB,EAAG,CAAC,EAGtC,OAAO,MAAM,UAAU,KAAK,KAAKC,EAAQC,GAAKA,IAAMF,CAAG,GAAK,IAChE,CACJ,EACA,CAAC,CAAC,YAAY,KAAMG,EAAU,IAAI,CAAC,EAAsC,CAWrE,UAAUC,EAAW,CAGjB,GAFA1B,EAAO,OAAO,iBAAiB0B,EAAW,OAAQ,MAAM,EAAE,EAEtD,OAAQA,GAAe,SACvB,OAAOA,EAIX,IAAMC,EAAQ,WAAWD,CAAS,EAElC,OADaA,EAAU,QAAQ,aAAc,EAAE,EACjC,CACV,IAAK,GACD,OAAOC,EACX,IAAK,KACD,OAAOA,EAAQ,EAEnB,IAAK,KACD,OAAOA,EAAQ,GACnB,IAAK,KACD,OAAOA,EAAQ,GAAK,EACxB,IAAK,KACD,OAAOA,EAAQ,GAAK,EAAI,GAE5B,IAAK,KACD,OAAOA,EAAQ,GAAK,KACxB,IAAK,KACD,OAAOA,EAAQ,GAAK,KAAO,GAC/B,IAAK,IACD,OAAOA,EAAQ,GAAK,KAAO,GAAK,CACxC,CAGA,IAAMvB,EAAS,KAAK,aAAa,OAAO,EACxC,GAAI,CACA,YAAK,MAAM,aAAesB,EACnB,WAAW,KAAK,QAAQ,iBAAiB,IAAI,EAAE,YAAY,CACtE,QACA,CACQtB,GAAU,KACV,KAAK,gBAAgB,OAAO,EAG5B,KAAK,aAAa,QAASA,CAAM,CAEzC,CACJ,EAOA,QAAQwB,EAAU,CAAC,EAAG,CAClBA,EAAU,OAAO,OAAO,CACpB,SAAU,GACV,OAAQ,EACZ,EAAGA,CAAO,EACV5B,EAAO,OAAO,iBAAiB4B,EAAS,MAAM,EAAE,EAEhD,IAAIC,EAAa,EACbC,EAAY,EAChB,GAAI,CAACF,EAAQ,OAAQ,CACjB,IAAMvB,EAAS,KAAK,QAAQ,iBAAiB,IAAI,EACjDwB,EAAa,WAAWxB,EAAO,UAAU,EACzCyB,EAAY,WAAWzB,EAAO,SAAS,CAC3C,CAEA,GAAIuB,EAAQ,SACR,MAAO,CACH,KAAM,KAAK,WAAaC,EACxB,IAAK,KAAK,UAAYC,CAC1B,EAGJ,IAAMtB,EAAM,KAAK,sBAAsB,EACvC,MAAO,CACH,KAAMA,EAAI,KAAO,OAAO,QAAU,SAAS,gBAAgB,WAAaqB,EACxE,IAAKrB,EAAI,IAAM,OAAO,QAAU,SAAS,gBAAgB,UAAYsB,CACzE,CACJ,EA2BA,MAAMF,EAAU,CAAC,EAAG,CACZ,OAAQA,GAAa,WA4BrBA,EA3BgB,CACZ,GAAI,CACA,UAAW,EACf,EACA,OAAQ,CACJ,QAAS,EACb,EACA,MAAO,CACH,QAAS,GACT,UAAW,EACf,EACA,OAAQ,CACJ,QAAS,GACT,OAAQ,EACZ,EACA,MAAO,CACH,QAAS,GACT,OAAQ,GACR,UAAW,EACf,EACA,OAAQ,CACJ,QAAS,GACT,OAAQ,GACR,OAAQ,GACR,UAAW,EACf,CACJ,EACkBA,CAAO,GAE7B5B,EAAO,OAAO,iBAAiB4B,EAAS,MAAM,EAAE,EAChDA,EAAU,OAAO,OAAO,CACpB,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,QAAS,GACT,UAAW,EACf,EAAGA,CAAO,EAEV,IAAMpB,EAAMP,EAAQ,IAAI,EAEpB8B,EAAQH,EAAQ,OAAS,KAAK,YAAcpB,EAAI,aAChDwB,EAASJ,EAAQ,OAAS,KAAK,aAAepB,EAAI,cAEtD,OAAIoB,EAAQ,SACRG,GAASvB,EAAI,YACbwB,GAAUxB,EAAI,cAEdoB,EAAQ,SACRG,GAASvB,EAAI,YACbwB,GAAUxB,EAAI,cAEdoB,EAAQ,UACRG,GAASvB,EAAI,aACbwB,GAAUxB,EAAI,eAEdoB,EAAQ,WAAa,CAACA,EAAQ,SAC9BG,GAASvB,EAAI,eACbwB,GAAUxB,EAAI,iBAGX,CAAC,MAAAuB,EAAO,OAAAC,CAAM,CACzB,EAOA,OAAOJ,EAAU,CAAC,EAAG,CACjB,GAAI,OAAQA,GAAa,UAAY,OAAQA,GAAa,SAAU,CAC5DK,EAAE,YAAYL,CAAO,GACrB5B,EAAO,OAAO,MAAM,WAAW4B,CAAO,UAAU,EAEpD,IAAIM,EAAO,KAAK,UAAUN,CAAO,EAEjC,GADe,KAAK,QAAQ,iBAAiB,IAAI,EACtC,YAAc,aAAc,CACnC,IAAMpB,EAAMP,EAAQ,IAAI,EACxBiC,GAAQ1B,EAAI,YAAcA,EAAI,YAClC,CACA,YAAK,MAAM,MAAQ0B,EAAO,KACnBA,CACX,CAEA,OAAO,KAAK,MAAMN,CAAO,EAAE,KAC/B,EAOA,QAAQA,EAAU,CAAC,EAAG,CAClB,GAAI,OAAQA,GAAa,UAAY,OAAQA,GAAa,SAAU,CAC5DK,EAAE,YAAYL,CAAO,GACrB5B,EAAO,OAAO,MAAM,WAAW4B,CAAO,UAAU,EAEpD,IAAIM,EAAO,KAAK,UAAUN,CAAO,EAEjC,GADe,KAAK,QAAQ,iBAAiB,IAAI,EACtC,YAAc,aAAc,CACnC,IAAMpB,EAAMP,EAAQ,IAAI,EACxBiC,GAAQ1B,EAAI,aAAeA,EAAI,aACnC,CACA,YAAK,MAAM,OAAS0B,EAAO,KACpBA,CACX,CAEA,OAAO,KAAK,MAAMN,CAAO,EAAE,MAC/B,EAOA,cAAcO,EAAoB,CAAC,OAAQ,GAAM,MAAO,EAAI,EAAG,CAG3D,OAFAnC,EAAO,OAAO,iBAAiBmC,EAAmB,MAAM,EAAE,EAEtDA,EAAkB,QAAU,KAAK,aAAe,KAAK,aAC9C,KAEPA,EAAkB,OAAS,KAAK,YAAc,KAAK,YAC5C,KAEJ,KAAK,eAAe,cAAcA,CAAiB,GAAK,IACnE,CACJ,EACA,CAAC,CAAC,gBAAgB,IAAI,CAAC,EAA0C,CAuC7D,UAAUC,EAAO,CACb,GAAIA,aAAiB,iBACjB,OACI,KAAK,MAAQA,EAAM,GAAKA,EAAM,GAAK,KAAK,OACxC,KAAK,KAAOA,EAAM,GAAKA,EAAM,GAAK,KAAK,OAG/C,GAAIA,aAAiB,gBACjB,OACI,KAAK,UAAU,IAAI,SAASA,EAAM,KAAMA,EAAM,GAAG,CAAC,GAClD,KAAK,UAAU,IAAI,SAASA,EAAM,MAAOA,EAAM,GAAG,CAAC,GACnD,KAAK,UAAU,IAAI,SAASA,EAAM,KAAMA,EAAM,MAAM,CAAC,GACrD,KAAK,UAAU,IAAI,SAASA,EAAM,MAAOA,EAAM,MAAM,CAAC,EAG9D,MAAM,IAAI,MAAM,gBAAgBA,EAAM,YAAY,IAAI,GAAG,CAC7D,EAuCA,YAAYA,EAAO,CACf,GAAIA,aAAiB,iBACjB,OACI,KAAK,MAAQA,EAAM,GAAKA,EAAM,GAAK,KAAK,OACxC,KAAK,KAAOA,EAAM,GAAKA,EAAM,GAAK,KAAK,OAG/C,GAAIA,aAAiB,gBACjB,OACI,KAAK,YAAY,IAAI,SAASA,EAAM,KAAMA,EAAM,GAAG,CAAC,GACpD,KAAK,YAAY,IAAI,SAASA,EAAM,MAAOA,EAAM,GAAG,CAAC,GACrD,KAAK,YAAY,IAAI,SAASA,EAAM,KAAMA,EAAM,MAAM,CAAC,GACvD,KAAK,YAAY,IAAI,SAASA,EAAM,MAAOA,EAAM,MAAM,CAAC,EAGhE,MAAM,IAAI,MAAM,gBAAgBA,EAAM,YAAY,IAAI,GAAG,CAC7D,CACJ,CACJ,CACJ,CAjcgBlC,EAAAH,GAAA,cCAT,SAASsC,GAAQC,EAAQ,CAC5B,IAAMC,EAAkBC,EAAA,SAAUC,EAAM,CACpC,OAAI,OAAQA,EAAK,CAAC,GAAO,WACrBA,EAAK,CAAC,IAAM,CAAC,EACbA,EAAK,CAAC,EAAE,SAAWA,EAAK,CAAC,EACzBA,EAAK,CAAC,EAAIA,EAAK,CAAC,GAEb,OAAO,OAAO,CACjB,QAAS,CAAC,EACV,MAAO,EACX,EAAGA,EAAK,CAAC,CAAC,CACd,EAVwB,mBAYlBC,EAAkB,IAAIC,EACtBC,EAAuB,IAAID,EAE3BE,EAAkB,IAAIC,EAC5B,OAAAD,EAAgB,iBAAiB,QAAS,UAAY,CAClD,OAAW,CAACE,EAAGC,CAAM,IAAKJ,EAAqB,QAAQ,EACnDG,EAAE,MAAM,YAAY,cAAeC,CAAM,EAE7CJ,EAAqB,MAAM,CAC/B,CAAC,EAEM,CACH,CAAC,CAAC,QAAQ,KAAMK,EAAU,IAAI,CAAC,EAAkC,CAU7D,YAAYC,EAAOC,EAAU,IAAM,CAC/Bb,EAAO,OAAO,iBAAiBY,EAAO,OAAQ,KAAK,EAAE,EACrDZ,EAAO,OAAO,iBAAiBa,EAAS,MAAM,EAAE,EAEhDD,EAAQA,aAAiB,MAAQA,EAAQ,CAACA,CAAK,EAE/C,IAAME,EAAU,KAAK,MAAM,iBAAiB,aAAa,EACzD,OAAAR,EAAqB,SAAS,KAAM,IAAMQ,CAAO,EAC7CA,GACAF,EAAM,KAAKE,CAAO,EAGtB,KAAK,MAAM,YAAY,cAAe,CAAC,GAAG,IAAI,IAAIF,CAAK,CAAC,EAAE,KAAK,GAAG,CAAC,EAGnEL,EAAgB,QAAQM,EAAS,CAAC,EAE3B,IACX,EAaA,MAAM,YAAYE,EAAYC,EAAS,CACnChB,EAAO,OAAO,iBAAiBe,EAAY,MAAM,EAAE,EACnDf,EAAO,OAAO,iBAAiBgB,EAASC,EAAU,MAAM,EAAE,EAE1DD,EAAU,OAAO,OAAO,CACpB,QAAS,CAAC,EACV,MAAO,GACP,SAAU,IACV,OAAQ,MACZ,EAAGA,CAAO,EAEV,IAAMF,EAAUV,EAAgB,SAAS,KAAM,KAAO,CAClD,MAAO,EACP,MAAO,KAAK,aAAa,OAAO,EAChC,gBAAiB,KAAK,MAAM,iBAAiB,YAAY,GAAK,GAC9D,mBAAoB,KAAK,MAAM,oBAAoB,YAAY,GAAK,EACxE,EAAE,EACFU,EAAQ,QAER,OAAW,CAACI,EAAKN,CAAK,IAAK,OAAO,QAAQI,EAAQ,OAAO,EACrD,KAAK,MAAM,YAAYE,EAAKN,EAAO,WAAW,EAElD,KAAK,eAAe,EAEpB,IAAMO,GAAsB,KAAK,MAAM,iBAAiB,YAAY,GAAK,IAAI,MAAM,GAAG,EAAE,OAAQC,GAAMA,CAAC,EACvG,OAAW,CAACF,EAAKN,CAAK,IAAK,OAAO,QAAQG,CAAU,EAChD,KAAK,MAAM,YAAYG,EAAKN,EAAO,WAAW,EAC9CO,EAAmB,KAAK,GAAGD,CAAG,IAAIF,EAAQ,QAAQ,MAAMA,EAAQ,MAAM,EAAE,EAE5E,KAAK,MAAM,YAAY,aAAcG,EAAmB,KAAK,GAAG,EAAG,WAAW,EAE9E,IAAIE,EAASC,EACPC,EAAU,IAAIC,EAAQ,CAACC,EAAKC,IAAQ,CACtCL,EAAUI,EACVH,EAASI,CACb,CAAC,EACKC,EAAWzB,EAAA,IAAM,CACnB,KAAK,oBAAoB,gBAAiB0B,CAAQ,EAElD,IAAMd,EAAUV,EAAgB,IAAI,IAAI,EACxC,GAAI,EAAEU,EAAQ,QAAU,EAGpB,GAFAV,EAAgB,OAAO,IAAI,EAEvBY,EAAQ,MACR,KAAK,aAAa,QAASF,EAAQ,KAAK,MAEvC,CACD,KAAK,MAAM,YAAY,aAAcA,EAAQ,gBAAiBA,EAAQ,kBAAkB,EACxF,OAAW,CAACI,EAAKN,CAAK,IAAK,OAAO,QAAQG,CAAU,EAChD,KAAK,MAAM,YAAYG,EAAKN,EAAO,EAAE,CAE7C,CAER,EAjBiB,YAkBXiB,EAAQ,IAAI,IAAI,OAAO,KAAKd,CAAU,CAAC,EACvCa,EAAW1B,EAACO,GAAM,CACpBoB,EAAM,OAAOpB,EAAE,YAAY,EACvBoB,EAAM,OAAS,IACf,aAAaC,CAAK,EAClBH,EAAS,EACTN,EAAQ,EAAI,EAEpB,EAPiB,YAQXS,EAAQ,WAAW,UAAY,CACjCH,EAAS,EACTN,EAAQ,EAAK,CAEjB,EAAGL,EAAQ,SAAW,EAAE,EACxB,YAAK,iBAAiB,gBAAiBY,CAAQ,EACxCL,CACX,EAcA,MAAM,QAAQQ,EAAoB,IAAKf,EAAU,CAAC,EAAG,CACjD,IAAMgB,EAAO/B,EAAgB,SAAS,EAChCgC,EAAS,KAAK,QAAQ,iBAAiB,IAAI,EAEjD,OAAAD,EAAK,QAAU,OAAO,OAAOA,EAAK,QAAS,CACvC,QAAS,CACb,CAAC,EACM,KAAK,YAAY,CACpB,QAASC,EAAO,OACpB,EAAGD,CAAI,CACX,EAcA,MAAM,SAASD,EAAoB,IAAKf,EAAU,CAAC,EAAG,CAClD,IAAMgB,EAAO/B,EAAgB,SAAS,EAChCgC,EAAS,KAAK,QAAQ,iBAAiB,IAAI,EAEjD,OAAAD,EAAK,QAAU,OAAO,OAAOA,EAAK,QAAS,CACvC,QAASC,EAAO,OACpB,CAAC,EACM,KAAK,YAAY,CACpB,QAAS,CACb,EAAGD,CAAI,CACX,EAUA,MAAM,WAAWD,EAAoB,IAAKf,EAAU,CAAC,EAAG,CACpD,IAAMgB,EAAO/B,EAAgB,SAAS,EAChCgC,EAAS,KAAK,QAAQ,iBAAiB,IAAI,EAEjD,OAAAD,EAAK,QAAU,OAAO,OAAOA,EAAK,QAAS,CACvC,SAAU,SACV,OAAQ,EACR,aAAc,EACd,gBAAiB,EACjB,cAAe,EACf,iBAAkB,CACtB,CAAC,EACM,KAAK,YAAY,CACpB,OAAQ,WAAWC,EAAO,MAAM,EAChC,aAAc,WAAWA,EAAO,SAAS,EACzC,gBAAiB,WAAWA,EAAO,YAAY,EAC/C,cAAe,WAAWA,EAAO,UAAU,EAC3C,iBAAkB,WAAWA,EAAO,aAAa,CACrD,EAAGD,CAAI,CACX,EAUA,MAAM,SAASD,EAAoB,IAAKf,EAAU,CAAC,EAAG,CAClD,IAAMgB,EAAO/B,EAAgB,SAAS,EAChCgC,EAAS,KAAK,QAAQ,iBAAiB,IAAI,EAEjD,OAAAD,EAAK,QAAU,OAAO,OAAOA,EAAK,QAAS,CACvC,SAAU,SACV,OAAQ,WAAWC,EAAO,MAAM,EAChC,aAAc,WAAWA,EAAO,SAAS,EACzC,gBAAiB,WAAWA,EAAO,YAAY,EAC/C,cAAe,WAAWA,EAAO,UAAU,EAC3C,iBAAkB,WAAWA,EAAO,aAAa,CACrD,CAAC,EACM,KAAK,YAAY,CACpB,OAAQ,EACR,aAAc,EACd,gBAAiB,EACjB,cAAe,EACf,iBAAkB,CACtB,EAAGD,CAAI,CACX,EAUA,MAAM,YAAYD,EAAoB,IAAKf,EAAU,CAAC,EAAG,CACrD,IAAMgB,EAAO/B,EAAgB,SAAS,EAChCgC,EAAS,KAAK,QAAQ,iBAAiB,IAAI,EAEjD,OAAAD,EAAK,QAAU,OAAO,OAAOA,EAAK,QAAS,CACvC,SAAU,SACV,MAAO,EACP,cAAe,EACf,eAAgB,EAChB,eAAgB,EAChB,gBAAiB,EACjB,aAAc,WAAWC,EAAO,MAAM,CAC1C,CAAC,EACM,KAAK,YAAY,CACpB,MAAO,WAAWA,EAAO,KAAK,EAC9B,cAAe,WAAWA,EAAO,UAAU,EAC3C,eAAgB,WAAWA,EAAO,WAAW,EAC7C,eAAgB,WAAWA,EAAO,WAAW,EAC7C,gBAAiB,WAAWA,EAAO,YAAY,CACnD,EAAGD,CAAI,CACX,EAUA,MAAM,WAAWD,EAAoB,IAAKf,EAAU,CAAC,EAAG,CACpD,IAAMgB,EAAO/B,EAAgB,SAAS,EAChCgC,EAAS,KAAK,QAAQ,iBAAiB,IAAI,EAEjD,OAAAD,EAAK,QAAU,OAAO,OAAOA,EAAK,QAAS,CACvC,SAAU,SACV,MAAO,WAAWC,EAAO,KAAK,EAC9B,cAAe,WAAWA,EAAO,UAAU,EAC3C,eAAgB,WAAWA,EAAO,WAAW,EAC7C,eAAgB,WAAWA,EAAO,WAAW,EAC7C,gBAAiB,WAAWA,EAAO,YAAY,EAC/C,aAAc,WAAWA,EAAO,MAAM,CAC1C,CAAC,EACM,KAAK,YAAY,CACpB,MAAO,EACP,cAAe,EACf,eAAgB,EAChB,eAAgB,EAChB,gBAAiB,CACrB,EAAGD,CAAI,CACX,CACJ,CACJ,CACJ,CAjTgB9B,EAAAH,GAAA,WCAT,SAASmC,GAAMC,EAAQ,CAI1B,IAAMC,EAAmBC,EAAA,SAAUC,EAAMC,EAAQ,CAC7C,IAAMC,EAAQ,IAAI,KAAK,CAACF,EAAOA,EAAK,kBAAkB,EAAI,GAAG,EAE7D,GAAIC,IAAW,OACX,OAAOC,EAAM,YAAY,EAAE,MAAM,EAAG,EAAE,EAE1C,GAAID,IAAW,OAAQ,CACnB,IAAME,EAASH,EAAK,kBAAkB,EAChCI,EAAY,KAAK,IAAID,CAAM,EAC3BE,EAAaF,EAAS,EAAI,IAAM,IAChCG,EAAa,KAAK,MAAMF,EAAY,EAAE,EACtCG,EAAeH,EAAY,GAC3BI,EAAW,GAAGH,CAAU,IAAI,GAAKC,GAAY,SAAS,EAAG,GAAG,CAAC,KAAK,GAAKC,GAAc,SAAS,EAAG,GAAG,CAAC,GAC3G,OAAOL,EAAM,YAAY,EAAE,MAAM,EAAG,EAAE,EAAIM,CAC9C,CACA,GAAIP,IAAW,OAAQ,CAKnB,IAAMQ,EAAQ,IAAI,KAAK,KAAK,OAAO,CAACP,EAAQ,QAAQ,MAAI,EAAI,MAAI,EAC1DQ,EAAYD,EAAM,eAAe,EACjCE,EAAa,KAAK,OAAOF,EAAQ,IAAI,KAAK,GAAGC,CAAS,kBAAkB,GAAK,MAAI,EAAI,EACrFE,GAAaV,EAAM,UAAU,EAAI,GAAK,EAAI,EAChD,MAAO,GAAGQ,CAAS,MAAM,GAAKC,GAAY,SAAS,EAAG,GAAG,CAAC,IAAIC,CAAS,EAC3E,CACJ,EA1ByB,oBA4BzB,MAAO,CACH,CAAC,CAAC,SAAS,IAAI,CAAC,EAAmC,CAM/C,mBAAmBC,EAAQ,CACvB,OAAW,CAACC,EAAMC,CAAK,IAAKC,EAAE,gBAAgBH,CAAM,EAChD,KAAK,OAAOC,EAAMC,CAAK,EAE3B,OAAO,IACX,EAMA,iBAAkB,CACd,IAAME,EAAS,IAAI,gBAAgB,IAAI,EACvC,OAAW,CAACH,EAAMC,CAAK,IAAKC,EAAE,gBAAgB,IAAI,EAC1CD,aAAiB,OACjBlB,EAAO,OAAO,KAAK,SAASiB,CAAI,eAAe,EAG/CG,EAAO,IAAIH,EAAM,EAAE,GAG3B,OAAOG,CACX,EAMA,WAAY,CACR,IAAMC,EAAU,CAAC,EACXC,EAAUH,EAAE,gBAAgB,IAAI,EAAE,IAAI,CAAC,CAACF,EAAMC,CAAK,IAAM,CAC3D,IAAIK,EAAQN,EAAK,MAAM,YAAY,EAC/BM,EAAM,OAAS,GACfA,EAAM,IAAI,EAGd,IAAMC,EAAU,CAAC,EACjB,OAAW,CAACC,EAAGC,CAAO,IAAKH,EAAM,QAAQ,EAAG,CACxC,GAAI,CAACG,EAAQ,OAAQ,CACjB,IAAMC,EAAMH,EAAQ,KAAK,KAAK,EAC9BH,EAAQM,CAAG,IAAM,EACjBJ,EAAME,CAAC,EAAIJ,EAAQM,CAAG,GAC1B,CACAH,EAAQ,KAAKE,CAAO,CACxB,CAEA,MAAO,CAACH,EAAOL,CAAK,CACxB,CAAC,EAED,OAAOC,EAAE,gBAAgBG,EAAS,EAAK,CAC3C,EAOA,MAAM,MAAMM,EAAgB,SAAU,CAClC,IAAMC,EAAS,MAAMV,EAAE,oBAAoB,KAAK,UAAU,EAAG,eAAgBD,EAAO,CAChF,OAAIA,aAAiB,OACjBA,EAAS,UAAY,CACjB,GAAIU,IAAkB,OAClB,OAAOV,EAAM,MAAM,EAEvB,GAAIU,IAAkB,SAClB,OAAOV,EAAM,QAAQ,EAEzB,GAAI,OAAQU,GAAmB,WAC3B,OAAOA,EAAcV,CAAK,EAE9B,MAAM,IAAI,MAAM,mBAAmBU,CAAa,GAAG,CACvD,EAAG,GAEAV,CACX,CAAC,EACD,OAAO,KAAK,UAAUW,CAAM,CAChC,CACJ,EACA,CAAC,CAAC,iBAAiB,KAAMC,EAAU,IAAI,CAAC,EAA2C,CAiB/E,IAAI,cAAe,CAEf,GAAI,CAAC,KAAK,MACN,OAAO,KAIX,GAAI,KAAK,OAAS,iBACd,OAAO,IAAI,KAAK,KAAK,KAAK,EAI9B,GAAI,gBAAiB,KACjB,OAAO,IAAI,KAAK,KAAK,YAAY,QAAQ,EAAI,KAAK,YAAY,kBAAkB,EAAI,GAAG,CAE/F,EAyBA,IAAI,aAAaZ,EAAO,CAEpB,GAAIA,GAAS,KAGb,IAAI,EAAEA,aAAiB,MAAO,CAE1B,KAAK,YAAcA,EACnB,MACJ,CAGA,GAAI,KAAK,OAAS,iBAAkB,CAChC,IAAMa,EAAU9B,EAAiBiB,EAAO,MAAM,EAC1C,KAAK,QAAU,GACf,KAAK,OAASa,EAAQ,MAAM,EAAG,KAAK,MAAM,MAAM,EAE1C,KAAK,KAGN,KAAK,KAAK,SAAS,GAAG,EAC3B,KAAK,OAASA,EAAQ,MAAM,EAAG,EAAE,EAGjC,KAAK,OAASA,EAAQ,MAAM,EAAG,EAAE,EANjC,KAAK,OAASA,EAAQ,MAAM,EAAG,EAAE,EAQrC,MACJ,CAGA,GAAI,KAAK,OAAS,QACd,OAAO,KAAK,OAAS9B,EAAiBiB,EAAO,MAAM,EAAE,MAAM,EAAG,CAAC,EAEnE,GAAI,KAAK,OAAS,OACd,OAAO,KAAK,OAASjB,EAAiBiB,EAAO,MAAM,EAAE,MAAM,EAAG,CAAC,EAEnE,GAAI,KAAK,OAAS,OACd,OAAO,KAAK,OAASjB,EAAiBiB,EAAO,MAAM,EAAE,MAAM,EAAG,EAAE,EAEpE,GAAI,KAAK,OAAS,OAAQ,CACtB,IAAMa,EAAU9B,EAAiBiB,EAAO,MAAM,EAC1C,KAAK,QAAU,GACf,KAAK,OAASa,EAAQ,MAAM,GAAI,GAAK,KAAK,MAAM,MAAM,EAEhD,KAAK,KAGN,KAAK,KAAK,SAAS,GAAG,EAC3B,KAAK,OAASA,EAAQ,MAAM,GAAI,EAAE,EAGlC,KAAK,OAASA,EAAQ,MAAM,GAAI,EAAE,EANlC,KAAK,OAASA,EAAQ,MAAM,GAAI,EAAE,CAQ1C,EACJ,EAUA,IAAI,gBAAiB,CAEjB,OAAK,KAAK,MAIN,CAAC,iBAAkB,QAAS,OAAQ,OAAQ,MAAM,EAAE,SAAS,KAAK,IAAI,EAC/D,KAAK,aAAa,QAAQ,EAEjC,kBAAmB,KACZ,KAAK,cAGT,OAAO,IAVH,OAAO,GAWtB,EAUA,IAAI,eAAeb,EAAO,CAEtB,GAAI,QAAMA,CAAK,GAAKA,GAAS,MAI7B,IAAI,CAAC,iBAAkB,QAAS,OAAQ,OAAQ,MAAM,EAAE,SAAS,KAAK,IAAI,EACtE,OAAO,KAAK,aAAe,IAAI,KAAK,CAACA,CAAK,EAE1C,kBAAmB,OACnB,KAAK,cAAgBA,GAE7B,CACJ,EACA,CAAC,CAAC,iBAAiB,KAAM,cAAc,KAAMY,EAAU,IAAI,CAAC,EAAoD,CAU5G,IAAI,gBAAiB,CACjB,GAAI,gBAAgB,cAChB,OAAO,KAAK,QAAU,GAE1B,GAAI,KAAK,OAAS,WAGlB,OAAO,KAAK,aAChB,EAsBA,IAAI,eAAeZ,EAAO,CAGtB,GAFAlB,EAAO,OAAO,iBAAiBkB,EAAO,QAAS,KAAK,EAAE,EAElD,gBAAgB,cAAe,CAC1BA,GACDlB,EAAO,OAAO,MAAM,4CAA4C,EAEpE,KAAK,QAAQgC,GAAKA,EAAE,QAAU,EAAK,EACnC,MACJ,CAEA,GAAI,KAAK,OAAS,WAGlB,IAAI,EAAEd,aAAiB,OAAQ,CAC3B,KAAK,cAAgBA,EACrB,MACJ,CAEAA,EAAQA,EAAM,OAAOe,GAAKA,GAAK,IAAI,EAE/Bf,EAAM,SAAW,EACjB,KAAK,cAAgB,GAGhBA,EAAM,MAAMe,GAAK,CAACA,CAAC,GACxB,KAAK,cAAgB,GACrB,KAAK,OAAS,MAGTf,EAAM,MAAMe,GAAKA,CAAC,GACvB,KAAK,cAAgB,GACrB,KAAK,OAAS,KAAK,OAInB,KAAK,cAAgB,GAE7B,CACJ,EACA,CAAC,CAAC,iBAAiB,KAAM,oBAAoB,KAAM,kBAAkB,KAAMH,EAAU,IAAI,CAAC,EAA+C,CAerI,IAAI,eAAgB,CAChB,GAAI,CAAC,YAAY,EAAE,SAAS,KAAK,IAAI,EACjC,OAAO,MAAM,UAAU,KAAK,KAAK,KAAK,QAASI,GAAUA,EAAO,eAAe,GAAG,OAAS,KAE/F,GAAI,CAAC,iBAAiB,EAAE,SAAS,KAAK,IAAI,EACtC,MAAO,CAAC,GAAG,KAAK,OAAO,EAAE,OAAOA,GAAUA,EAAO,eAAe,EAAE,IAAIA,GAAUA,EAAO,KAAK,EAEhG,GAAI,CAAC,QAAS,UAAU,EAAE,SAAS,KAAK,IAAI,EACxC,OAAO,KAAK,eAAiB,KAAK,MAAQ,KAE9C,GAAI,CAAC,MAAM,EAAE,SAAS,KAAK,IAAI,EAE3B,OAAO,KAAK,SAAW,CAAC,EAAI,KAEhC,GAAI,KAAK,KACL,OAAO,KAAK,YAEpB,EAWA,IAAI,cAAchB,EAAO,CACrB,GAAI,CAAC,YAAY,EAAE,SAAS,KAAK,IAAI,EAAG,CACpCA,EAAQ,GAAKA,EACb,QAAWgB,KAAU,KAAK,QACtBA,EAAO,gBAAkBA,EAAO,QAAUhB,CAElD,SACS,CAAC,iBAAiB,EAAE,SAAS,KAAK,IAAI,EAAG,CAC9C,IAAMF,GAAUE,aAAiB,MAAQA,EAAQ,CAACA,CAAK,GAAG,IAAIe,GAAK,GAAKA,CAAC,EACzE,QAAWC,KAAU,KAAK,QACtBA,EAAO,gBAAkBlB,EAAO,SAASkB,EAAO,KAAK,CAE7D,KACS,CAAC,QAAS,UAAU,EAAE,SAAS,KAAK,IAAI,EAC7C,KAAK,eAAiB,KAAK,QAAUhB,EAEhC,CAAC,MAAM,EAAE,SAAS,KAAK,IAAI,GAG3B,KAAK,OACV,KAAK,aAAeA,EAE5B,EAgBA,IAAI,QAAS,CACT,GAAI,CAAC,YAAY,EAAE,SAAS,KAAK,IAAI,EAIjC,OAAO,MAAM,UAAU,KAAK,KAAK,KAAK,QAASgB,GAAUA,EAAO,QAAQ,GAAG,OAAS,KAExF,GAAI,CAAC,iBAAiB,EAAE,SAAS,KAAK,IAAI,EACtC,MAAO,CAAC,GAAG,KAAK,OAAO,EAAE,OAAOA,GAAUA,EAAO,QAAQ,EAAE,IAAIA,GAAUA,EAAO,KAAK,EAEzF,GAAI,CAAC,QAAS,UAAU,EAAE,SAAS,KAAK,IAAI,EACxC,OAAO,KAAK,QAAU,KAAK,MAAQ,KAEvC,GAAI,CAAC,MAAM,EAAE,SAAS,KAAK,IAAI,EAC3B,OAAO,KAAK,SAAW,KAAK,MAAQ,KAAK,MAAM,CAAC,GAAK,KAEzD,GAAI,KAAK,KACL,OAAO,KAAK,KAEpB,EAgBA,IAAI,OAAOhB,EAAO,CACd,IAAIiB,EAAU,GAEd,GAAI,CAAC,YAAY,EAAE,SAAS,KAAK,IAAI,EAC7B,KAAK,QAAUjB,IACf,KAAK,MAAQA,EACbiB,EAAU,YAGT,CAAC,iBAAiB,EAAE,SAAS,KAAK,IAAI,EAAG,CAC9C,IAAMnB,GAAUE,aAAiB,MAAQA,EAAQ,CAACA,CAAK,GAAG,OAAOe,GAAKA,IAAM,IAAI,EAAE,IAAIA,GAAK,GAAKA,CAAC,EACjG,QAAWC,KAAU,KAAK,QAAS,CAC/B,IAAME,EAAWpB,EAAO,SAASkB,EAAO,KAAK,EACzCA,EAAO,WAAaE,IACpBF,EAAO,SAAWE,EAClBD,EAAU,GAElB,CACJ,SACS,CAAC,QAAS,UAAU,EAAE,SAAS,KAAK,IAAI,EAAG,CAChD,IAAME,EAAU,KAAK,QAAUnB,EAC3B,KAAK,UAAYmB,IACjB,KAAK,QAAUA,EACfF,EAAU,GAElB,SACS,CAAC,MAAM,EAAE,SAAS,KAAK,IAAI,EAAG,CACnC,IAAMG,EAAQ,MAAM,KAAK,KAAK,MAAQC,GAAMA,EAAE,IAAI,EAAE,KAAK,GAAG,EAC5D,GAAIrB,aAAiB,MACjB,GAAIA,EAAM,OAASoB,EAAO,CACtB,IAAME,EAAe,IAAI,aACzBA,EAAa,MAAM,IAAItB,CAAK,EAC5B,KAAK,MAAQsB,EAAa,MAC1BL,EAAU,EACd,OAEKjB,aAAiB,UAClB,MAAM,KAAKA,EAAQqB,GAAMA,EAAE,IAAI,EAAE,KAAK,GAAG,IAAMD,IAC/C,KAAK,MAAQpB,EACbiB,EAAU,GAGtB,MACS,KAAK,MACN,KAAK,QAAUjB,IACf,KAAK,MAAQA,EACbiB,EAAU,IAIdA,GACA,KAAK,cAAc,IAAI,MAAM,UAAW,CACpC,QAAS,EACb,CAAC,CAAC,CAEV,EAQA,QAAS,CACL,MAAI,CAAC,aAAc,iBAAiB,EAAE,SAAS,KAAK,IAAI,EACpD,KAAK,OAAS,KAET,CAAC,QAAS,UAAU,EAAE,SAAS,KAAK,IAAI,EAC7C,KAAK,OAAS,KAET,CAAC,MAAM,EAAE,SAAS,KAAK,IAAI,EAChC,KAAK,OAAS,IAAI,aAAa,EAAE,MAE5B,KAAK,OACV,KAAK,OAAS,IAGX,IACX,EAMA,iBAAkB,CACd,MAAI,CAAC,aAAc,iBAAiB,EAAE,SAAS,KAAK,IAAI,EACpD,MAAM,KAAK,KAAK,OAAO,EAAE,QAAQD,GAAUA,EAAO,gBAAgB,WAAYA,EAAO,QAAQ,CAAC,EAEzF,KAAK,OAAS,WACnB,KAAK,YAAc,KAAK,MAEnB,CAAC,QAAS,UAAU,EAAE,SAAS,KAAK,IAAI,EAC7C,KAAK,gBAAgB,UAAW,KAAK,OAAO,EAG5C,KAAK,aAAa,QAAS,KAAK,KAAK,EAGlC,IACX,CACJ,EACA,CAAC,CAAC,kBAAkB,KAAM,oBAAoB,KAAMJ,EAAU,IAAI,CAAC,EAAgD,CA+B/G,SAASW,EAASC,EAAgB,OAAW,CACzC1C,EAAO,OAAO,iBAAiByC,EAAS,OAAQ,KAAK,EAAE,EACvDC,IAAkB,gBAAgB,kBAAoB,SAAW,KACjE1C,EAAO,OAAO,iBAAiB0C,EAAeC,EAAU,QAAS,MAAM,EAAE,EAKzE,KAAK,YAAY,iBAAiB,EAClC,IAAMC,EAAS,CACX,IAAK,KAAK,UACV,KAAM,KAAK,UACf,EACMC,EAAU3C,EAAA,IAAM,CAClB,KAAK,UAAY0C,EAAO,IACxB,KAAK,WAAaA,EAAO,IAC7B,EAHgB,WAKVE,EAAQ5C,EAAC6C,GAAS,CACpB,IAAMC,EAAY,CAAC,EACbP,EAAU,CAAC,EACjB,OAAS,CAACvB,EAAO+B,CAAK,IAAK9B,EAAE,gBAAgB4B,CAAI,EAC7C,GAAIE,aAAiB,MACjBR,EAAQ,KAAK,KAAK,UAAU,eAAe,WAAY,CAAC,MAAOvB,CAAK,EAAG,GAAG4B,EAAMG,CAAK,CAAC,CAAC,UAElFA,aAAiB,KACtBA,EAAM,QAAU/B,EAChBuB,EAAQ,KAAKQ,CAAK,UAEb9B,EAAE,cAAc8B,CAAK,EAI1B,GAHAA,EAAQ,CAAC,GAAGA,CAAK,EACjBA,EAAM,QAAU/B,EAChB+B,EAAM,QAAUA,EAAM,MAClBA,EAAM,SAAU,CAChB,IAAMC,EAAWD,EAAM,SACvB,OAAOA,EAAM,SACRD,EAAUE,CAAQ,IACnBF,EAAUE,CAAQ,EAAI,KAAK,UAAU,eAAe,WAAY,CAAC,MAAOA,CAAQ,CAAC,EACjFT,EAAQ,KAAKO,EAAUE,CAAQ,CAAC,GAEpCF,EAAUE,CAAQ,EAAE,OAAO,KAAK,UAAU,eAAe,SAAUD,EAAOA,EAAM,KAAK,CAAC,CAC1F,MAEIR,EAAQ,KAAK,KAAK,UAAU,eAAe,SAAUQ,EAAOA,EAAM,KAAK,CAAC,OAI5ER,EAAQ,KAAK,KAAK,UAAU,eAAe,SAAU,CAAC,MAAOvB,EAAO,MAAO+B,CAAK,EAAGA,CAAK,CAAC,EAGjG,OAAOR,CACX,EAjCc,SAkCdA,EAAUK,EAAML,CAAO,EAEvB,IAAMU,EAAST,EAAgB,KAAK,OAAS,KAE7C,GAAIA,GAAiB,OAAQA,GAAmB,SAAU,CACtD,IAAMU,GAAWD,aAAkB,MAAQA,EAAS,CAACA,CAAM,GAAG,OAAOlB,GAAKA,GAAK,IAAI,EAAE,IAAIA,GAAK,GAAKA,CAAC,EAGpG,KAAK,GAAG,QAAQ,EAAE,QAAQoB,GAAKD,EAAQ,SAASC,EAAE,KAAK,CAAC,EAAE,QAAQrB,GAAKA,EAAE,OAAO,CAAC,EACjF,KAAK,GAAG,UAAU,EAAE,QAAQqB,GAAKA,EAAE,UAAU,QAAQ,CAAC,EAAE,QAAQrB,GAAKA,EAAE,OAAO,CAAC,EAC/E,KAAK,GAAG,4BAA4B,EAAE,QAAQA,GAAKA,EAAE,OAAO,CAAC,EAG7D,QAAWkB,KAAY,KAAK,GAAG,UAAU,EAAG,CACxC,IAAMI,EAAQJ,EAAS,cAAc,mBAAmB/B,EAAE,aAAa+B,EAAS,OAAS,GAAI,UAAU,CAAC,IAAI,EAC5G,QAAWK,IAAQ,CAAC,GAAGD,CAAK,EACxBJ,EAASR,CAAa,EAAE,GAAGa,EAAK,GAAG,QAAQ,CAAC,EACvCA,EAAK,UAAU,QAAQ,GACxBA,EAAK,OAAO,CAGxB,CAGA,KAAKb,CAAa,EAAE,KAAK,UAAU,eAAe,KAAM,CAAC,MAAO,yBAAyB,CAAC,CAAC,EAC3F,KAAKA,CAAa,EAAE,GAAGD,CAAO,EAG9B,IAAMe,EAAStD,EAAA,SAAUuC,EAAS,CAC9B,OAAOA,EAAQ,OAAOY,GACdA,aAAa,mBAAqBD,EAAQ,SAASC,EAAE,KAAK,GAI1DA,aAAa,qBACT,CAACG,EAAO,CAAC,GAAGH,EAAE,GAAG,QAAQ,CAAC,CAAC,EAAE,QAC7BA,EAAE,OAAO,EACF,IAGR,EACV,CACL,EAde,UAefG,EAAOf,CAAO,CAClB,MAEI,KAAK,iBAAiB,GAAGA,CAAO,EAGpC,OAAIC,IACA,KAAK,OAASS,GAKlB,sBAAsB,IAAM,sBAAsBN,CAAO,CAAC,EAEnD,IACX,CACJ,EACA,CAAC,CAAC,gBAAgB,KAAMf,EAAU,IAAI,CAAC,EAA0C,CAM7E,iBAAkB,CACd,YAAK,SAAS,gBAAgB,EACvB,IACX,CACJ,CACJ,CACJ,CAxtBgB5B,EAAAH,GAAA,SCAT,SAAS0D,GAAaC,EAAQ,CACjC,IAAMC,EAAgB,IAAI,IACpBC,EAAgB,IAAIC,EACpBC,EAAiBC,EAAA,SAAUC,EAAO,CACpC,MAAO,CAAC,GAAGA,CAAK,EAAE,QAAQC,GAAQA,aAAgB,SAAW,CAAC,GAAGA,CAAI,EAAIA,CAAI,CACjF,EAFuB,kBAIvB,MAAMC,CAAM,CAdhB,MAcgB,CAAAH,EAAA,cACR,YAAYI,EAAO,CACf,KAAK,MAAQA,CACjB,CAEA,UAAW,CACP,MAAO,GAAK,KAAK,KACrB,CACJ,CAEA,MAAO,CACH,CAAC,CAAC,OAAO,IAAI,CAAC,EAAiC,CAc3C,OAAOC,EAAYC,EAAgB,KAAM,CAGrC,GAFAA,KAAmB,MAAQ,YAAY,SAEnCD,aAAsB,MAAQA,aAAsB,SACpD,OAAOA,EAEX,GAAIA,aAAsB,eACtB,OAAOE,EAAE,mBAAmBF,CAAU,EAG1C,GAAIA,aAAsB,MAAO,CAC7B,IAAMG,EAAaH,EAAW,IAAII,GAAKH,EAAc,YAAY,OAAOG,EAAGH,CAAa,CAAC,EACnFL,EAAQ,CAAC,GAAG,IAAI,IAAIO,EAAW,QAAQC,GAAKA,aAAa,KAAO,CAACA,CAAC,EAAI,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EACpF,OAAOR,EAAM,SAAW,EAAIA,EAAM,CAAC,EAAIM,EAAE,mBAAmBN,CAAK,CACrE,CAEA,GAAI,OAAQI,GAAgB,UAAYA,EAAW,KAAK,EAAE,OAAO,CAAC,IAAM,IAAK,CACzE,IAAMJ,EAAQK,EAAc,wBAAwBD,EAAW,KAAK,CAAC,EACrE,OAAOJ,EAAM,SAAW,EAAIA,EAAM,CAAC,EAAIA,CAC3C,CAEA,IAAMA,EAAQK,EAAc,GAAGD,CAAU,EACzC,OAAOJ,EAAM,SAAW,EAAIA,EAAM,CAAC,EAAIA,CAC3C,CACJ,EACA,CAAC,CAAC,SAAS,IAAI,CAAC,EAAmC,CAW/C,wBAAwBS,EAAM,CAC1Bf,EAAO,OAAO,iBAAiBe,EAAM,MAAM,EAAE,EAE7C,IAAMC,EAAW,KAAK,cAAc,UAAU,EAC9C,OAAAA,EAAS,UAAYD,EAEdH,EAAE,mBAAmB,CAAC,GAAGI,EAAS,QAAQ,UAAU,CAAC,CAChE,EAmCA,eAAeC,EAAKC,EAAa,CAAC,KAAMC,EAAU,CAC9CnB,EAAO,OAAO,iBAAiBiB,EAAK,MAAM,EAAE,EAC5CjB,EAAO,OAAO,iBAAiBkB,EAAY,MAAM,EAAE,EAEnDA,EAAW,MAAQN,EAAE,gBAAgBM,EAAW,OAAS,CAAC,CAAC,EAG3DD,EAAMA,EAAI,WAAW,oBAAqB,SAAUG,EAAIC,EAAI,CACxD,OAAAH,EAAW,GAAKG,EACT,EACX,CAAC,EACDJ,EAAMA,EAAI,WAAW,oBAAqB,SAAUG,EAAIC,EAAI,CACxD,OAAAH,EAAW,MAAMG,CAAE,EAAI,GAChB,EACX,CAAC,EACDJ,EAAMA,EAAI,WAAW,+BAAgC,SAAUG,EAAIC,EAAIC,EAAIC,EAAI,CAC3E,OAAAL,EAAWG,CAAE,EAAIE,GAAM,GAChB,EACX,CAAC,EAED,IAAMC,EAAU,KAAK,cAAcP,CAAG,EAEtC,OAAW,CAACQ,EAAMhB,CAAK,IAAK,OAAO,QAAQG,EAAE,mBAAmBM,CAAU,CAAC,EACnE,OAAQT,GAAW,UACnBe,EAAQ,gBAAgBC,EAAMhB,CAAK,EAGnCe,EAAQ,aAAaC,EAAMhB,CAAK,EAIxC,OAAAe,EAAQ,QAAQ,GAAGL,CAAQ,EAEpBK,CACX,EAcA,eAAeE,EAAO,CAClB,GAAI,CAACzB,EAAc,IAAIyB,CAAK,EAAG,CAC3B,IAAMC,EAAa,IAAI,cAAc,CACjC,QAAS,KAAK,SAAS,KACvB,MAAOD,CACX,CAAC,EACDzB,EAAc,IAAIyB,EAAOC,CAAU,EACnC,KAAK,mBAAqB,CAAC,GAAG,KAAK,mBAAoBA,CAAU,CACrE,CAEA,IAAMA,EAAa1B,EAAc,IAAIyB,CAAK,EACpCE,EAAQD,EAAW,WAAW,UAAU,EAC9C,OAAOA,EAAW,SAAS,KAAKC,CAAK,CACzC,CACJ,EACA,CAAC,CAAC,oBAAoB,KAAMC,EAAU,IAAI,CAAC,EAA8C,CAmBrF,QAAQC,EAAMC,EAAU,CAAC,EAAG,CACxBA,EAAU,OAAO,OAAO,CACpB,OAAQ,OACR,QAAS,wBACT,OAAQ,OACZ,EAAGA,CAAO,EAEV,IAAMd,EAAMZ,EAAA,SAAUI,EAAO,CACzB,GAAIsB,EAAQ,QAAS,CACjB,GAAItB,IAAU,GACV,OAAOsB,EAAQ,QAEnB,GAAItB,IAAU,GACV,MAAO,EAEf,CACA,OAAI,OAAQA,GAAW,UAAY,EAAEA,aAAiBD,GAC3CC,EAEP,OAAQsB,EAAQ,QAAY,WACrBA,EAAQ,OAAOtB,CAAK,EAExBG,EAAE,aAAaH,EAAOsB,EAAQ,MAAM,CAC/C,EAhBY,OAkBNC,EAAO3B,EAAA,SAAU4B,EAASC,EAAQ,CACpC,GAAI,CAACD,EACD,MAAO,CAAC,EAENA,aAAmB,QACrBA,EAAU,CAACA,CAAO,GAGtB,IAAME,EAAW,CAAC,EAClB,OAAS,CAACC,EAAG3B,CAAK,IAAKwB,EAAQ,QAAQ,EAAG,CACtC,IAAMI,EAAW,KAAK,QAAQ,UAAU,EAAI,EAExCzB,EAAE,eAAeH,CAAK,IACtBA,EAAQ,IAAID,EAAMC,CAAK,GAI3B,OAAO,OAAOA,EAAO,CACjB,QAASyB,EACT,OAAQE,EACR,QAASH,EAAQ,OACjB,OAAQG,IAAM,EACd,MAAOA,IAAMH,EAAQ,OAAS,CAClC,CAAC,EAGD,IAAMd,EAAWkB,EAAS,GAAG,0BAA0B,EACvD,QAAWC,KAASnB,EAChBmB,EAAM,MAAM,GAAGN,EAAK,KAAKM,EAAO7B,EAAM6B,EAAM,QAAQ,QAAQ,EAAG7B,CAAK,CAAC,EACrE6B,EAAM,OAAO,EAIjBtC,EAAO,OAAO,OAAO,IAAMqC,EAAS,UAAUvB,GAAK,CAACA,EAAE,kBAAkB,CAAC,EAAE,EAC3E,IAAME,EAAW,CAAC,GAAGqB,EAAS,UAAU,EAAE,KAAK,EAAE,EAC3CtB,EAAOH,EAAE,aAAaI,EAAUP,EAAOQ,CAAG,EAC1CX,EAAQ,KAAK,UAAU,wBAAwBS,CAAI,EAEzD,GAAIgB,EAAQ,QACR,QAAWxB,KAAQD,EAAM,IAAI,GAAG,EAC5B,QAAWiC,KAAa,MAAM,KAAKhC,EAAK,UAAU,EAC1CgC,EAAU,QAAUR,EAAQ,SAC5BxB,EAAK,WAAW,gBAAgBgC,EAAU,IAAI,EAK9DJ,EAAS,KAAK,GAAG7B,CAAK,CAC1B,CAEA,OAAO6B,CACX,EAnDa,QAqDPA,EAAWH,EAAK,KAAK,KAAMF,EAAM,IAAI,EAE3C,OAAIC,EAAQ,UACK7B,EAAc,MAAM,KAAM,IAAMiC,CAAQ,GAAK,CAAC,GACtD,QAAQK,GAAOA,EAAI,OAAO,CAAC,EAChC,KAAKT,EAAQ,MAAM,EAAE,GAAGI,CAAQ,GAG7BvB,EAAE,mBAAmBuB,CAAQ,CACxC,CACJ,EACA,CAAC,CAAC,KAAK,KAAMN,EAAU,IAAI,CAAC,EAA+B,CAWvD,OAAOY,EAAY,GAAO,CACtB,GAAI,CAACA,EACD,OAAO,KAAK,UAAU,EAAI,EAI9B,IAAMC,EAAS,KAAK,UAAU,EAAK,EACnC,QAAWC,KAAM,KAAK,QAAQ,KAAM,GAAO,EAAK,EAC5CD,EAAO,IAAIC,EAAG,KAAOA,EAAG,WAAW,IAAIC,GAAM,IAAIA,CAAE,EAAE,EAAE,KAAK,EAAGD,EAAG,SAAUA,EAAG,SAAUA,EAAG,OAAO,EAIvG,QAAWL,KAAS,KAAK,WAEjBA,aAAiB,QACjBI,EAAO,YAAYJ,EAAM,OAAO,EAAI,CAAC,EAGrCI,EAAO,YAAYJ,EAAM,UAAU,EAAI,CAAC,EAIhD,OAAOI,CACX,EAeA,WAAWpC,EAAO,CACd,YAAK,OAAO,GAAGF,EAAeE,CAAK,CAAC,EAC7B,IACX,EAeA,YAAYA,EAAO,CACf,YAAK,QAAQ,GAAGF,EAAeE,CAAK,CAAC,EAC9B,IACX,EAeA,QAAQI,KAAeJ,EAAO,CAC1B,YAAK,cAAcI,CAAU,GAAG,UAAU,GAAGN,EAAeE,CAAK,CAAC,EAC3D,IACX,EAeA,WAAWA,EAAO,CACd,YAAK,OAAO,GAAGF,EAAeE,CAAK,CAAC,EAC7B,IACX,EAeA,UAAUA,EAAO,CACb,YAAK,MAAM,GAAGF,EAAeE,CAAK,CAAC,EAC5B,IACX,EASA,YAAYA,EAAO,CACf,YAAK,YAAY,GAAGF,EAAeE,CAAK,CAAC,EAClC,IACX,EAYA,cAAcuC,KAAavC,EAAO,CAC9B,YAAK,QAAQuC,EAAU,GAAGvC,CAAK,EAC/B,KAAK,cAAcuC,CAAQ,GAAG,OAAO,EAC9B,IACX,EASA,oBAAoBvC,EAAO,CACvB,YAAK,gBAAgB,GAAGF,EAAeE,CAAK,CAAC,EACtC,IACX,EAMA,OAAQ,CACJ,YAAK,UAAU,EAEX,KAAK,YAAY,WAAa,KAAK,WAAa,KAAK,WAAW,UAAU,KAAK,IAAM,IACrF,KAAK,WAAW,OAAO,EAEvB,KAAK,WAAW,WAAa,KAAK,WAAa,KAAK,UAAU,UAAU,KAAK,IAAM,IACnF,KAAK,UAAU,OAAO,EAGnB,IACX,EAsBA,MAAMC,EAAM,CACR,YAAK,WAAW,aAAaA,EAAM,IAAI,EACvCA,EAAK,YAAY,IAAI,EACd,IACX,EAqBA,SAAU,CACN,YAAK,WAAW,gBAAgB,EACzB,IACX,EAqBA,iBAAkB,CACd,YAAK,YAAY,GAAG,KAAK,UAAU,EAC5B,IACX,CACJ,CACJ,CACJ,CA3hBgBF,EAAAN,GAAA,gBCAT,SAAS+C,GAAcC,EAAQ,CAClC,IAAMC,EAAgB,IAAIC,EACpBC,EAAiBC,EAAA,SAAUC,EAAG,CAChC,OAAW,CAACC,EAAQC,CAAQ,IAAKN,EAAc,QAAQ,EAC/CI,EAAE,OAAO,SAASE,CAAQ,IAC1BD,EAAO,eAAiB,OAAO,OAAOC,CAAQ,EAAE,QAAQ,iBAAiB,EAAE,QAGvF,EANuB,kBAQnBC,EAAoB,GAExB,MAAO,CACH,CAAC,CAAC,OAAO,IAAI,CAAC,EAAiC,CAgB3C,MAAMC,EAAS,CACXT,EAAO,OAAO,iBAAiBS,EAAS,MAAM,EAAE,EAChDA,EAAU,OAAO,OAAO,CAIhB,IAAK,OAEL,OAAQ,OAKR,OAAQ,GAER,KAAM,OAEN,IAAK,OAEL,MAAO,OAEP,OAAQ,OAER,SAAU,OAEV,WAAY,MAEpB,EAAGA,CAAO,EAENA,EAAQ,QAAU,SAClBA,EAAQ,MAAQ,KAAK,WAAa,GAElCA,EAAQ,SAAW,SACnBA,EAAQ,OAAS,KAAK,YAAc,GAGpCA,EAAQ,OAAS,QAAUA,EAAQ,QACnCA,EAAQ,MAAQ,KAAK,WAAaA,EAAQ,OAAS,GAEnDA,EAAQ,MAAQ,QAAUA,EAAQ,SAClCA,EAAQ,KAAO,KAAK,YAAcA,EAAQ,QAAU,GAGpDA,EAAQ,QAAUA,EAAQ,MAAQ,OAClCA,EAAQ,MAAQ,KAAK,SAErBA,EAAQ,QAAUA,EAAQ,KAAO,OACjCA,EAAQ,KAAO,KAAK,SAGxB,IAAMC,EAAMD,EAAQ,IACdE,EAASF,EAAQ,OAEvBG,EAAE,oBAAoBH,EAAS,SAAUI,EAAGC,EAAG,CAC3C,GAAI,GAAC,MAAO,SAAU,QAAQ,EAAE,SAASA,CAAC,GAAKD,IAAM,IAGrD,OAAOA,CACX,CAAC,EACD,IAAME,EAAUH,EAAE,WAAWH,EAAS,GAAG,EACzC,OAAAT,EAAO,OAAO,MAAM,gBAAiBe,CAAO,EAErC,KAAK,KAAKL,EAAKC,EAAQI,CAAO,CACzC,CACJ,EACA,CAAC,CAAC,QAAQ,KAAMC,EAAU,IAAI,CAAC,EAAkC,CAU7D,IAAI,oBAAqB,CACrB,MAAO,CAAC,OAAQ,OAAQ,OAAQ,WAAY,SAAU,QAAS,WAAY,OAAO,EAAE,SAAS,KAAK,UAAU,YAAY,CAAC,CAC7H,EAWA,UAAUC,EAAY,GAAM,CACxB,IAAMC,EAAO,KAAK,UACZC,EAAQ,GAAK,KAAK,OAEpBC,EAAS,IAAIF,CAAI,GAAGC,EAAQ,IAAMA,EAAQ,EAAE,IAChD,OAAIF,IACAG,GAAU,KAAKF,CAAI,KAEhBE,CACX,EAsBA,UAAUC,EAAMC,EAASC,EAAe,CACpCvB,EAAO,OAAO,iBAAiBqB,EAAM,OAAQ,MAAM,EAAE,EACrDrB,EAAO,OAAO,iBAAiBsB,EAASE,EAAU,OAAQ,OAAO,EAAE,EAE7DH,aAAgB,SAClBA,EAAO,IAAI,OAAOT,EAAE,aAAaS,EAAM,OAAO,CAAC,GAE7CC,aAAmB,UACrBA,EAAU,KAAK,UAAU,eAAeA,GAAW,MAAM,GAG7D,IAAMG,EAAOrB,EAACsB,GAAS,CACnB,QAAWC,KAASD,EAAK,SACjBC,EAAM,oBAAuBJ,GAAiB,MAAQI,EAAM,SAASJ,CAAa,GAAMI,EAAM,UAAU,EAAK,IAAML,EAAQ,UAAU,EAAK,GAG9IG,EAAKE,CAAK,EAEd,QAAWA,KAASD,EAAK,WACrB,GAAIC,aAAiB,cAAe,CAChC,IAAMC,EAAUD,EAAM,UAAU,MAAMN,CAAI,EAC1C,GAAIO,EAAS,CACT,IAAMC,EAAQF,EAAM,UAAUC,EAAQ,KAAK,EAC3CC,EAAM,UAAUD,EAAQ,CAAC,EAAE,MAAM,EACjCC,EAAM,MAAMP,EAAQ,OAAO,EAAI,CAAC,CACpC,CACJ,CAEJ,OAAOI,CACX,EAlBa,QAoBb,YAAK,UAAU,EACRD,EAAK,IAAI,CACpB,EAOA,MAAM,gBAAgBhB,EAAU,CAAC,EAAG,CAyBhC,OAxBAT,EAAO,OAAO,iBAAiBS,EAAS,MAAM,EAAE,EAChDA,EAAU,OAAO,OAAO,CAIhB,SAAU,OAEV,MAAO,OAEP,OAAQ,OAKR,OAAQ,GAER,QAAS,OAET,UAAW,OAEX,SAAU,EAElB,EAAGA,CAAO,EAENA,EAAQ,QAAUD,EACXsB,EAAQ,QAAQ,EAAK,EAGzB,IAAIA,EAAQ,CAACC,EAASC,IAAW,CACpC,IAAMC,EAAW,IAAIC,EAAqB,CAACC,EAAOC,IAAS,CACvD,GAAI,CAACA,GAAQD,EAAM,gBAAkB1B,EAAQ,SAAU,CACnDsB,EAAQ,EAAK,EACbE,EAAS,UAAUE,EAAM,MAAM,EAC/B,MACJ,CAEAA,EAAM,OAAO,eAAe1B,CAAO,EACnCD,EAAoB,GAEhB2B,EAAM,iBACNE,GAAW,KAAK,EAChBJ,EAAS,UAAUE,EAAM,MAAM,EAC/B3B,EAAoB,GACpBuB,EAAQ,EAAI,EAEpB,EAAG,CACC,UAAWtB,EAAQ,WAAa,CACpC,CAAC,EACK4B,EAAY5B,EAAQ,QAAU,IAAI6B,EAAU,KAClDD,GAAW,iBAAiB,QAAUhC,GAAM,CACxC4B,EAAS,UAAU,IAAI,EACvBzB,EAAoB,GACpBwB,EAAO,IAAI,CACf,CAAC,EACDK,GAAW,MAAM5B,EAAQ,OAAO,EAChCwB,EAAS,QAAQ,IAAI,CACzB,CAAC,CACL,CACJ,EACA,CAAC,CAAC,iBAAiB,KAAMjB,EAAU,IAAI,CAAC,EAA2C,CAU/E,WAAWT,EAAU,CAGjB,GAFAP,EAAO,OAAO,iBAAiBO,EAAUiB,EAAU,MAAM,EAAE,EAEvD,KAAK,OAAS,WACd,OAAO,KAIX,GAAIjB,GAAY,KAAM,CAClB,IAAMA,EAAWN,EAAc,IAAI,IAAI,EACvC,GAAIM,GAAY,KACZ,MAAM,IAAI,MAAM,KAAO,6BAA6B,EAGxD,KAAK,eAAiB,OAAO,OAAOA,CAAQ,EAAE,QAAQ,iBAAiB,EAAE,OAC7E,MAGIN,EAAc,IAAI,KAAMM,CAAQ,EAChC,KAAK,eAAiB,OAAO,OAAOA,CAAQ,EAAE,QAAQ,iBAAiB,EAAE,QAEzE,CAAC,SAAU,SAAS,EAAE,QAAQF,GAAK,CAC/B,KAAK,UAAU,iBAAiBA,EAAGF,CAAc,EACjD,KAAK,iBAAiBE,EAAIA,GAAM,CAC5B,IAAMC,EAASD,EAAE,OACXkC,EAAW,OAAO,OAAOhC,CAAQ,EAAE,QAAQ,iBAAiB,EAClE,QAAWoB,KAASY,EAChBZ,EAAM,OAASrB,EAAO,QAAUqB,EAAM,MAAQ,IAEtD,CAAC,CACL,CAAC,EAEL,OAAO,IACX,CACJ,EACA,CAAC,CAAC,kBAAkB,KAAMX,EAAU,IAAI,CAAC,EAA4C,CAcjF,WAAWP,EAAU,CAAC,EAAG,CACrB,OAAAT,EAAO,OAAO,iBAAiBS,EAAS,MAAM,EAAE,EAChDA,EAAU,OAAO,OAAO,CACpB,QAAS,GACT,OAAQ,EACZ,EAAGA,CAAO,EAEH,IAAIqB,EAAQ,CAACC,EAASC,IAAW,CACpC,IAAMQ,EAAQpC,EAACC,GAAM,CACjBA,EAAE,OAAO,oBAAoB,QAASmC,CAAK,EAC3CnC,EAAE,OAAO,oBAAoB,SAAUoC,CAAM,EAC7CpC,EAAE,OAAO,oBAAoB,QAASqC,CAAS,EAC/CrC,EAAE,OAAO,oBAAoB,UAAWsC,CAAQ,EAChDZ,EAAQ1B,EAAE,OAAO,WAAW,CAChC,EANc,SAORoC,EAASrC,EAACC,GAAM,CAClBA,EAAE,OAAO,oBAAoB,QAASmC,CAAK,EAC3CnC,EAAE,OAAO,oBAAoB,SAAUoC,CAAM,EAC7CpC,EAAE,OAAO,oBAAoB,QAASqC,CAAS,EAC/CrC,EAAE,OAAO,oBAAoB,UAAWsC,CAAQ,EAChDZ,EAAQ,IAAI,CAChB,EANe,UAOTW,EAAYtC,EAACC,GAAM,CAChB,KAAK,sBAAsB,EAAE,UAAU,IAAI,iBAAiBA,EAAE,QAASA,EAAE,OAAO,CAAC,IAClF,KAAK,MAAM,IAAI,EACf,KAAK,cAAc,IAAI,MAAM,SAAU,CACnC,QAAS,GACT,WAAY,GACZ,SAAU,EACd,CAAC,CAAC,EAEV,EATkB,aAUZsC,EAAWvC,EAACC,GAAM,CAChBA,EAAE,OAAS,UACXA,EAAE,eAAe,CAEzB,EAJiB,YAOjB,KAAK,YAAc,GAGnB,KAAK,UAAU,EACf,KAAK,iBAAiB,QAASmC,EAAO,CAAC,KAAM,EAAI,CAAC,EAClD,KAAK,iBAAiB,SAAUC,EAAQ,CAAC,KAAM,EAAI,CAAC,EAEhDhC,EAAQ,SACR,KAAK,iBAAiB,QAASiC,CAAS,EAEvCjC,EAAQ,QACT,KAAK,iBAAiB,UAAWkC,CAAQ,CAEjD,CAAC,CACL,CACJ,EACA,CAAC,CAAC,eAAe,KAAM,SAAS,KAAM,SAAS,KAAM,qBAAqB,IAAwB,CAAC,EAA+B,CAU9H,IAAIC,EAAO,CACP,OAAA5C,EAAO,OAAO,iBAAiB4C,EAAO,MAAM,EAAE,EAEvC,MAAM,UAAU,GAAG,KAAK,KAAMA,CAAK,CAC9C,EAOA,MAAM,UAAUC,EAAU,CACtB,OAAA7C,EAAO,OAAO,iBAAiB6C,EAAU,QAAQ,EAAE,EAE5Cf,EAAQ,IAAIlB,EAAE,gBAAgB,IAAI,EAAE,IAAI,CAAC,CAACkC,EAAGzC,CAAC,IAAMwC,EAASxC,EAAGyC,EAAG,IAAI,CAAC,CAAC,CACpF,CACJ,CACJ,CACJ,CAtYgB1C,EAAAL,GAAA,iBCAT,SAASgD,GAASC,EAAQ,CAC7B,IAAMC,EAAe,CAAC,EAEtB,MAAO,CACH,CAAC,CAAC,KAAK,KAAMC,EAAU,IAAI,CAAC,EAA+B,CAavD,QAAQC,EAAKC,EAAUC,EAAU,CAAC,EAAG,CACjCA,EAAU,OAAO,OAAO,CACpB,YAAa,EACjB,EAAGA,CAAO,EAEVF,EAAM,IAAI,IAAIA,EAAK,KAAK,OAAO,EAC/B,IAAMG,EAAYH,EAAI,KAAK,UAAU,CAAC,GAAK,UAC3CA,EAAI,KAAO,GAEX,IAAMI,EAAcN,EAAaE,CAAG,IAAM,IAAI,cAAc,WAAY,CACpEK,GAEA,YAAYL,EAAKE,EAAS,CACtB,MAAMF,EAAKE,CAAO,EAElBL,EAAO,OAAO,MAAM,YAAYG,CAAG,GAAG,EACtC,KAAKK,GAAkB,IAAIC,CAC/B,CAEA,QAAQC,EAAMC,EAAMP,EAAU,CACZ,CAAC,GAAG,KAAKI,GAAgB,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAEI,CAAc,IAAM,OAAO,KAAKA,CAAc,CAAC,EAClG,SAASD,CAAI,IACpBX,EAAO,OAAO,MAAM,cAAc,KAAK,GAAG,IAAIW,CAAI,EAAE,EACpD,KAAK,iBAAiBA,EAAME,GAAK,CACzB,KAAKL,GAAgB,OAAS,IAC9B,OAAOP,EAAa,KAAK,GAAG,EAC5B,KAAK,MAAM,EACXD,EAAO,OAAO,MAAM,aAAa,KAAK,GAAG,EAAE,GAE/C,OAAW,CAACU,EAAME,CAAc,IAAK,KAAKJ,GAAgB,QAAQ,EAC9D,QAAWJ,KAAYQ,EAAeD,CAAI,GAAK,CAAC,EAC5CP,EAAS,KAAKM,EAAMG,CAAC,CAGjC,CAAC,GAGL,IAAMD,EAAiB,KAAKJ,GAAgB,SAASE,EAAM,KAAO,CAAC,EAAE,EACrEE,EAAeD,CAAI,IAAM,CAAC,EAC1BC,EAAeD,CAAI,EAAE,KAAKP,CAAQ,CACtC,CACJ,EAAED,EAAK,CACH,gBAAiBE,EAAQ,WAC7B,CAAC,EACD,OAAIE,EAAY,kBAAoB,CAAC,CAACF,EAAQ,aAC1CL,EAAO,OAAO,MAAM,oCAAoC,EAG5DO,EAAY,QAAQ,KAAMD,EAAWF,CAAQ,EAEtC,IACX,CACJ,EACA,CAAC,CAAC,kBAAkB,KAAMF,EAAU,IAAI,CAAC,EAA4C,CAUjF,QAAQG,EAAU,CAAC,EAAG,CAClBL,EAAO,OAAO,iBAAiBK,EAAS,MAAM,EAAE,EAChDA,EAAU,OAAO,OAAO,CAEpB,MAAO,GAEP,KAAM,OAEN,OAAQ,OAER,QAAS,oCAET,WAAY,GAEZ,KAAM,CAAC,CACX,EAAGA,CAAO,EACVL,EAAO,OAAO,iBAAiBK,EAAQ,KAAM,OAAQ,QAAQ,EAAE,EAG/D,IAAMF,EAAM,KAAK,KACXW,EAAO,IAAI,SACjBA,EAAK,mBAAmBX,EAAI,YAAY,EACxCW,EAAK,mBAAmBT,EAAQ,IAAI,EACpCF,EAAI,OAAS,GAGb,IAAMY,EAAOV,EAAQ,MAAQ,KAAK,UAAU,eAAe,OAAQ,CAC/D,OAAQF,EACR,OAAQE,EAAQ,QAAU,OAC1B,QAASA,EAAQ,QACjB,OAAQ,KAAK,OACb,OAAQ,EACZ,CAAC,EACGW,EACJ,GAAIX,EAAQ,KACRW,EAAY,KAAK,UAAU,eAAe,SAAU,CAChD,KAAM,SACN,WAAYb,EACZ,WAAY,KAAK,OACjB,WAAYE,EAAQ,QAAUU,EAAK,aAAa,QAAQ,GAAK,OAC7D,YAAaV,EAAQ,QACrB,eAAgBA,EAAQ,UAC5B,CAAC,EACDU,EAAK,OAAOC,CAAS,MAGrB,QAAW,CAACL,EAAMM,CAAK,IAAKH,EAAM,CAC9B,IAAMI,EAAS,KAAK,UAAU,eAAe,QAAS,CAAC,KAAM,QAAQ,CAAC,EACtEA,EAAO,KAAOP,EACdO,EAAO,MAAQD,EACfF,EAAK,OAAOG,CAAM,CACtB,CAIJ,GAAIb,EAAQ,OAAS,KAAK,SAAU,CAChC,IAAMc,EAAc,CAAC,EACjBH,IACAG,EAAY,KAAOL,EACnBK,EAAY,UAAYH,GAE5B,GAAI,CACA,IAAMI,EAAWL,EAAK,SAASI,CAAW,EAE1C,OADAH,GAAW,OAAO,EACb,KAAK,UAGN,KAAK,UAAY,CAACX,EAAQ,IACnBe,EAAS,KAAMA,GAAa,CAC/B,GAAI,CAACA,EAAS,GACV,MAAM,IAAIA,EAEdA,EAAS,KAAK,EAAE,KAAMC,GAAS,CAC3B,IAAMlB,EAAM,IAAI,gBAAgBkB,CAAI,EAC9BC,EAAO,KAAK,UAAU,eAAe,IAAK,CAC5C,KAAMnB,EACN,SAAU,KAAK,SACf,OAAQ,EACZ,CAAC,EACD,GAAI,CACA,KAAK,UAAU,KAAK,YAAYmB,CAAI,EACpCA,EAAK,MAAM,CACf,QACA,CACI,KAAK,UAAU,KAAK,YAAYA,CAAI,EACpC,WAAW,IAAM,IAAI,gBAAgBnB,CAAG,EAAG,GAAI,CACnD,CACJ,CAAC,CACL,CAAC,EAvBMiB,CA0Bf,QACA,CACIJ,GAAW,OAAO,CACtB,CACJ,CAGA,OAAIA,GACAD,EAAK,cAAcC,CAAS,EAC5BA,EAAU,OAAO,IAGjB,KAAK,UAAU,KAAK,OAAOD,CAAI,EAC/BA,EAAK,OAAO,EACZA,EAAK,OAAO,GAET,IACX,CACJ,EACA,CAAC,CAAC,gBAAgB,KAAMb,EAAU,IAAI,CAAC,EAA0C,CAO7E,MAAM,SAASG,EAAU,CAAC,EAAG,CAkCzB,GAjCAL,EAAO,OAAO,iBAAiBK,EAAS,MAAM,EAAE,EAChDA,EAAU,OAAO,OAAO,CAMhB,IAAK,OAEL,OAAQ,OAER,QAAS,OAET,WAAY,OAEZ,UAAW,OAEX,KAAM,CAAC,EAEP,cAAe,OAEf,GAAI,GAEJ,QAAS,CAEjB,EAAGA,CAAO,EACJA,EAAQ,mBAAmB,UAC7BA,EAAQ,QAAU,IAAI,QAAQA,EAAQ,SAAW,CAAC,CAAC,GAEvDL,EAAO,OAAO,iBAAiBK,EAAQ,QAAS,OAAO,EAAE,EACzDL,EAAO,OAAO,iBAAiBK,EAAQ,KAAM,OAAQ,QAAQ,EAAE,EAG3D,EADeA,EAAQ,aAAeA,EAAQ,WAAW,gBAAkB,KAAK,YAAc,MAC/E,CAAC,KAAK,eAAe,EACpC,MAAM,IAAI,MAAM,cAAc,EAKlC,IAAMkB,EAASlB,EAAQ,KAAOA,EAAQ,WAAW,aAAa,YAAY,GAAK,KAAK,aAAa,QAAQ,GAAK,GACxGmB,EAASnB,EAAQ,QAAUA,EAAQ,WAAW,aAAa,YAAY,GAAK,KAAK,aAAa,QAAQ,GAAK,MAC3GoB,EAAUpB,EAAQ,SAAWA,EAAQ,QAAQ,IAAI,cAAc,GAAKA,EAAQ,WAAW,aAAa,aAAa,GAAK,KAAK,aAAa,SAAS,GAAK,oCAG5JA,EAAQ,OAASmB,EAAO,YAAY,EACpCnB,EAAQ,QAAQ,IAAI,eAAgBoB,CAAO,EAG3C,IAAMtB,EAAM,IAAI,IAAIoB,EAAQ,KAAK,OAAO,EAClCG,EAAW,IAAI,SAAS,KAAMrB,EAAQ,SAAS,EACrD,OAAW,CAACM,EAAMM,CAAK,IAAKU,EAAE,gBAAgBtB,EAAQ,IAAI,EACtDqB,EAAS,OAAOf,EAAMM,CAAK,EAM/B,GAAIZ,EAAQ,SAAW,MACnB,OAAW,CAACM,EAAMM,CAAK,IAAKS,EAAS,gBAAgB,EACjDvB,EAAI,aAAa,OAAOQ,EAAMM,CAAK,UAInCQ,EAAQ,WAAW,mCAAmC,EACtDpB,EAAQ,QAAQ,OAAO,cAAc,EACrCA,EAAQ,KAAOqB,EAAS,gBAAgB,UAEnCD,EAAQ,WAAW,qBAAqB,EAC7CpB,EAAQ,QAAQ,OAAO,cAAc,EACrCA,EAAQ,KAAOqB,UAEVD,EAAQ,WAAW,kBAAkB,EAC1CpB,EAAQ,KAAO,MAAMqB,EAAS,MAAMrB,EAAQ,aAAa,MAGzD,OAAM,IAAI,MAAM,mBAAmBoB,CAAO,GAAG,EAIrD,OAAO,MAAME,EAAE,MAAMxB,EAAKE,CAAO,CACrC,CACJ,EACA,CAAC,CAAC,QAAQ,KAAMH,EAAU,IAAI,CAAC,EAAkC,CAQ7D,MAAM,MAAM0B,EAAcvB,EAAU,CAAC,EAAG,CAChCsB,EAAE,gBAAgBC,CAAY,EAC9BvB,EAAQ,IAAMuB,EAGdvB,EAAUuB,EAEd5B,EAAO,OAAO,iBAAiBK,EAAS,MAAM,EAAE,EAChDA,EAAU,OAAO,OAAO,CAMhB,IAAK,OAEL,OAAQ,OAER,KAAM,CAAC,EAEP,GAAI,GAEJ,QAAS,CAEjB,EAAGA,CAAO,EACJA,EAAQ,mBAAmB,UAC7BA,EAAQ,QAAU,IAAI,QAAQA,EAAQ,SAAW,CAAC,CAAC,GAEvDL,EAAO,OAAO,iBAAiBK,EAAQ,IAAK,MAAM,EAAE,EACpDL,EAAO,OAAO,iBAAiBK,EAAQ,QAAS,OAAO,EAAE,EACzDL,EAAO,OAAO,iBAAiBK,EAAQ,KAAM,OAAQ,QAAQ,EAAE,EAG/D,IAAMwB,EAAQxB,EAAQ,IAAI,MAAM,GAAG,EAC7BF,EAAM,IAAI,IAAI0B,EAAM,MAAM,EAAG,KAAK,OAAO,EACzCC,EAAWD,EAAM,KAAK,GAAG,EACzBL,GAAUnB,EAAQ,QAAU,OAAO,YAAY,EAC/C0B,EAAcJ,EAAE,gBAAgBtB,EAAQ,IAAI,EAAE,IAAI,CAAC,CAAC2B,EAAGC,CAAC,IAAM,CAACD,EAAGC,aAAa,SAAWA,EAAE,IAAI,EAAIA,CAAC,CAAC,EAE5G,GAAIT,IAAW,MACX,OAAS,CAACb,EAAMM,CAAK,IAAKc,EACtB5B,EAAI,aAAa,OAAOQ,EAAMM,CAAK,OAIvCZ,EAAQ,QAAQ,OAAO,cAAc,EACrCA,EAAQ,KAAO,IAAI,gBAAgB0B,CAAW,EAGlD,IAAMX,EAAW,MAAMO,EAAE,MAAMxB,EAAKE,CAAO,EACvC6B,EAAQ,KAAK,UAAU,wBAAwB,MAAMd,EAAS,KAAK,CAAC,EACxE,OAAIU,IACAI,EAAQA,EAAM,GAAGJ,CAAQ,GAE7B,KAAK,iBAAiBI,CAAK,EACpBA,CACX,CACJ,EACA,CAAC,CAAC,KAAK,KAAMC,EAAU,IAAI,CAAC,EAA+B,CAQvD,MAAM,QAAQP,EAAcvB,EAAU,CAAC,EAAG,CACtC,IAAIF,EACAwB,EAAE,gBAAgBC,CAAY,EAC9BzB,EAAMyB,EAGNzB,EAAME,EAAQ,IAElBL,EAAO,OAAO,iBAAiBK,EAAS,MAAM,EAAE,EAChDA,EAAU,OAAO,OAAO,CACpB,OAAQ,MACR,QAAS,EACT,GAAI,GACJ,QAAS,CAAC,EACV,YAAa,cACb,SAAU+B,EAAA,IAAM,KAAN,WACd,EAAG/B,CAAO,EAEV,IAAMgC,EAAM,IAAI,eAChBA,EAAI,KAAKhC,EAAQ,OAAO,YAAY,EAAGF,EAAK,EAAI,EAChDkC,EAAI,QAAUhC,EAAQ,QACtBgC,EAAI,gBAAkBhC,EAAQ,cAAgB,OAC9CgC,EAAI,aAAe,cAEnB,OAAW,CAAC1B,EAAMM,CAAK,IAAKU,EAAE,gBAAgBtB,EAAQ,OAAO,EACzDgC,EAAI,iBAAiB1B,EAAMM,CAAK,EAGpC,IAAMqB,EAAU,IAAIC,EAAQ,CAACC,EAASC,IAAW,CAC7C,IAAMC,EAAcN,EAAA,UAAY,CAC5B,IAAMhB,EAAW,IAAI,SAASiB,EAAI,SAAU,CACxC,OAAQA,EAAI,OACZ,WAAYA,EAAI,WAChB,QAASA,EAAI,sBAAsB,EAAE,MAAM,OAAO,EAAE,OAAO,SAAUM,EAASC,EAAM,CAChF,GAAIA,EAAK,KAAK,EAAG,CACb,GAAM,CAACjC,EAAMM,CAAK,EAAI2B,EAAK,MAAM,GAAG,EACpCD,EAAQ,OAAOhC,EAAK,KAAK,EAAGM,EAAM,KAAK,CAAC,CAC5C,CACA,OAAO0B,CACX,EAAG,IAAI,OAAS,CACpB,CAAC,EACD,OAAO,OAAO,iBAAiBvB,EAAU,CACrC,IAAK,CACD,KAAM,CAAC,OAAOiB,EAAI,WAAY,CAClC,CACJ,CAAC,CACL,EAjBoB,eAkBpBA,EAAI,iBAAiB,mBAAoB,UAAY,CAC7CA,EAAI,aAAe,eAAe,kBAC9B,CAAChC,EAAQ,IAAM,EAAE,KAAOgC,EAAI,QAAUA,EAAI,OAAS,MACnDI,EAAO,IAAI,MAAM,GAAGJ,EAAI,MAAM,KAAKA,EAAI,UAAU,GAAI,CACjD,MAAOK,EAAY,CACvB,CAAC,CAAC,CAKd,CAAC,EACDL,EAAI,iBAAiB,OAAQ,UAAY,CACrCG,EAAQE,EAAY,CAAC,CACzB,CAAC,EACDL,EAAI,iBAAiB,QAAS,SAAUxB,EAAG,CACvC4B,EAAO5B,CAAC,CACZ,CAAC,EACDwB,EAAI,iBAAiB,QAAS,SAAUxB,EAAG,CACvC4B,EAAO5B,CAAC,CACZ,CAAC,EACDwB,EAAI,iBAAiB,UAAW,SAAUxB,EAAG,CACzC4B,EAAO5B,CAAC,CACZ,CAAC,EACDwB,EAAI,OAAO,iBAAiB,WAAY,SAAUxB,EAAG,CACjDR,EAAQ,SAASQ,CAAC,CACtB,CAAC,CACL,CAAC,EAED,GAAIR,EAAQ,OAAO,YAAY,IAAM,OAAQ,CACzC,IAAMqB,EAAW,IAAI,SACrBA,EAAS,OAAOrB,EAAQ,MAAQ,MAAO,IAAI,EAC3CgC,EAAI,KAAKX,CAAQ,CACrB,MAEIW,EAAI,KAAK,IAAI,EAGjB,OAAOC,CACX,CACJ,CACJ,CACJ,CA1bgBF,EAAArC,GAAA,YCAT,SAAS8C,GAAWC,EAAQ,CAC/B,IAAMC,EAAuBC,EAAA,UAAWC,EAAMC,EAAYC,EAAM,CAC5DL,EAAO,OAAO,iBAAiBG,EAAM,IAAI,EAAE,EAE3C,QAASG,EAAUH,EAAKE,CAAI,EAAGC,EAASA,EAAUA,EAAQD,CAAI,GACtDD,GAAc,MAAQE,EAAQ,SAASF,CAAU,KACjD,MAAME,EAGlB,EAR6B,wBAU7B,MAAO,CACH,CAAC,CAAC,SAAS,KAAM,iBAAiB,KAAM,QAAQ,IAAI,CAAC,EAA8C,CAO/F,EAAEF,EAAY,CAGV,OAFAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAQ,EAAE,EAEzD,OAAQA,GAAgB,WACjB,MAAM,UAAU,KAAK,KAAK,KAAK,GAAG,GAAG,EAAGA,CAAU,GAAK,KAE3D,KAAK,cAAcA,CAAU,CACxC,EAOA,GAAGA,EAAY,CAGX,OAFAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAQ,EAAE,EAEzD,OAAQA,GAAgB,WACjBG,EAAE,mBAAmB,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,OAAOH,CAAU,CAAC,EAE7D,KAAK,iBAAiBA,CAAU,CAC3C,EAOA,IAAIA,EAAY,CACZJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAQ,EAAE,EAE7D,IAAMI,EAAO,KAAK,SAASJ,CAAU,EAAI,CAAC,IAAI,EAAI,CAAC,EAInD,OAAI,OAAQA,GAAgB,WACjBG,EAAE,mBAAmB,CAAC,GAAGC,EAAM,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,OAAOJ,CAAU,CAAC,CAAC,EAG3EG,EAAE,mBAAmB,CAAC,GAAGC,EAAM,GAAG,KAAK,GAAGJ,CAAU,CAAC,CAAC,CACjE,EAOA,UAAUA,EAAY,CAGlB,OAFAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,KAAM,QAAQ,EAAE,EAE/DA,aAAsB,KACf,KAAK,SAASA,CAAU,EAG/B,OAAQA,GAAgB,SACjB,CAAC,EAAE,KAAK,QAAQA,CAAU,GAAK,KAAK,cAAcA,CAAU,GAEhE,KAAK,IAAIA,CAAU,EAAE,OAAS,CACzC,EAOA,SAASA,EAAY,CAGjB,OAFAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,KAAM,QAAQ,EAAE,EAE/D,OAAQA,GAAgB,WACjB,CAAC,CAACA,EAAW,KAAK,KAAM,IAAI,EAEnCA,aAAsB,KACf,OAASA,EAEb,KAAK,QAAQA,CAAU,CAClC,CACJ,EACA,CAAC,CAAC,SAAS,IAAI,CAAC,EAAmC,CAsB/C,EAAEA,EAAY,CACVJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAQ,EAAE,EAE7D,QAAWD,KAAQ,KAAM,CACrB,IAAMM,EAASN,EAAK,IAAIC,CAAU,EAClC,GAAIK,EACA,OAAOA,CAEf,CACA,OAAO,IACX,EAsBA,GAAGL,EAAY,CACX,OAAAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAQ,EAAE,EAEtDG,EAAE,mBAAmB,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,QAAQJ,GAAQ,CAAC,GAAGA,EAAK,KAAKC,CAAU,GAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACpG,EAsBA,IAAIA,EAAY,CACZ,OAAAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAQ,EAAE,EAEtDG,EAAE,mBAAmB,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,QAAQJ,GAAQ,CAAC,GAAGA,EAAK,MAAMC,CAAU,GAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACrG,EASA,UAAUA,EAAY,CAClB,OAAAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAS,QAAQ,EAAE,EAE/D,CAAC,CAAC,MAAM,UAAU,KAAK,KAAK,KAAMD,GAAQA,EAAK,YAAYC,CAAU,CAAC,CACjF,EASA,SAASA,EAAY,CACjB,OAAAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAS,QAAQ,EAAE,EAE/D,MAAM,UAAU,KAAK,KAAK,KAAMD,GAAQA,EAAK,WAAWC,CAAU,CAAC,CAC9E,EAOA,OAAOA,EAAY,CACfJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,KAAM,QAAQ,EAAE,EAEnE,IAAMM,EAAQ,MAAM,UAAU,UAAU,KAAK,KAAMP,GAASA,EAAK,WAAWC,CAAU,GAAK,EAAM,EACjG,OAAIM,IAAU,GACH,KAEJA,CACX,EAOA,QAAQN,EAAY,CAChB,OAAAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAQ,EAAE,EAEtDG,EAAE,mBAAmB,CAAC,GAAG,IAAI,EAAE,OAAOJ,GAASA,EAAK,WAAWC,CAAU,GAAK,EAAM,CAAC,CAChG,EAOA,QAAQA,EAAY,CAChB,OAAAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAQ,EAAE,EAEtDG,EAAE,mBAAmB,CAAC,GAAG,IAAI,EAAE,OAAOJ,GAAQ,EAAEA,EAAK,WAAWC,CAAU,GAAK,GAAK,CAAC,CAChG,EAQA,OAAOO,EAAOC,EAAK,CACf,OAAAZ,EAAO,OAAO,iBAAiBW,EAAOE,EAAU,OAAQ,OAAQ,KAAM,QAAQ,EAAE,EAChFb,EAAO,OAAO,iBAAiBY,EAAKC,EAAU,OAAQ,OAAQ,KAAM,QAAQ,EAAE,EAE1EF,GAAS,MAAQ,OAAQA,GAAW,WACpCA,EAAQ,KAAK,OAAOA,CAAK,GAAK,QAE9BC,GAAO,MAAQ,OAAQA,GAAS,WAChCA,EAAM,KAAK,OAAOA,CAAG,GAAK,QAEvBL,EAAE,mBAAmB,MAAM,UAAU,MAAM,KAAK,KAAMI,EAAOC,CAAG,CAAC,CAC5E,CACJ,EACA,CAAC,CAAC,KAAK,KAAME,EAAU,IAAI,CAAC,EAA+B,CAQvD,IAAI,SAAU,CACV,OAAO,KAAK,eAAe,aAAe,MAC9C,EAQA,IAAI,WAAY,CACZ,OAAO,KAAK,eAAiB,OAAO,QACxC,EAOA,WAAWC,EAAW,CAAC,KAAK,UAAW,KAAK,aAAc,KAAK,kBAAkB,EAAG,CAChFf,EAAO,OAAO,iBAAiBe,EAAU,CAAC,KAAK,UAAW,KAAK,aAAc,KAAK,mBAAoB,UAAU,CAAC,EAAE,EAEnH,IAAMC,EAAQ,CAAC,EACf,QAAWC,KAAS,KAAK,WACjBA,aAAiB,cACbF,EAAS,SAASE,EAAM,QAAQ,GAChCD,EAAM,KAAKC,CAAK,GAIhBF,EAAS,SAAS,UAAU,GAAK,CAACE,EAAM,qBACxCD,EAAM,KAAK,GAAGC,EAAM,WAAWF,CAAQ,CAAC,EAIpD,OAAOR,EAAE,mBAAmBS,CAAK,CACrC,EAOA,SAASZ,EAAY,CAGjB,GAFAJ,EAAO,OAAO,iBAAiBI,EAAY,OAAQ,QAAS,QAAQ,EAAE,EAElE,OAAQA,GAAgB,SACxB,OAAO,KAAK,QAAQA,CAAU,EAGlC,QAASc,EAAS,KAAMA,GAAU,KAAMA,EAASA,EAAO,cACpD,GAAIA,EAAO,SAASd,CAAU,EAC1B,OAAOc,EAGf,OAAO,IACX,EAOA,SAASd,EAAY,CACjBJ,EAAO,OAAO,iBAAiBI,EAAYS,EAAU,OAAQ,QAAQ,EAAE,EAEvE,IAAMM,EAAU,CAAC,EACjB,QAASD,EAAS,KAAK,cAAeA,GAAU,KAAMA,EAASA,EAAO,eAC9Dd,GAAc,MAAQc,EAAO,SAASd,CAAU,IAChDe,EAAQ,KAAKD,CAAM,EAG3B,OAAOX,EAAE,mBAAmBY,CAAO,CACvC,EAOA,cAAcf,EAAY,CAGtB,GAFAJ,EAAO,OAAO,iBAAiBI,EAAYS,EAAU,OAAQ,OAAQ,QAAS,QAAQ,EAAE,EAEpF,OAAQT,GAAgB,SACxB,OAAO,KAAK,SAAS,IAAIA,CAAU,EAEvC,QAAWa,KAAS,KAAK,SACrB,GAAIb,GAAc,MAAQa,EAAM,SAASb,CAAU,EAC/C,OAAOa,EAGf,OAAO,IACX,EAOA,eAAeb,EAAY,CACvBJ,EAAO,OAAO,iBAAiBI,EAAYS,EAAU,OAAQ,QAAQ,EAAE,EAEvE,IAAMO,EAAWb,EAAE,mBAAmB,KAAK,QAAQ,EACnD,OAAIH,GAAc,KACPgB,EAEJA,EAAS,QAAQhB,CAAU,CACtC,EASA,aAAaA,EAAY,CACrB,OAAAJ,EAAO,OAAO,iBAAiBI,EAAYS,EAAU,OAAQ,QAAQ,EAAE,EAEhEZ,EAAqB,KAAMG,EAAY,wBAAwB,EAAE,KAAK,EAAE,OAAS,IAC5F,EAOA,cAAcA,EAAY,CACtB,OAAAJ,EAAO,OAAO,iBAAiBI,EAAYS,EAAU,OAAQ,QAAQ,EAAE,EAEhEN,EAAE,mBAAmB,CAAC,GAAGN,EAAqB,KAAMG,EAAY,wBAAwB,CAAC,EAAE,QAAQ,CAAC,CAC/G,EASA,aAAaA,EAAY,CACrB,OAAAJ,EAAO,OAAO,iBAAiBI,EAAYS,EAAU,OAAQ,QAAQ,EAAE,EAEhEZ,EAAqB,KAAMG,EAAY,oBAAoB,EAAE,KAAK,EAAE,OAAS,IACxF,EAOA,cAAcA,EAAY,CACtB,OAAAJ,EAAO,OAAO,iBAAiBI,EAAYS,EAAU,OAAQ,QAAQ,EAAE,EAEhEN,EAAE,mBAAmBN,EAAqB,KAAMG,EAAY,oBAAoB,CAAC,CAC5F,EAOA,iBAAiBA,EAAY,CACzB,OAAAJ,EAAO,OAAO,iBAAiBI,EAAYS,EAAU,OAAQ,KAAM,QAAQ,EAAE,EAEtEN,EAAE,mBAAmB,CAAC,GAAG,KAAK,WAAW,QAAQ,EAAE,OAAQU,GAAUA,IAAU,OAASb,GAAc,MAAQa,EAAM,WAAWb,CAAU,EAAE,CAAC,CACvJ,CACJ,EACA,CAAC,CAAC,iBAAiB,KAAMU,EAAU,IAAI,CAAC,EAA2C,CAM/E,IAAI,gBAAiB,CAIjB,GAHI,KAAK,OAAS,SAGd,CAAC,KAAK,KACN,OAKJ,IAAMO,EAAO,KAAK,KACZC,EAAO,KAAK,KAEZC,EAAWF,EAAK,SAASC,CAAI,EACnC,GAAIC,aAAoB,cACpB,OAAOA,EAGX,IAAMC,EAAS,KAAK,UAAU,eAAe,QAAS,CAClD,KAAM,QACN,KAAMF,EACN,OAAQ,EACZ,CAAC,EAED,KAAK,sBAAsB,WAAYE,CAAM,EAC7C,GAAI,CACA,OAAOH,EAAK,SAASC,CAAI,CAC7B,QACA,CACIE,EAAO,OAAO,CAClB,CACJ,CACJ,CACJ,CACJ,CAhegBtB,EAAAH,GAAA,cC0GhB,IAAM0B,EAAW,IAAIC,GAAsB,SAAS,aAAa,EAEjED,EAAS,OAAO,KAAK,kBAAkB,EACvCA,EAAS,QAAQE,EAAc,EAC/BF,EAAS,QAAQG,EAAM,EACvBH,EAAS,QAAQI,EAAU,EAC3BJ,EAAS,QAAQK,EAAI,EACrBL,EAAS,QAAQM,EAAK,EACtBN,EAAS,QAAQO,EAAU,EAC3BP,EAAS,QAAQQ,EAAY,EAC7BR,EAAS,QAAQS,EAAU,EAC3BT,EAAS,QAAQU,EAAO,EACxBV,EAAS,QAAQW,EAAQ,EACzBX,EAAS,QAAQY,EAAa,EAC9BZ,EAAS,OAAO,QAAQ,kBAAkB,EAE1C,OAAO,OAAOA,EAAS,aAAc,CAAC,UAAAa,EAAW,MAAAC,EAAO,OAAAC,EAAQ,QAAAC,EAAS,MAAAC,EAAO,UAAAC,EAAW,OAAAC,EAAQ,MAAAC,GAAO,QAAAC,EAAO,CAAC,EAElH,IAAOC,GAAQtB",
  "names": ["API_exports", "__export", "$CSSRuleList", "$FileList", "$NodeList", "AsyncFunction", "AsyncGeneratorFunction", "Collection", "Configuration", "CookieObserver", "CustomEvent", "F", "FileReader", "GeneratorFunction", "IntersectionObserver", "Logger", "MutationObserver", "Nullable", "ObjectStorage", "Options", "Promise", "Proxy", "ResizeObserver", "Timer", "TimerObserver", "Vector2", "WeakMap", "GT", "Nullable", "__name", "AsyncFunction", "GeneratorFunction", "AsyncGeneratorFunction", "$NodeList", "$CSSRuleList", "$FileList", "F", "value", "specials", "special", "string", "m", "delimiter", "regex", "mode", "htmlTargets", "div", "e", "cache", "template", "values", "tag", "tagFunction", "hashes", "index", "cachekey", "f", "objectMap", "objectCounter", "object", "finalizer", "heldValue", "destructor", "requireLength", "keys", "length", "lengthIndex", "indexKeys", "v", "i", "prefix", "result", "name", "fullname", "styles", "css", "style", "classes", "token", "flag", "normalizeToken", "t", "key", "data", "name2", "data2", "attr", "separator", "entry", "callback", "isAsync", "promises", "assign", "Promise", "dummy", "iterable", "Logger", "properties", "property", "entries", "arrayable", "names", "target", "subname", "func", "callbackThis", "callbackArgs", "args", "arg", "url", "options", "ctrl", "response", "Configuration", "_Configuration", "#source", "source", "defaults", "force", "_Logger", "prototype", "debug", "level", "console", "noop", "noop2", "label", "actual", "others", "expecteds", "expected", "Collection", "_Collection", "array", "ancestor", "collection", "Proxy", "hint", "mapped", "thisArg", "argArray", "emptyFlag", "undefinedFlag", "primitiveFlag", "sameFlag", "promiseFlag", "results", "WeakMap", "provider", "converter", "oldValue", "obj", "ObjectStorage", "subkey", "_Promise", "#concurrency", "asyncs", "throwable", "concurrency", "k", "execute", "next", "resolve", "reject", "resolve2", "reject2", "controller", "resolved", "reason", "FileReader", "_Proxy", "instance", "handlers", "Timer", "millisecond", "timer", "repeat", "start", "tick", "time", "CustomEvent", "Options", "_Options", "defaultOptions", "handleNull", "handleUndefined", "otherOptions", "TimerObserver", "_TimerObserver", "news", "diffs", "diff", "data1", "CookieObserver", "_CookieObserver", "newValue", "MutationObserver", "_MutationObserver", "node", "ResizeObserver", "_ResizeObserver", "IntersectionObserver", "_IntersectionObserver", "observer", "keyObject", "type", "Vector2", "x", "y", "degree", "attribute_default", "__name", "target", "selector", "options", "trigger", "F", "MutationObserver", "entry", "last", "node", "child_default", "__name", "target", "selector", "options", "trigger", "withAttributes", "MutationObserver", "entry", "last", "child", "node", "cookie_default", "__name", "target", "selector", "options", "trigger", "CookieObserver", "entry", "last", "disable_default", "__name", "target", "selector", "options", "trigger", "MutationObserver", "entry", "last", "trigger2", "valuer", "withSelf", "node", "oldValue", "newValue", "flick_default", "__name", "target", "selector", "options", "trigger", "e", "Vector2", "threshold", "currentVenctor", "startIndex", "v", "firstVector", "vectors", "distance", "acc", "i", "intersect_default", "__name", "target", "selector", "options", "trigger", "IntersectionObserver", "entry", "last", "subtype", "node", "resize_default", "__name", "target", "selector", "options", "trigger", "ResizeObserver", "entry", "last", "optionsBoxPascalCaseSize", "F", "node", "swipe_default", "__name", "target", "selector", "options", "trigger", "e", "Vector2", "currentVector", "distance", "visible_default", "__name", "target", "selector", "options", "trigger", "ResizeObserver", "entry", "last", "visible", "node", "KQuery", "__name", "meta", "kQuery", "API_exports", "Configuration", "F", "result", "key", "value", "key2", "Logger", "plugin", "pluginName", "types", "properties", "descriptors", "descriptor", "original", "args", "type", "listtype", "name", "mapped", "i", "e", "Collection", "autoproperties", "kQuery", "ignoreProperties", "targetProperties", "typeProperties", "result", "name", "prototype", "property", "result2", "defineProperties", "event", "node", "newevent", "e", "defineProperty", "__name", "type", "descriptor", "properties", "$NodeList", "$FileList", "events", "kQuery", "eventDataMap", "WeakMap", "eachType", "__name", "allowEmpty", "type", "e", "t", "n", "internalEventName", "emulateDelegationWatcher", "querySelectorThisAndAll", "nodelist", "selector", "result", "node", "child", "MutationObserver", "entry", "selectorCallbacks", "callbacks", "selectorCallback", "$NodeList", "types", "listener", "options", "Nullable", "namespaces", "eventData", "customEvent", "target", "detail", "waitStorage", "ObjectStorage", "handler", "ns", "debounce", "msec", "leading", "timer", "Timer", "current", "reason", "parent", "count", "internalOptions", "collector", "F", "eventDatas", "event", "CustomEvent", "eventObject", "completed", "ancestor", "capture", "ev", "attributes", "kQuery", "nodeStorage", "ObjectStorage", "ProxyProperty", "__name", "node", "name", "target", "property", "$value", "base", "value", "method", "args", "result", "F", "thisArg", "argArray", "$NodeList", "Proxy", "attr", "object", "normalizedAttributes", "Nullable", "data", "targetPrefix", "regex", "member", "entries", "key", "token", "flag", "$CSSRuleList", "pseudo", "cstyle", "priority", "i", "style", "strstyle", "rawstyle", "data", "kQuery", "nodeBag", "WeakMap", "documentCookie", "parts", "key", "value", "F", "params", "name", "e", "document", "Proxy", "__name", "target", "property", "defaultAttributes", "cookies", "cookie", "attributes", "Nullable", "thisArg", "argArray", "v", "$NodeList", "bag", "$bag", "resolveUrl", "contents", "regex", "normalize", "url", "requests", "fullurl", "response", "responses", "Promise", "m0", "blob", "mimetype", "quality", "resolve", "canvas", "$FileList", "filename", "encoding", "dataURL", "that", "reader", "FileReader", "keyName", "item", "keyValue", "i", "dimensions", "kQuery", "boxsize", "__name", "element", "backup", "cstyle", "marginWidth", "marginHeight", "box", "contentWidth", "contentHeight", "borderWidth", "borderHeight", "paddingWidth", "paddingHeight", "scrollWidth", "scrollHeight", "clientWidth", "offsetHeight", "scrollbarWidth", "scrollbarHeight", "tops", "top", "modals", "e", "$NodeList", "cssLength", "value", "options", "marginLeft", "marginTop", "width", "height", "F", "size", "scrollableOptions", "other", "effects", "kQuery", "handleArguments", "__name", "args", "nodeStyleBackup", "WeakMap", "nodeWillChangeBackup", "willChangeTimer", "Timer", "e", "backup", "$NodeList", "value", "timeout", "current", "properties", "options", "Nullable", "css", "currentTransitions", "v", "resolve", "reject", "promise", "Promise", "res", "rej", "complete", "listener", "queue", "timer", "durationOrOptions", "opts", "cstyle", "forms", "kQuery", "toLocalISOString", "__name", "date", "format", "local", "offset", "absOffset", "offsetSign", "offsetHour", "offsetMinute", "timezone", "first", "firstYear", "weekNumber", "dayNumber", "values", "name", "value", "F", "result", "indexes", "entries", "names", "parents", "i", "subname", "key", "fileConverter", "object", "$NodeList", "strtime", "e", "v", "option", "changed", "selected", "checked", "files", "f", "dataTransfer", "options", "preserveValue", "Nullable", "scroll", "recover", "build", "data", "optgroups", "label", "optgroup", "$value", "$values", "o", "nexts", "next", "filter", "manipulation", "kQuery", "styleSheetMap", "renderedNodes", "WeakMap", "normalizeNodes", "__name", "nodes", "node", "Value", "value", "selectorFn", "ownerDocument", "F", "recursions", "e", "html", "template", "tag", "attributes", "children", "m0", "m1", "m2", "m3", "element", "name", "media", "styleSheet", "index", "$NodeList", "vars", "options", "core", "current", "parent", "elements", "i", "fragment", "child", "attribute", "old", "withEvent", "cloned", "ev", "ns", "oldChild", "miscellaneous", "kQuery", "interlockings", "WeakMap", "documentChange", "__name", "e", "parent", "selector", "scrollIntoViewing", "options", "url", "target", "F", "v", "k", "feature", "$NodeList", "withClose", "name", "attrs", "result", "word", "wrapper", "notSelectorFn", "Nullable", "core", "node", "child", "matches", "after", "Promise", "resolve", "reject", "observer", "IntersectionObserver", "entry", "last", "timeouter", "Timer", "children", "close", "cancel", "onOutside", "onEscape", "index", "callback", "i", "networks", "kQuery", "eventSources", "$NodeList", "url", "listener", "options", "eventName", "eventSource", "#$nodeListeners", "WeakMap", "node", "name", "namedListeners", "e", "data", "form", "submitter", "value", "hidden", "formoptions", "response", "blob", "newa", "action", "method", "enctype", "formData", "F", "urlOrOptions", "parts", "selector", "dataEntries", "k", "v", "nodes", "$FileList", "__name", "xhr", "promise", "Promise", "resolve", "reject", "newResponse", "headers", "line", "traversing", "kQuery", "nodeGenerateSiblings", "__name", "node", "selectorFn", "flow", "sibling", "F", "self", "result", "index", "start", "end", "Nullable", "$NodeList", "selector", "texts", "child", "parent", "parents", "children", "form", "name", "nodelist", "pseudo", "instance", "KQuery", "autoproperties", "events", "attributes", "data", "forms", "traversing", "manipulation", "dimensions", "effects", "networks", "miscellaneous", "attribute_default", "child_default", "cookie_default", "disable_default", "flick_default", "intersect_default", "resize_default", "swipe_default", "visible_default", "index_full_default"]
}
