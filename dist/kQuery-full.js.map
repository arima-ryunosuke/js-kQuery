{
  "version": 3,
  "sources": ["../src/API.js", "../src/events/attribute.js", "../src/events/child.js", "../src/events/cookie.js", "../src/events/disable.js", "../src/events/flick.js", "../src/events/intersect.js", "../src/events/resize.js", "../src/events/swipe.js", "../src/events/visible.js", "../src/KQuery.js", "../src/plugins/@autoproperties.js", "../src/plugins/@events.js", "../src/plugins/attributes.js", "../src/plugins/data.js", "../src/plugins/dimensions.js", "../src/plugins/effects.js", "../src/plugins/forms.js", "../src/plugins/manipulation.js", "../src/plugins/miscellaneous.js", "../src/plugins/networks.js", "../src/plugins/traversing.js", "../index-full.js"],
  "sourcesContent": ["const GT = globalThis;\n\n/// shortcut\nexport const Nullable = function Nullable() {};\nexport const AsyncFunction = (async () => {}).constructor;\nexport const GeneratorFunction = (function* () {}).constructor;\nexport const AsyncGeneratorFunction = (async function* () {}).constructor;\n\n/// listtype\nexport const $NodeList = function () {\n    return [NodeList.name, HTMLCollection.name];\n};\nexport const $CSSRuleList = function () {\n    return [CSSRuleList.name];\n};\nexport const $FileList = function () {\n    return [FileList.name];\n};\n\n/**\n * functions\n *\n * @ignore\n */\nexport const F = {\n    anyIsPrimitive(value, ...specials) {\n        if (value == null) {\n            return true;\n        }\n        for (const special of specials) {\n            // Object means PlainObject\n            if (special === Object) {\n                if (F.objectIsPlain(value)) {\n                    return true;\n                }\n                continue;\n            }\n            if (value instanceof special) {\n                return true;\n            }\n        }\n        return !['object', 'function'].includes(typeof (value));\n    },\n    anyIsStringable(value) {\n        if (F.anyIsPrimitive(value)) {\n            return true;\n        }\n        return (value?.toString && value.toString !== Object.prototype.toString);\n    },\n    stringToKebabCase(string) {\n        return ('' + string).replaceAll(/([A-Z])/g, (...m) => '-' + m[1].toLowerCase());\n    },\n    stringToPascalCase(string, delimiter) {\n        delimiter ??= '-';\n        const regex = new RegExp(`(\\\\${delimiter}([a-z]))`, 'ig');\n        return ('' + string).replaceAll(regex, (...m) => m[2].toUpperCase());\n    },\n    stringEscape(string, mode) {\n        const htmlTargets = {\n            '&': '&amp;',\n            '\"': '&quot;',\n            \"'\": '&#39;',\n            '<': '&lt;',\n            '>': '&gt;',\n        };\n        string += '';\n        switch (mode) {\n            default:\n                throw new Error(`${mode} is undefied`);\n            case 'attr-name': {\n                const div = document.createElement('div');\n                div.setAttribute(string, '');\n                return div.attributes[0].name;\n            }\n            case 'attr-value': {\n                return string.replace(/[&\"]/g, e => htmlTargets[e]);\n            }\n            case 'content': {\n                return string.replace(/[&<>]/g, e => htmlTargets[e]);\n            }\n            case 'html': {\n                return string.replace(/[&\"'<>]/g, e => htmlTargets[e]);\n            }\n            case 'regex': {\n                return string.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            }\n            case 'css':\n            case 'selector': {\n                return CSS.escape(string);\n            }\n        }\n    },\n    stringQuote(string, mode) {\n        string += '';\n        switch (mode) {\n            default:\n                throw new Error(`${mode} is undefied`);\n            // https://developer.mozilla.org/docs/Web/CSS/url_function#syntax\n            case 'css-url': {\n                // simplified version to save trouble(no handleing \\\\)\n                if (!string.includes('\"')) {\n                    return '\"' + string + '\"';\n                }\n                if (!string.includes(\"'\")) {\n                    return \"'\" + string + \"'\";\n                }\n                return string.replaceAll(/([ '\"()])/g, '\\\\$1');\n            }\n        }\n    },\n    stringUnquote(string, mode) {\n        string += '';\n        switch (mode) {\n            default:\n                throw new Error(`${mode} is undefied`);\n            // https://developer.mozilla.org/docs/Web/CSS/url_function#syntax\n            case 'css-url': {\n                // simplified version to save trouble(no handleing \\\\)\n                if (string.at(0) === '\"' && string.at(-1) === '\"') {\n                    return string.slice(1, -1);\n                }\n                if (string.at(0) === \"'\" && string.at(-1) === \"'\") {\n                    return string.slice(1, -1).replaceAll(/\\\\'/g, \"'\");\n                }\n                return string.replaceAll(/\\\\([ '\"()])/g, '$1');\n            }\n        }\n    },\n    stringIsNaN(string) {\n        return Number.isNaN(parseFloat(string));\n    },\n    stringRender: function () {\n        const cache = {};\n        return function (template, values, tag = null) {\n            const tagFunction = (hashes, ...values) => {\n                return values\n                    .map((value) => {\n                        if (tag == null || value instanceof String) {\n                            return value;\n                        }\n                        // noinspection JSValidateTypes\n                        return tag(value);\n                    })\n                    .map((value, index) => hashes[index] + value)\n                    .concat(hashes.slice(values.length))\n                    .join('');\n            };\n\n            const cachekey = `${tag}\\`${template}\\``;\n            const f = cache[cachekey] ??= new Function('', `return globalThis.$__internalTagFunctions.at(-1)\\`${template}\\`;`);\n\n            GT.$__internalTagFunctions ??= [];\n            GT.$__internalTagFunctions.push(tagFunction);\n            try {\n                return f.call(values);\n            }\n            finally {\n                GT.$__internalTagFunctions.pop();\n            }\n        };\n    }(),\n    objectId: function () {\n        const objectMap = new GT.WeakMap();\n        let objectCounter = 0;\n\n        return function (object) {\n            if (object === null || typeof (object) !== 'object') {\n                return null;\n            }\n            if (!objectMap.has(object)) {\n                objectMap.set(object, ++objectCounter);\n            }\n            return objectMap.get(object);\n        };\n    }(),\n    objectFinalize: function () {\n        const finalizer = new FinalizationRegistry(heldValue => heldValue());\n\n        return function (object, destructor) {\n            finalizer.register(object, destructor, object);\n        };\n    }(),\n    objectIsPlain(object) {\n        if (object == null || typeof (object) !== 'object') {\n            return false;\n        }\n        return object.constructor === Object || object.constructor == null;\n    },\n    /**\n     * check ArraryLike Object\n     *\n     * ArrayLike is:\n     * - property contains 'length' (optional)\n     * - property has consecutive enumerable keys\n     * - 'length' and the keys.length are same\n     *\n     * @param {Object} object\n     * @param {Boolean} [requireLength=true]\n     * @returns {Boolean}\n     */\n    objectIsArrayLike(object, requireLength = true) {\n        // check type\n        if (object instanceof Array) {\n            return true;\n        }\n        if (object == null || typeof (object) !== 'object') {\n            return false;\n        }\n\n        // check empty\n        const keys = Object.keys(object);\n        if (!('length' in object) && keys.length === 0) {\n            return false;\n        }\n\n        // check length\n        const length = object.length ?? (requireLength ? null : keys.length);\n        if (length == null) {\n            return false;\n        }\n\n        // check key length\n        const lengthIndex = keys.indexOf('length');\n        if (lengthIndex !== -1) {\n            keys.splice(lengthIndex, 1);\n        }\n        if (keys.length !== +length) {\n            return false;\n        }\n\n        // check index\n        const indexKeys = keys.map(v => +v);\n        for (let i = 0; i < length; i++) {\n            if (indexKeys[i] !== i) {\n                return false;\n            }\n        }\n        return true;\n    },\n    /**\n     * @param {Object} object\n     * @param {String} [prefix='']\n     * @return {Object<String, String|Boolean>}\n     */\n    objectToAttributes(object, prefix = '') {\n        const result = {};\n\n        for (const [name, value] of F.objectToEntries(object)) {\n            let fullname = prefix ? `${prefix}-${name}` : name;\n            if (fullname.startsWith('data-')) {\n                fullname = F.stringToKebabCase(fullname);\n            }\n\n            if (fullname === 'style' && F.objectIsPlain(value)) {\n                const styles = [];\n                for (const [css, style] of F.objectToEntries(value)) {\n                    styles.push(F.stringToKebabCase(css) + ':' + style);\n                }\n                if (styles.length) {\n                    result[fullname] = styles.join(';') + ';';\n                }\n            }\n            else if (fullname === 'class') {\n                const classes = [];\n                for (const [token, flag] of F.objectToEntries(F.objectToClasses(value))) {\n                    if (flag) {\n                        classes.push(token);\n                    }\n                }\n                if (classes.length) {\n                    result[fullname] = classes.join(' ');\n                }\n            }\n            else if (F.objectIsPlain(value)) {\n                Object.assign(result, F.objectToAttributes(value, name));\n            }\n            else {\n                result[fullname] = value;\n            }\n        }\n\n        return result;\n    },\n    /**\n     * @param {Object} object\n     * @return {Object<String, Boolean>}\n     */\n    objectToClasses(object) {\n        // native can't accept blank characters or spaces, but very inconvenient\n        const normalizeToken = function (token) {\n            return ('' + token).split(' ').filter(t => t.length);\n        };\n\n        const result = {};\n\n        if (object instanceof Array) {\n            for (const token of object) {\n                Object.assign(result, F.objectToClasses(token));\n            }\n        }\n        else if (F.objectIsPlain(object)) {\n            for (const [key, flag] of F.objectToEntries(object)) {\n                for (const token of normalizeToken(key)) {\n                    result[normalizeToken(token)] = !!flag;\n                }\n            }\n        }\n        else {\n            for (const token of normalizeToken(object)) {\n                result[normalizeToken(token)] = true;\n            }\n        }\n\n        return result;\n    },\n    /**\n     * @param {Object} object\n     * @param {String} [prefix='']\n     * @return {Object<String, String>}\n     */\n    objectToDataset(object, prefix = '') {\n        const result = {};\n\n        for (const [name, data] of F.objectToEntries(object)) {\n            const fullname = F.stringToKebabCase(prefix ? `${prefix}-${name}` : name);\n\n            if (F.objectIsPlain(data) || data instanceof Array) {\n                for (const [name2, data2] of F.objectToEntries(F.objectToDataset(data, fullname))) {\n                    result[name2] = data2;\n                }\n                if (data instanceof Array) {\n                    result[fullname + '-length'] = data.length;\n                }\n            }\n            else {\n                result[fullname] = data;\n            }\n        }\n\n        return result;\n    },\n    /**\n     * @param {Object} object\n     * @returns {([any, any])[]}\n     */\n    objectToEntries(object) {\n        // special treats1\n        if (object instanceof NamedNodeMap) {\n            return Array.from(object).map(attr => [attr.name, attr.value]);\n        }\n        // special treats2\n        if (object instanceof CSSStyleDeclaration) {\n            return Array.from(object).map(name => [name, object[name]]);\n        }\n\n        if (!Object.hasOwn(object, 'entries') && typeof (object.entries) === 'function') {\n            return [...object.entries()];\n        }\n\n        if (!Object.hasOwn(object, 'keys') && typeof (object.keys) === 'function') {\n            return [...Array.from(object.keys()).flatMap(e => [[e, object[e]]])];\n        }\n\n        if (!Object.hasOwn(object, 'values') && typeof (object.values) === 'function') {\n            return [...Array.from(object.values()).entries()];\n        }\n\n        if (!Object.hasOwn(object, 'length') && 'length' in object) {\n            return [...Array.from(object).entries()];\n        }\n\n        if (Symbol.iterator in object) {\n            // Symbol.iterator will return key, value or entries, so can't auto detect\n            // e.g. Array is values https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/Symbol.iterator\n            // e.g. Map is [key, value] https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map/Symbol.iterator\n        }\n\n        return Object.entries(object);\n    },\n    /**\n     * @param {Object} object\n     * @param {String} separator\n     * @param {Function|String} [delimiter='=']\n     * @returns {String}\n     */\n    objectJoin(object, separator, delimiter = '=') {\n        const result = [];\n        for (let [key, value] of F.objectToEntries(object)) {\n            if (value === undefined) {\n                continue;\n            }\n\n            if (F.objectIsPlain(value)) {\n                value = F.objectJoin(value, separator, delimiter);\n            }\n\n            if (delimiter instanceof Function) {\n                const entry = delimiter(value, key);\n                if (entry) {\n                    result.push(entry);\n                }\n            }\n            else {\n                result.push(`${key}${delimiter}${value}`);\n            }\n        }\n        return result.join(separator);\n    },\n    objectWalkRecursive(object, callback) {\n        const isAsync = callback instanceof AsyncFunction;\n        const promises = [];\n        for (const [key, value] of F.objectToEntries(object)) {\n            const assign = (v) => object[key] = v;\n            const v = value instanceof Array || F.objectIsPlain(value)\n                ? F.objectWalkRecursive(value, callback)\n                : callback(value, key, object);\n\n            if (isAsync) {\n                promises.push(v.then(assign));\n            }\n            else {\n                assign(v);\n            }\n        }\n        if (isAsync) {\n            return Promise.all(promises).then((dummy) => object);\n        }\n        return object;\n    },\n    iterableToNodeList(iterable) {\n        // https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\n        // > Changing the Prototype of an object is, by the nature of how modern JavaScript engines optimize property accesses, currently a very slow operation in every browser and JavaScript engine.\n        // > In addition, the effects of altering inheritance are subtle and far-flung, and are not limited to the time spent in the Object.setPrototypeOf(...) statement, but may extend to any code that has access to any object whose Prototype has been altered.\n        // > You can read more in JavaScript engine fundamentals: optimizing prototypes.\n        // > Because this feature is a part of the language, it is still the burden on engine developers to implement that feature performantly (ideally).\n        // > Until engine developers address this issue, if you are concerned about performance, you should avoid setting the Prototype of an object.\n        // > Instead, create a new object with the desired Prototype using Object.create().\n        // https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n        // > Note that there are caveats to watch out for using create(), such as re-adding the constructor property to ensure proper semantics.\n        // > Although Object.create() is believed to have better performance than mutating the prototype with Object.setPrototypeOf(), the difference is in fact negligible if no instances have been created and property accesses haven't been optimized yet.\n        // return Object.setPrototypeOf([...iterable], NodeList.prototype);\n\n        if (iterable instanceof NodeList) {\n            Logger.instance.notice(`meaningless call to iterableToNodeList`);\n        }\n\n        let i = 0;\n        const properties = {};\n        for (const property of iterable) {\n            properties[i++] = {\n                value: property,\n                configurable: false,\n                writable: false,\n                enumerable: true,\n            };\n        }\n        properties.length = {\n            value: i,\n            configurable: false,\n            writable: false,\n            enumerable: false,\n        };\n        return Object.create(NodeList.prototype, properties);\n    },\n    arrayLikeToArrayRecursive(object, requireLength = true) {\n        for (const [key, value] of F.objectToEntries(object)) {\n            if (typeof (value) === 'object') {\n                object[key] = F.arrayLikeToArrayRecursive(value, requireLength);\n            }\n        }\n        if (F.objectIsArrayLike(object, requireLength)) {\n            if (requireLength || 'length' in object) {\n                object = Array.from(object);\n            }\n            else {\n                object = Object.values(object);\n            }\n        }\n        return object;\n    },\n    entriesToObject(entries, arrayable) {\n        const result = {};\n        for (const [names, value] of entries) {\n            names.reduce((target, subname, i) => target[subname] ??= i + 1 in names ? {} : value, result);\n        }\n\n        if (arrayable != null) {\n            return F.arrayLikeToArrayRecursive(result, arrayable);\n        }\n\n        return result;\n    },\n    functionIsNative(func) {\n        return Function.prototype.toString.call(func).slice(-15, -2) === '[native code]';\n    },\n    functionToCallbackable(func, callbackThis, ...callbackArgs) {\n        return function (...args) {\n            for (const [i, arg] of args.entries()) {\n                const callback = typeof (arg) === 'function' ? arg : null;\n                if (callback) {\n                    args[i] = callback.call(callbackThis, ...callbackArgs);\n                    if (args[i] === undefined) {\n                        return;\n                    }\n                }\n            }\n            return func.call(this, ...args);\n        };\n    },\n    async fetch(url, options = {}) {\n        if (options.timeout) {\n            const ctrl = new AbortController();\n            setTimeout(() => ctrl.abort(), options.timeout);\n\n            if (options.signal) {\n                options.signal = AbortSignal.any([options.signal, ctrl.signal]);\n            }\n            else {\n                options.signal = ctrl.signal;\n            }\n\n            delete options.timeout;\n        }\n        const response = await GT.fetch(url, options);\n        if (!(options.ok ?? false) && !response.ok) {\n            throw new Error(`${response.status}: ${response.statusText}`, {\n                cause: response,\n            });\n        }\n        return response;\n    },\n};\n\n/**\n * Configuration\n *\n * @private\n */\nexport class Configuration {\n    static TRUES = Object.freeze(['true', 'yes', '1']);\n    static instance;\n\n    #source;\n\n    constructor(source) {\n        Configuration.instance = this;\n\n        this.#source = source;\n    }\n\n    configure(defaults, force = false) {\n        for (const [name, value] of Object.entries(defaults)) {\n            if (force || this.#source[name] === undefined) {\n                this[name] = value;\n                continue;\n            }\n\n            if (typeof (value) === 'boolean') {\n                this[name] = Configuration.TRUES.includes(this.#source[name]);\n            }\n            else if (typeof (value) === 'number') {\n                this[name] = +this.#source[name];\n            }\n            else if (typeof (value) === 'string') {\n                this[name] = '' + this.#source[name];\n            }\n            else if (typeof (value) === 'function') {\n                this[name] = value(this.#source[name], name, this.#source);\n            }\n            else {\n                this[name] = JSON.parse(this.#source[name]);\n            }\n        }\n\n        return this;\n    }\n}\n\n/**\n * Logger\n *\n * @private\n */\nexport class Logger {\n    static instance;\n\n    static anyIsInstanceOf(value, prototype) {\n        // same\n        if (value === prototype) {\n            return true;\n        }\n        // nullable\n        if (Nullable === prototype && value == null) {\n            return true;\n        }\n        // Object means PlainObject\n        if (prototype === Object && F.objectIsPlain(value)) {\n            return true;\n        }\n        // standard type(except Object)\n        if (prototype !== Object && typeof (prototype) === 'function' && Object(value) instanceof prototype) {\n            return true;\n        }\n        // Boolean is loosey(allow all scalar)\n        if (prototype === Boolean && F.anyIsPrimitive(value)) {\n            return true;\n        }\n        // Number is loosey(allow numeric string)\n        if (prototype === Number && (Object(value) instanceof prototype || !isNaN(value))) {\n            return true;\n        }\n        // String is loosey(allow contains toString)\n        if (prototype === String && (Object(value) instanceof prototype || (value?.toString && value.toString !== Object.prototype.toString))) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static anyToDisplayName(value) {\n        if (value == null) {\n            return '' + value;\n        }\n        if (typeof (value) === 'function') {\n            return value.name ?? '' + value;\n        }\n        return '' + value;\n    }\n\n    constructor(debug, level, prefix, console) {\n        Logger.instance = this;\n\n        const noop = () => null;\n        const noop2 = () => noop;\n\n        this.error = level < 3 ? noop : console.error.bind(this, prefix);\n        this.warn = level < 4 ? noop : console.warn.bind(this, prefix);\n        this.info = level < 6 ? noop : console.info.bind(this, prefix);\n        this.debug = level < 7 ? noop : console.debug.bind(this, prefix);\n\n        // notice doesn't exist in native, so it is treated as info in debug, warn in no debug\n        this.notice = level < 5 ? noop : debug ? console.warn.bind(this, prefix) : console.info.bind(this, prefix);\n\n        this.time = level < 7 ? noop : label => console.time.call(this, `${prefix} ${label}`);\n        this.timeEnd = level < 7 ? noop : label => console.timeEnd.call(this, `${prefix} ${label}`);\n\n        this.assert = !debug ? noop2 : (actual, ...others) => {\n            if (actual instanceof Function) {\n                others.unshift('' + actual);\n                actual = actual();\n            }\n            return console.assert.bind(this, actual, prefix, ...others);\n        };\n        this.assertInstanceOf = !debug ? noop2 : (actual, ...expecteds) => {\n            for (const expected of expecteds) {\n                if (Logger.anyIsInstanceOf(actual, expected)) {\n                    return noop;\n                }\n            }\n            return console.assert.bind(this, false, prefix, `${Logger.anyToDisplayName(actual)} type must be ${expecteds.map(Logger.anyToDisplayName).join('|')}`);\n        };\n        this.assertElementsInstanceOf = !debug ? noop2 : (actual, ...expecteds) => {\n            for (const expected of expecteds) {\n                if (Object.values(actual).every(v => Logger.anyIsInstanceOf(v, expected))) {\n                    return noop;\n                }\n            }\n            return console.assert.bind(this, false, prefix, `${Logger.anyToDisplayName(actual)} type must be ${expecteds.map(Logger.anyToDisplayName).join('|')}`);\n        };\n        this.assertElementOf = !debug ? noop2 : (actual, ...expecteds) => {\n            for (const expected of expecteds) {\n                if (expected.includes(actual)) {\n                    return noop;\n                }\n            }\n            return console.assert.bind(this, false, prefix, `${Logger.anyToDisplayName(actual)} must be one of ${expecteds.map(Logger.anyToDisplayName).join('|')}`);\n        };\n        this.assertElementsOf = !debug ? noop2 : (actual, ...expecteds) => {\n            for (const expected of expecteds) {\n                if (Object.values(actual).every(v => expected.includes(v))) {\n                    return noop;\n                }\n            }\n            return console.assert.bind(this, false, prefix, `${Logger.anyToDisplayName(actual)} must be one of ${expecteds.map(Logger.anyToDisplayName).join('|')}`);\n        };\n    }\n}\n\n/**\n * Node Collection\n *\n * @private\n */\nexport class Collection extends null {\n    constructor(array, name, ancestor) {\n        ancestor ??= array;\n        const collection = Object.defineProperties(() => {}, {\n            name: {value: `Collection of ${name}`},\n            length: {value: array.length},\n        });\n        if (Configuration.instance.debug) {\n            // for devtools console\n            array.forEach((e, i) => collection[i] = e);\n        }\n\n        return new Proxy(collection, {\n            has(target, property) {\n                if (property in array) {\n                    return Reflect.has(array, property);\n                }\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                }\n\n                return array.some(e => Reflect.has(e, property));\n            },\n            get(target, property) {\n                if (property in array) {\n                    return Reflect.get(array, property);\n                }\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                }\n\n                // emulate toString\n                if (property === Symbol.toPrimitive) {\n                    return (hint) => array.map(e => F.anyIsPrimitive(e, Array) ? e : Reflect.get(e, property)?.call(e, hint)).join();\n                }\n\n                const mapped = array.map(e => F.anyIsPrimitive(e, Array) ? e : Reflect.get(e, property));\n                if (mapped.every(e => F.anyIsPrimitive(e, Object, Array))) {\n                    return mapped;\n                }\n                return new Collection(mapped, `${name}.${property}`, ancestor);\n            },\n            set(target, property, value) {\n                if (property in array) {\n                    return Reflect.set(array, property, value);\n                }\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                }\n\n                array.forEach((e, i) => F.functionToCallbackable(v => Reflect.set(e, property, v), e, ancestor?.[i], i)(value));\n                return true;\n            },\n            deleteProperty(target, property) {\n                if (property in array) {\n                    return Reflect.deleteProperty(array, property);\n                }\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                }\n\n                array.forEach(e => Reflect.deleteProperty(e, property));\n                return true;\n            },\n            apply(target, thisArg, argArray) {\n                if (array.length === 0) {\n                    Logger.instance.notice(`Tried to manipulate empty list, but mostly a bug. Please check selectors etc. if not intended`);\n                    return [];\n                }\n\n                // method mode\n                if (array.some(e => typeof (e) === 'function')) {\n                    let emptyFlag = false;\n                    let undefinedFlag = true;\n                    let primitiveFlag = true;\n                    let sameFlag = true;\n                    let promiseFlag = false;\n\n                    const results = array.map((e, i) => {\n                        if (typeof (e) === 'function') {\n                            if (e instanceof Proxy && argArray.length === 0) {\n                                emptyFlag = true;\n                                return;\n                            }\n\n                            if (!(e instanceof Proxy)) {\n                                e.i = i;\n                            }\n                            const result = Reflect.apply(e, thisArg?.[i], argArray);\n\n                            undefinedFlag = undefinedFlag && result === undefined;\n                            primitiveFlag = primitiveFlag && F.anyIsPrimitive(result, Object, Array);\n                            sameFlag = sameFlag && result === ancestor?.[i];\n                            promiseFlag = promiseFlag || result instanceof GT.Promise;\n                            return result;\n                        }\n                    });\n\n                    if (emptyFlag) {\n                        return array;\n                    }\n                    if (undefinedFlag) {\n                        return thisArg;\n                    }\n                    if (primitiveFlag) {\n                        return results;\n                    }\n                    if (sameFlag) {\n                        return ancestor;\n                    }\n                    if (promiseFlag) {\n                        return GT.Promise.all(results);\n                    }\n\n                    return new Collection(results, `${name}()`, ancestor);\n                }\n\n                // getter mode\n                if (argArray.length === 0) {\n                    return array;\n                }\n\n                // setter mode\n                if (argArray.length === 1) {\n                    // reserved\n                }\n\n                Logger.instance.error(`apply called, but not a single case was executed`, target);\n            },\n        });\n    }\n}\n\n/**\n * WeakMap\n *\n * - iterable and size\n * - utility(e.g. getOrSet)\n *\n * @private\n */\nexport class WeakMap {\n    constructor() {\n        this.map = new GT.Map();\n    }\n\n    has(key) {\n        return this.map.has(F.objectId(key));\n    }\n\n    get(key) {\n        return this.map.get(F.objectId(key))?.value;\n    }\n\n    getOrSet(key, provider) {\n        if (!this.has(key)) {\n            this.set(key, provider(key));\n        }\n        return this.get(key);\n    }\n\n    set(key, value) {\n        return this.map.set(F.objectId(key), {\n            ref: new WeakRef(key),\n            value: value,\n        });\n    }\n\n    reset(key, converter) {\n        const oldValue = this.get(key);\n        this.set(key, converter(oldValue));\n        return oldValue;\n    }\n\n    delete(key) {\n        return this.map.delete(F.objectId(key));\n    }\n\n    clear() {\n        return this.map.clear();\n    }\n\n    * entries() {\n        for (const obj of this.map.values()) {\n            const object = obj.ref.deref();\n            if (object === undefined) {\n                this.map.delete(object);\n                continue;\n            }\n            yield [object, obj.value];\n        }\n    }\n\n    get size() {\n        return [...this.entries()].length;\n    }\n}\n\n/**\n * ObjectStorage\n *\n * - multivalue map based on key-value object\n *\n * @private\n */\nexport class ObjectStorage {\n    constructor() {\n        this.weakmap = new WeakMap();\n    }\n\n    has(key, subkey) {\n        if (subkey == null) {\n            return this.weakmap.has(key);\n        }\n        const object = this.weakmap.get(key) ?? {};\n        return subkey in object;\n    }\n\n    get(key, subkey) {\n        if (subkey == null) {\n            return this.weakmap.get(key) ?? {};\n        }\n        const object = this.weakmap.get(key) ?? {};\n        return object?.[subkey];\n    }\n\n    getOrSet(key, subkey, provider) {\n        if (!this.has(key, subkey)) {\n            this.set(key, subkey, provider(key, subkey));\n        }\n        return this.get(key, subkey);\n    }\n\n    set(key, subkey, value) {\n        if (subkey == null) {\n            return this.weakmap.set(key, value);\n        }\n        const object = this.weakmap.get(key) ?? {};\n        object[subkey] = value;\n        return this.weakmap.set(key, object);\n    }\n\n    reset(key, subkey, converter) {\n        const oldValue = this.get(key, subkey);\n        this.set(key, subkey, converter(oldValue));\n        return oldValue;\n    }\n\n    delete(key, subkey) {\n        if (subkey == null) {\n            return this.weakmap.delete(key);\n        }\n        const object = this.weakmap.get(key) ?? {};\n        delete object[subkey];\n        if (!Object.keys(object).length) {\n            return this.weakmap.delete(key);\n        }\n        return false;\n    }\n\n    clear() {\n        return this.weakmap.clear();\n    }\n\n    * entries() {\n        yield* this.weakmap.entries();\n    }\n\n    get size() {\n        return this.weakmap.size;\n    }\n}\n\n/**\n * Promise\n *\n * - cancelable from external\n *\n * @private\n */\nexport class Promise extends GT.Promise {\n    static resolvedReasonSymbol = Symbol('resolved');\n\n    static #concurrency(asyncs, throwable, concurrency = null) {\n        Logger.instance.assertElementsInstanceOf(asyncs, Function, AsyncFunction)();\n\n        concurrency ??= window.navigator.hardwareConcurrency;\n\n        const keys = F.objectToEntries(asyncs).map(([k]) => k);\n\n        let index = 0;\n        const result = asyncs instanceof Array ? new Array(asyncs.length) : {};\n        const execute = async function (key) {\n            index++;\n            try {\n                result[key] = await asyncs[key](key);\n            }\n            catch (e) {\n                if (throwable) {\n                    throw e;\n                }\n                else {\n                    result[key] = e;\n                }\n            }\n\n            const next = keys[index];\n            if (next && asyncs[next] != null) {\n                return execute(next);\n            }\n        };\n\n        const promises = [];\n        for (const key of keys.slice(0, concurrency)) {\n            promises.push(execute(key));\n        }\n\n        return [promises, result];\n    }\n\n    static async concurrencyAll(asyncs, concurrency = null) {\n        const [promises, result] = Promise.#concurrency(asyncs, true, concurrency);\n        await Promise.all(promises);\n        return result;\n    }\n\n    static async concurrencyAllSettled(asyncs, concurrency = null) {\n        const [promises, result] = Promise.#concurrency(asyncs, false, concurrency);\n        await Promise.allSettled(promises);\n        return result;\n    }\n\n    constructor(callback) {\n        let resolve, reject;\n        super((resolve2, reject2) => {\n            resolve = resolve2;\n            reject = reject2;\n        });\n\n        const resolve2 = (v) => {\n            this.status = 'fulfilled';\n            resolve(v);\n        };\n        const reject2 = (v) => {\n            this.status = 'rejected';\n            reject(v);\n        };\n        const controller = new AbortController();\n        controller.signal.addEventListener('abort', (e) => {\n            if (e.target.reason === Promise.resolvedReasonSymbol) {\n                resolve2(this.resolved);\n            }\n            else {\n                reject2(e.target.reason);\n            }\n        });\n        callback(resolve2, reject2);\n\n        this.controller = controller;\n        this.resolved = null;\n        this.status = 'pending';\n    }\n\n    cancel(resolved) {\n        this.resolved = resolved;\n        this.controller.abort(Promise.resolvedReasonSymbol);\n    }\n\n    abort(reason) {\n        this.controller.abort(reason);\n    }\n}\n\n/**\n * FileReader\n *\n * - promisable\n *\n * @private\n */\nexport class FileReader extends GT.FileReader {\n    promise() {\n        return new Promise((resolve, reject) => {\n            this.addEventListener('load', e => resolve(e.target.result));\n            this.addEventListener('error', e => reject(e.target.error));\n        });\n    }\n}\n\n/**\n * Proxy\n *\n * - enable instanceof\n *\n * @private\n */\nexport class Proxy extends null {\n    static instances = new WeakSet();\n\n    static [Symbol.hasInstance](instance) {\n        return Proxy.instances.has(instance);\n    }\n\n    constructor(object, handlers) {\n        const instance = new GT.Proxy(object, handlers);\n        Proxy.instances.add(instance);\n        return instance;\n    }\n}\n\n/**\n * Timer\n *\n * - eventable\n * - resolvable/rejectable wait\n *\n * @private\n */\nexport class Timer extends EventTarget {\n    constructor() {\n        super();\n\n        this.id = null;\n        this.millisecond = null;\n    }\n\n    static wait(millisecond) {\n        const timer = new this();\n        return new Promise((resolve, reject) => {\n            timer.addEventListener('alarm', e => resolve(Date.now() - e.detail.time));\n            timer.start(millisecond);\n        }).finally(() => timer.stop());\n    }\n\n    start(millisecond, repeat = 1) {\n        Logger.instance.assert(this.id === null, `Timer is started, please use restart`)();\n\n        this.millisecond = millisecond;\n\n        const start = (tick, time) => {\n            this.id = setTimeout(() => {\n                this.dispatchEvent(new CustomEvent('alarm', {\n                    detail: {\n                        id: this.id,\n                        tick: tick,\n                        time: time,\n                    },\n                }));\n                if (tick < repeat) {\n                    start(tick + 1, Date.now());\n                }\n            }, this.millisecond);\n        };\n        start(1, Date.now());\n    }\n\n    restart(millisecond, repeat) {\n        this.stop();\n        return this.start(millisecond, repeat);\n    }\n\n    stop() {\n        clearTimeout(this.id);\n        this.id = null;\n    }\n}\n\n/**\n * Options\n *\n * - fixed key\n * - defaultable\n *\n * @private\n */\nexport class Options {\n    constructor(defaultOptions, handleNull = false, handleUndefined = false) {\n        this.options = defaultOptions;\n        this.handleNull = handleNull;\n        this.handleUndefined = handleUndefined;\n    }\n\n    extends(otherOptions) {\n        return new Options(Object.assign({}, this.options, otherOptions), this.handleNull, this.handleUndefined);\n    }\n\n    merge(otherOptions) {\n        const options = {};\n        for (const key of Object.keys(this.options)) {\n            if (this.handleNull && key in otherOptions && otherOptions[key] === null) {\n                options[key] = otherOptions[key];\n            }\n            else if (this.handleUndefined && key in otherOptions && otherOptions[key] === undefined) {\n                options[key] = otherOptions[key];\n            }\n            else {\n                options[key] = otherOptions[key] ?? this.options[key];\n            }\n        }\n        return options;\n    }\n}\n\n/**\n * Timer base Observer\n *\n * @private\n */\nexport class TimerObserver {\n    static observers = new GT.Set();\n    static timer = new Timer();\n\n    static defaultOptions = new Options({\n        interval: 1000,\n    });\n\n    constructor(callback, options = {}) {\n        this.options = TimerObserver.defaultOptions.merge(options);\n        this.observedNodes = new ObjectStorage();\n        this.callback = (e) => {\n            const entries = [];\n            for (const [target, value] of this.observedNodes.entries()) {\n                const news = this._data(target);\n                const diffs = this._compare(value.data, news);\n                this.observedNodes.set(target, 'data', news);\n                for (const diff of diffs) {\n                    entries.push(Object.assign(diff, {\n                        target: target,\n                        time: e.timeStamp,\n                    }));\n                }\n            }\n\n            for (const entry of entries) {\n                callback(entry, this.observedNodes.reset(entry.target, 'last', () => entry));\n            }\n        };\n\n        TimerObserver.timer.addEventListener('alarm', this.callback);\n    }\n\n    _data(target) {}\n\n    _compare(data1, data2) {}\n\n    observe(target) {\n        this.observedNodes.set(target, 'data', this._data(target));\n\n        TimerObserver.timer.restart(Math.min(TimerObserver.timer.millisecond ?? this.options.interval, this.options.interval), Infinity);\n        TimerObserver.observers.add(this);\n    }\n\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        if (this.observedNodes.size === 0) {\n            this.disconnect();\n        }\n    }\n\n    disconnect() {\n        this.observedNodes.clear();\n\n        TimerObserver.timer.removeEventListener('alarm', this.callback);\n        TimerObserver.observers.delete(this);\n        if (TimerObserver.observers.size === 0) {\n            TimerObserver.timer.stop();\n        }\n    }\n\n    entries() {\n        return this.observedNodes.entries();\n    }\n}\n\n/**\n * Cookie Observer\n *\n * @private\n */\nexport class CookieObserver extends TimerObserver {\n    static defaultOptions = TimerObserver.defaultOptions.extends({\n        cookieName: undefined,\n    });\n\n    static getOptionsKey(options) {\n        return JSON.stringify(this.defaultOptions.merge(options));\n    }\n\n    constructor(callback, options = {}) {\n        super(callback, options);\n\n        this.options = CookieObserver.defaultOptions.merge(options);\n    }\n\n    _data(target) {\n        return {\n            cookie: target.cookie,\n            cookies: Object.fromEntries(target.cookie.split('; ').map(v => v.split(/=(.*)/s).map(decodeURIComponent))),\n        };\n    }\n\n    _compare(data1, data2) {\n        if (data1.cookie === data2.cookie) {\n            return [];\n        }\n\n        const names = new Set();\n        Object.keys(data1.cookies).forEach(name => names.add(name));\n        Object.keys(data2.cookies).forEach(name => names.add(name));\n\n        const diffs = [];\n        for (const name of names.values()) {\n            if (this.options.cookieName == null || this.options.cookieName.includes(name)) {\n                const oldValue = data1.cookies[name];\n                const newValue = data2.cookies[name];\n                if (oldValue !== newValue) {\n                    diffs.push({\n                        cookieName: name,\n                        oldValue: oldValue,\n                        newValue: newValue,\n                    });\n                }\n            }\n        }\n        return diffs;\n    }\n}\n\n/**\n * MutationObserver\n *\n * - common options\n * - provide last entry\n * - unobservable\n * - iterable\n *\n * @private\n */\nexport class MutationObserver extends GT.MutationObserver {\n    static defaultOptions = new Options({\n        attributes: undefined,\n        attributeFilter: undefined,\n        attributeOldValue: undefined,\n        characterData: undefined,\n        characterDataOldValue: undefined,\n        childList: undefined,\n        subtree: undefined,\n    });\n\n    static getOptionsKey(options) {\n        return JSON.stringify(this.defaultOptions.merge(options));\n    }\n\n    constructor(callback, options = {}) {\n        super(function (entries) {\n            for (const entry of entries) {\n                callback(entry, this.observedNodes.reset(entry.target, () => entry));\n            }\n        });\n\n        this.options = MutationObserver.defaultOptions.merge(options);\n        this.observedNodes = new WeakMap();\n    }\n\n    observe(target) {\n        this.observedNodes.set(target, null);\n        return super.observe(target, this.options);\n    }\n\n    unobserve(target) {\n        super.disconnect();\n        for (const [node] of this.observedNodes.entries()) {\n            if (node === target) {\n                this.observedNodes.delete(node);\n            }\n            else {\n                this.observe(node, this.options);\n            }\n        }\n    }\n\n    disconnect() {\n        this.observedNodes.clear();\n        return super.disconnect();\n    }\n\n    entries() {\n        return this.observedNodes.entries();\n    }\n}\n\n/**\n * ResizeObserver\n *\n * - common options\n * - provide last entry\n * - iterable\n *\n * @private\n */\nexport class ResizeObserver extends GT.ResizeObserver {\n    static defaultOptions = new Options({\n        box: undefined,\n    });\n\n    static getOptionsKey(options) {\n        return JSON.stringify(this.defaultOptions.merge(options));\n    }\n\n    constructor(callback, options = {}) {\n        super(function (entries) {\n            for (const entry of entries) {\n                callback(entry, this.observedNodes.reset(entry.target, () => entry));\n            }\n        }, options);\n\n        this.options = ResizeObserver.defaultOptions.merge(options);\n        this.observedNodes = new WeakMap();\n    }\n\n    observe(target) {\n        this.observedNodes.set(target, null);\n        return super.observe(target, this.options);\n    }\n\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        return super.unobserve(target);\n    }\n\n    disconnect() {\n        this.observedNodes.clear();\n        return super.disconnect();\n    }\n\n    entries() {\n        return this.observedNodes.entries();\n    }\n}\n\n/**\n * IntersectionObserver\n *\n * - provide last entry\n * - iterable\n *\n * @private\n */\nexport class IntersectionObserver extends GT.IntersectionObserver {\n    static defaultOptions = new Options({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n    });\n\n    static getOptionsKey(options) {\n        // new, because need for normalizing property\n        const observer = new GT.IntersectionObserver(() => {}, options);\n        const keyObject = {\n            root: observer.root,\n            rootMargin: observer.rootMargin,\n            threshold: observer.thresholds,\n        };\n        keyObject.root = F.objectId(keyObject.root);\n        return JSON.stringify(keyObject);\n    }\n\n    constructor(callback, options = {}) {\n        options = IntersectionObserver.defaultOptions.merge(options);\n        super(function (entries) {\n            for (const entry of entries) {\n                // occasionally {intersectionRatio:0, isIntersecting:true}, What does that mean?\n                // probably truncation due to error, but perfect zero is not convenient and will be rectified\n                entry.realIntersectionRatio = entry.intersectionRatio;\n                if (entry.realIntersectionRatio === 0 && entry.isIntersecting) {\n                    entry.realIntersectionRatio = Number.EPSILON;\n                }\n                callback(entry, this.observedNodes.reset(entry.target, () => entry));\n            }\n        }, options);\n\n        this.options = options;\n        this.observedNodes = new WeakMap();\n    }\n\n    observe(target) {\n        this.observedNodes.set(target, null);\n        return super.observe(target);\n    }\n\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        return super.unobserve(target);\n    }\n\n    disconnect() {\n        this.observedNodes.clear();\n        return super.disconnect();\n    }\n\n    entries() {\n        return this.observedNodes.entries();\n    }\n}\n\n/**\n * CustomEvent\n *\n * @private\n */\nexport class CustomEvent extends GT.CustomEvent {\n    constructor(type, options) {\n        super(type, options);\n\n        this.$original = options.$original;\n    }\n}\n\n/**\n * DOMPoint with timestamp\n *\n * @private\n */\nexport class Vector2 extends DOMPoint {\n    constructor(x, y, t) {\n        super(x, y);\n        this.t = t;\n    }\n\n    during(target) {\n        return target.t - this.t;\n    }\n\n    deltaX(target) {\n        return target.x - this.x;\n    }\n\n    deltaY(target) {\n        return target.y - this.y;\n    }\n\n    distance(target) {\n        return Math.sqrt(this.deltaX(target) ** 2 + this.deltaY(target) ** 2);\n    }\n\n    degree(target) {\n        let degree = Math.atan2(this.deltaY(target), this.deltaX(target)) * (180 / Math.PI) + 90;\n        if (degree < 0) {\n            degree += 360;\n        }\n        return degree;\n    }\n\n    velocity(target) {\n        return this.distance(target) / this.during(target);\n    }\n}\n", "import {F, MutationObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        // attribute: https://developer.mozilla.org/docs/Web/API/MutationObserver\n        if (options.attributeName) {\n            options.attributeFilter = F.objectIsArrayLike(options.attributeName) ? options.attributeName : [options.attributeName];\n        }\n        options = Object.assign(options, {\n            attributes: true,\n            attributeOldValue: true,\n        });\n        this.eventId = MutationObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new MutationObserver((entry, last) => {\n            trigger(entry.target, {\n                subtype: entry.attributeName,\n                oldValue: entry.oldValue,\n                newValue: entry.target.getAttribute(entry.attributeName),\n            }, {\n                $original: {\n                    observer: this.observer,\n                    entry: entry,\n                },\n            });\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {MutationObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        const withAttributes = options.attributes;\n        options = Object.assign(options, {\n            childList: true,\n            attributes: false,\n        });\n        this.eventId = MutationObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new MutationObserver((entry, last) => {\n            for (const child of entry.addedNodes) {\n                if (!(child instanceof Element)) {\n                    continue;\n                }\n                trigger(entry.target, {\n                    subtype: 'insert',\n                    node: child,\n                }, {\n                    $original: {\n                        observer: this.observer,\n                        entry: entry,\n                    },\n                });\n                this.constructor.observers['attribute' + this.eventId]?.observe?.(child);\n            }\n            for (const child of entry.removedNodes) {\n                if (!(child instanceof Element)) {\n                    continue;\n                }\n                trigger(entry.target, {\n                    subtype: 'remove',\n                    node: child,\n                }, {\n                    $original: {\n                        observer: this.observer,\n                        entry: entry,\n                    },\n                });\n                this.constructor.observers['attribute' + this.eventId]?.unobserve?.(child);\n            }\n        }, options);\n        if (withAttributes) {\n            this.attributer = this.constructor.observers['attribute' + this.eventId] ??= new MutationObserver((entry, last) => {\n                trigger(entry.target.parentElement, {\n                    subtype: 'change',\n                    node: entry.target,\n                    name: entry.attributeName,\n                    oldValue: entry.oldValue,\n                    newValue: entry.target.getAttribute(entry.attributeName),\n                }, {\n                    $original: {\n                        observer: this.attributer,\n                        entry: entry,\n                    },\n                });\n            }, {\n                subtree: options.subtree,\n                childList: false,\n                attributes: true,\n                attributeOldValue: true,\n            });\n        }\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {CookieObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        this.eventId = CookieObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new CookieObserver((entry, last) => {\n            trigger(entry.target, {\n                subtype: entry.cookieName,\n                oldValue: entry.oldValue,\n                newValue: entry.newValue,\n            }, {\n                $original: {\n                    observer: this.observer,\n                    entry: entry,\n                },\n\n                bubbles: false,\n                cancelable: false,\n                composed: false,\n            });\n        }, options);\n        this.observer.observe(target);\n    }\n\n    destructor(target) {\n        this.observer.unobserve(target);\n    }\n}\n", "import {MutationObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        options = Object.assign(options, {\n            attributes: true,\n            attributeOldValue: true,\n            attributeFilter: ['disabled'],\n        });\n        this.eventId = MutationObserver.getOptionsKey(options);\n        this.selector = selector ? `${selector}, fieldset` : null;\n        this.observer = this.constructor.observers[selector + this.eventId] ??= new MutationObserver((entry, last) => {\n            const trigger2 = (target) => {\n                const valuer = function (target, withSelf) {\n                    for (let node = target; node != null; node = node.parentElement) {\n                        if (withSelf && node === entry.target) {\n                            if (entry.oldValue != null) {\n                                return true;\n                            }\n                        }\n                        else if (node.disabled) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n\n                const oldValue = valuer(target, true);\n                const newValue = valuer(target, false);\n                if (oldValue !== newValue) {\n                    trigger(target, {\n                        subtype: oldValue ? 'enable' : 'disable',\n                        oldValue: oldValue,\n                        newValue: newValue,\n                    }, {\n                        $original: {\n                            observer: this.observer,\n                            entry: entry,\n                        },\n                    });\n                }\n            };\n\n            if (!selector || entry.target.matches(selector)) {\n                trigger2(entry.target);\n            }\n            if (selector) {\n                entry.target.querySelectorAll(selector).forEach(node => trigger2(node));\n            }\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {Vector2} from '../API.js';\n\nexport default class {\n    constructor(target, selector, options, trigger) {\n        options.buttons ??= 1;\n        this.starting = false;\n        this.vectors = [];\n\n        this.down = (e) => {\n            e.target.setPointerCapture(e.pointerId);\n\n            this.starting = true;\n            this.vectors.splice(0);\n        };\n        this.move = (e) => {\n            if ((e.buttons & options.buttons) && this.starting) {\n                this.vectors.push(new Vector2(e.offsetX, e.offsetY, e.timeStamp));\n            }\n        };\n        this.up = (e) => {\n            e.target.releasePointerCapture(e.pointerId);\n\n            if (this.starting) {\n                this.starting = false;\n                if (this.vectors.length === 0) {\n                    return;\n                }\n\n                const threshold = options.threshold ?? 50;\n\n                const currentVenctor = new Vector2(e.offsetX, e.offsetY, e.timeStamp);\n                const startIndex = 1 + this.vectors.findLastIndex((v) => v.during(currentVenctor) > threshold);\n                const firstVector = this.vectors[startIndex];\n\n                const vectors = this.vectors.slice(startIndex);\n                const distance = vectors.slice(0, -1).reduce((acc, v, i) => acc + vectors[i].distance(vectors[i + 1]), 0);\n                if (distance === 0) {\n                    return;\n                }\n\n                this.vectors.splice(0);\n                trigger(e.target, {\n                    velocity: distance / firstVector.during(currentVenctor),\n                    degree: firstVector.degree(currentVenctor),\n                    during: firstVector.during(currentVenctor),\n                }, {$original: e, bubbles: true});\n            }\n        };\n        this.cancel = (e) => {\n            e.target.releasePointerCapture(e.pointerId);\n\n            this.starting = false;\n            this.vectors.splice(0);\n        };\n\n        target.addEventListener('pointerdown', this.down);\n        target.addEventListener('pointercancel', this.cancel);\n        target.addEventListener('pointermove', this.move);\n        target.addEventListener('pointerup', this.up);\n    }\n\n    destructor(target) {\n        target.removeEventListener('pointerdown', this.down);\n        target.removeEventListener('pointercancel', this.cancel);\n        target.removeEventListener('pointermove', this.move);\n        target.removeEventListener('pointerup', this.up);\n    }\n}\n", "import {IntersectionObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        // intersect: https://developer.mozilla.org/docs/Web/API/Intersection_Observer_API\n        options.first ??= true;\n        this.eventId = IntersectionObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new IntersectionObserver((entry, last) => {\n            if (options.first || last) {\n                const subtype = last ? !last.isIntersecting && entry.isIntersecting ? 'enter' : last.isIntersecting && !entry.isIntersecting ? 'leave' : 'hover' : null;\n                trigger(entry.target, {\n                    subtype: subtype, oldValue: last?.realIntersectionRatio ?? null, newValue: entry.realIntersectionRatio,\n                }, {\n                    $original: {\n                        observer: this.observer, entry: entry,\n                    },\n                });\n            }\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node), delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {F, ResizeObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        // https://developer.mozilla.org/docs/Web/API/Resize_Observer_API\n        options.first ??= true;\n        this.eventId = ResizeObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new ResizeObserver((entry, last) => {\n            if (options.first || last) {\n                const optionsBoxPascalCaseSize = F.stringToPascalCase(options.box ?? 'content-box', '-') + 'Size';\n                trigger(entry.target, {\n                    subtype: options.box ?? 'content-box',\n                    // in most use cases, what is needed is [0]\n                    oldValue: last == null ? null : last[optionsBoxPascalCaseSize][0],\n                    newValue: entry[optionsBoxPascalCaseSize][0],\n                }, {\n                    $original: {\n                        observer: this.observer,\n                        entry: entry,\n                    },\n                });\n            }\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import {Vector2} from '../API.js';\n\nexport default class {\n    constructor(target, selector, options, trigger) {\n        options.buttons ??= 1;\n        this.firstVector = null;\n\n        this.down = (e) => {\n            e.target.setPointerCapture(e.pointerId);\n\n            this.firstVector = new Vector2(e.offsetX, e.offsetY, e.timeStamp);\n        };\n        this.move = (e) => {\n            if ((e.buttons & options.buttons) && this.firstVector) {\n                const currentVector = new Vector2(e.offsetX, e.offsetY, e.timeStamp);\n                const distance = this.firstVector.distance(currentVector);\n                if (distance !== 0) {\n                    trigger(e.target, {\n                        distance: distance,\n                        deltaX: this.firstVector.deltaX(currentVector),\n                        deltaY: this.firstVector.deltaY(currentVector),\n                        velocity: this.firstVector.velocity(currentVector),\n                        degree: this.firstVector.degree(currentVector),\n                        during: this.firstVector.during(currentVector),\n                    }, {$original: e, bubbles: true});\n                }\n            }\n        };\n        this.up = (e) => {\n            e.target.releasePointerCapture(e.pointerId);\n\n            this.firstVector = null;\n        };\n        this.cancel = (e) => {\n            e.target.releasePointerCapture(e.pointerId);\n\n            this.firstVector = null;\n        };\n\n        target.addEventListener('pointerdown', this.down);\n        target.addEventListener('pointermove', this.move);\n        target.addEventListener('pointerup', this.up);\n        target.addEventListener('pointercancel', this.cancel);\n    }\n\n    destructor(target) {\n        target.removeEventListener('pointerdown', this.down);\n        target.removeEventListener('pointermove', this.move);\n        target.removeEventListener('pointerup', this.up);\n        target.removeEventListener('pointercancel', this.cancel);\n    }\n}\n", "import {ResizeObserver} from '../API.js';\n\nexport default class {\n    static observers = {};\n\n    constructor(target, selector, options, trigger) {\n        // https://developer.mozilla.org/docs/Web/API/Resize_Observer_API\n        options.first ??= true;\n        this.eventId = ResizeObserver.getOptionsKey(options);\n        this.observer = this.constructor.observers[this.eventId] ??= new ResizeObserver((entry, last) => {\n            // not triggered on style changed\n            // const visible = entry.target.checkVisibility(options);\n            const visible = entry.contentRect.x > 0 || entry.contentRect.y > 0 || entry.contentRect.width > 0 || entry.contentRect.height > 0;\n\n            if (options.first || last) {\n                if (visible !== last?.visible) {\n                    trigger(entry.target, {\n                        subtype: 'content-visibility', // if found better way, support also opacity, visibility, etc\n                        oldValue: last == null ? null : !visible,\n                        newValue: visible,\n                    }, {\n                        $original: {\n                            observer: this.observer,\n                            entry: entry,\n                        },\n                    });\n                }\n            }\n        }, options);\n        this.handlers = {\n            insert: (node) => this.observer.observe(node),\n            delete: (node) => this.observer.unobserve(node),\n        };\n    }\n}\n", "import * as API from './API.js';\n\n/**\n * KQuery\n *\n * @private\n */\nexport class KQuery {\n    constructor(meta) {\n        const kQuery = this;\n\n        // for development script browser plugin\n        this.API = API;\n\n        // config\n        this.config = new API.Configuration((function () {\n            if (API.F.objectIsPlain(meta) && !meta.url) {\n                return meta;\n            }\n\n            const result = {};\n            if (meta.url || meta.src) {\n                for (const [key, value] of new URL(meta.url || meta.src).searchParams.entries()) {\n                    if (key.startsWith('kQuery-')) {\n                        result[key.substring('kQuery-'.length)] = value;\n                    }\n                }\n            }\n            if (meta instanceof HTMLScriptElement) {\n                for (const [key, value] of API.F.objectToEntries(meta.dataset)) {\n                    if (key.startsWith('kquery')) {\n                        const key2 = key.substring('kquery'.length);\n                        result[key2.charAt(0).toLowerCase() + key2.substring(1)] = value;\n                    }\n                }\n            }\n            return result;\n        })());\n\n        // default configure\n        this.config.configure({\n            debug: false,\n            logLevel: 0,\n            global: 'kQuery',\n        });\n        globalThis[this.config.global] = this;\n\n        this.logger = new API.Logger(this.config.debug, this.config.logLevel, '[kQuery]', globalThis.console);\n    }\n\n    extends(plugin) {\n        const kQuery = this;\n        const pluginName = plugin.name ? plugin.name : plugin;\n\n        this.logger.time(pluginName);\n        for (const [types, properties] of Object.entries(plugin(kQuery))) {\n            const descriptors = Object.getOwnPropertyDescriptors(properties);\n\n            // rewrite setter to functional setter\n            for (const descriptor of Object.values(descriptors)) {\n                if (descriptor.set) {\n                    const original = descriptor.set;\n                    if (kQuery.config.resetNative || !API.F.functionIsNative(original)) {\n                        descriptor.set = function (...args) {\n                            return API.F.functionToCallbackable(original.bind(this), this, this)(...args);\n                        };\n                    }\n                }\n            }\n\n            for (const type of types.split(',')) {\n                // define list type\n                if (type.charAt(0) === '$') {\n                    for (const listtype of API[type]()) {\n                        for (const [name, descriptor] of Object.entries(descriptors)) {\n                            // length causes an infinite loop\n                            if (name === 'length') {\n                                continue;\n                            }\n                            Object.defineProperty(globalThis[listtype].prototype, name, {\n                                get() {\n                                    const mapped = API.F.objectToEntries(this).map(([i, e]) => e?.[name]);\n                                    if (mapped.length && mapped.every(e => API.F.anyIsPrimitive(e, Object, Array, FileList))) {\n                                        return mapped;\n                                    }\n                                    return new API.Collection(mapped, name, this);\n                                },\n                                set(value) {\n                                    return API.F.objectToEntries(this).forEach(([i, e]) => {\n                                        if (name in e) {\n                                            API.F.functionToCallbackable(v => e[name] = v, this, e, i)(value);\n                                        }\n                                    });\n                                },\n                                configurable: descriptor.configurable,\n                                enumerable: descriptor.enumerable,\n                            });\n                        }\n                    }\n                }\n                // define self type\n                else {\n                    Object.defineProperties(globalThis[type].prototype, descriptors);\n                }\n            }\n        }\n        this.logger.timeEnd(pluginName);\n    }\n}\n", "import {$FileList, $NodeList} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n *\n * this is core, must not depend on other plugins.\n */\nexport function autoproperties(kQuery) {\n    const ignoreProperties = {\n        EventTarget: [\"dispatchEvent\"],\n        Element: [\"computedStyleMap\", \"elementTiming\", \"getInnerHTML\", \"onbeforecopy\", \"onbeforecut\", \"onbeforepaste\", \"onfullscreenchange\", \"onfullscreenerror\", \"onsearch\", \"scrollIntoViewIfNeeded\"],\n        HTMLAnchorElement: [\"attributionSrc\", \"charset\", \"coords\", \"name\", \"rev\", \"shape\"],\n        HTMLAreaElement: [\"noHref\"],\n        HTMLBRElement: [\"clear\"],\n        HTMLBodyElement: [\"aLink\", \"background\", \"bgColor\", \"link\", \"onafterprint\", \"onbeforeprint\", \"onbeforeunload\", \"onblur\", \"onerror\", \"onfocus\", \"onhashchange\", \"onlanguagechange\", \"onload\", \"onmessage\", \"onmessageerror\", \"onoffline\", \"ononline\", \"onpagehide\", \"onpageshow\", \"onpopstate\", \"onrejectionhandled\", \"onresize\", \"onscroll\", \"onstorage\", \"onunhandledrejection\", \"onunload\", \"text\", \"vLink\"],\n        HTMLDListElement: [\"compact\"],\n        HTMLDirectoryElement: [\"*\"],\n        HTMLDivElement: [\"align\"],\n        HTMLElement: [\"attributeStyleMap\", \"editContext\", \"onabort\", \"onanimationend\", \"onanimationiteration\", \"onanimationstart\", \"onauxclick\", \"onbeforeinput\", \"onbeforematch\", \"onbeforetoggle\", \"onbeforexrselect\", \"onblur\", \"oncancel\", \"oncanplay\", \"oncanplaythrough\", \"onchange\", \"onclick\", \"onclose\", \"oncontentvisibilityautostatechange\", \"oncontextlost\", \"oncontextmenu\", \"oncontextrestored\", \"oncopy\", \"oncuechange\", \"oncut\", \"ondblclick\", \"ondrag\", \"ondragend\", \"ondragenter\", \"ondragleave\", \"ondragover\", \"ondragstart\", \"ondrop\", \"ondurationchange\", \"onemptied\", \"onended\", \"onerror\", \"onfocus\", \"onformdata\", \"ongotpointercapture\", \"oninput\", \"oninvalid\", \"onkeydown\", \"onkeypress\", \"onkeyup\", \"onload\", \"onloadeddata\", \"onloadedmetadata\", \"onloadstart\", \"onlostpointercapture\", \"onmousedown\", \"onmouseenter\", \"onmouseleave\", \"onmousemove\", \"onmouseout\", \"onmouseover\", \"onmouseup\", \"onmousewheel\", \"onpaste\", \"onpause\", \"onplay\", \"onplaying\", \"onpointercancel\", \"onpointerdown\", \"onpointerenter\", \"onpointerleave\", \"onpointermove\", \"onpointerout\", \"onpointerover\", \"onpointerrawupdate\", \"onpointerup\", \"onprogress\", \"onratechange\", \"onreset\", \"onresize\", \"onscroll\", \"onscrollend\", \"onscrollsnapchange\", \"onscrollsnapchanging\", \"onsecuritypolicyviolation\", \"onseeked\", \"onseeking\", \"onselect\", \"onselectionchange\", \"onselectstart\", \"onslotchange\", \"onstalled\", \"onsubmit\", \"onsuspend\", \"ontimeupdate\", \"ontoggle\", \"ontransitioncancel\", \"ontransitionend\", \"ontransitionrun\", \"ontransitionstart\", \"onvolumechange\", \"onwaiting\", \"onwheel\", \"virtualKeyboardPolicy\", \"writingSuggestions\"],\n        HTMLEmbedElement: [\"align\", \"name\"],\n        HTMLFencedFrameElement: [\"*\"],\n        HTMLFontElement: [\"color\", \"face\", \"size\"],\n        HTMLFormElement: [\"requestAutocomplete\"],\n        HTMLFrameElement: [\"*\"],\n        HTMLFrameSetElement: [\"cols\", \"onafterprint\", \"onbeforeprint\", \"onbeforeunload\", \"onblur\", \"onerror\", \"onfocus\", \"onhashchange\", \"onlanguagechange\", \"onload\", \"onmessage\", \"onmessageerror\", \"onoffline\", \"ononline\", \"onpagehide\", \"onpageshow\", \"onpopstate\", \"onrejectionhandled\", \"onresize\", \"onscroll\", \"onstorage\", \"onunhandledrejection\", \"onunload\", \"rows\"],\n        HTMLHRElement: [\"align\", \"color\", \"noShade\", \"size\", \"width\"],\n        HTMLHeadingElement: [\"align\"],\n        HTMLHtmlElement: [\"version\"],\n        HTMLIFrameElement: [\"adAuctionHeaders\", \"align\", \"allowPaymentRequest\", \"credentialless\", \"csp\", \"featurePolicy\", \"frameBorder\", \"longDesc\", \"marginHeight\", \"marginWidth\", \"privateToken\", \"sharedStorageWritable\", \"scrolling\"],\n        HTMLImageElement: [\"align\", \"attributionSrc\", \"border\", \"fetchPriority\", \"hspace\", \"longDesc\", \"name\", \"sharedStorageWritable\", \"vspace\"],\n        HTMLInputElement: [\"align\", \"incremental\", \"useMap\", \"webkitdirectory\"],\n        HTMLLIElement: [\"type\"],\n        HTMLLegendElement: [\"align\"],\n        HTMLLinkElement: [\"charset\", \"blocking\", \"fetchPriority\", \"rev\", \"target\"],\n        HTMLMarqueeElement: [\"*\"],\n        HTMLMediaElement: [\"captureStream\", \"controller\", \"controlsList\", \"disableRemotePlayback\", \"mediaGroup\", \"onencrypted\", \"onwaitingforkey\", \"remote\", \"setSinkId\", \"sinkId\"],\n        HTMLMenuElement: [\"compact\"],\n        HTMLMetaElement: [\"scheme\"],\n        HTMLOListElement: [\"compact\"],\n        HTMLObjectElement: [\"align\", \"archive\", \"border\", \"code\", \"codeBase\", \"codeType\", \"declare\", \"hspace\", \"standby\", \"vspace\"],\n        HTMLParagraphElement: [\"align\"],\n        HTMLParamElement: [\"name\", \"type\", \"value\", \"valueType\"],\n        HTMLPreElement: [\"width\"],\n        HTMLScriptElement: [\"attributionSrc\", \"blocking\", \"charset\", \"event\", \"fetchPriority\"],\n        HTMLStyleElement: [\"blocking\", \"type\"],\n        HTMLTableCaptionElement: [\"align\"],\n        HTMLTableCellElement: [\"align\", \"axis\", \"bgColor\", \"ch\", \"chOff\", \"height\", \"noWrap\", \"vAlign\", \"width\"],\n        HTMLTableColElement: [\"align\", \"ch\", \"chOff\", \"span\", \"vAlign\", \"width\"],\n        HTMLTableElement: [\"align\", \"bgColor\", \"border\", \"cellPadding\", \"cellSpacing\", \"frame\", \"rules\", \"summary\", \"width\"],\n        HTMLTableRowElement: [\"align\", \"bgColor\", \"ch\", \"chOff\", \"vAlign\"],\n        HTMLTableSectionElement: [\"align\", \"ch\", \"chOff\", \"vAlign\"],\n        HTMLUListElement: [\"compact\", \"type\"],\n        HTMLVideoElement: [\"cancelVideoFrameCallback\", \"onenterpictureinpicture\", \"onleavepictureinpicture\", \"playsInline\", \"requestPictureInPicture\", \"requestVideoFrameCallback\"],\n    };\n\n    const targetProperties = {\n        // https://developer.mozilla.org/docs/Web/API/Blob\n        Blob: [\"arrayBuffer\", \"size\", \"slice\", \"stream\", \"text\", \"type\"],\n        // https://developer.mozilla.org/docs/Web/API/Element\n        Element: [\"after\", \"animate\", \"append\", \"ariaAtomic\", \"ariaAutoComplete\", \"ariaBrailleLabel\", \"ariaBrailleRoleDescription\", \"ariaBusy\", \"ariaChecked\", \"ariaColCount\", \"ariaColIndex\", \"ariaColIndexText\", \"ariaColSpan\", \"ariaCurrent\", \"ariaDescription\", \"ariaDisabled\", \"ariaExpanded\", \"ariaHasPopup\", \"ariaHidden\", \"ariaInvalid\", \"ariaKeyShortcuts\", \"ariaLabel\", \"ariaLevel\", \"ariaLive\", \"ariaModal\", \"ariaMultiLine\", \"ariaMultiSelectable\", \"ariaOrientation\", \"ariaPlaceholder\", \"ariaPosInSet\", \"ariaPressed\", \"ariaReadOnly\", \"ariaRelevant\", \"ariaRequired\", \"ariaRoleDescription\", \"ariaRowCount\", \"ariaRowIndex\", \"ariaRowIndexText\", \"ariaRowSpan\", \"ariaSelected\", \"ariaSetSize\", \"ariaSort\", \"ariaValueMax\", \"ariaValueMin\", \"ariaValueNow\", \"ariaValueText\", \"assignedSlot\", \"attachShadow\", \"attributes\", \"before\", \"checkVisibility\", \"childElementCount\", \"children\", \"classList\", \"className\", \"clientHeight\", \"clientLeft\", \"clientTop\", \"clientWidth\", \"closest\", \"currentCSSZoom\", \"firstElementChild\", \"getAnimations\", \"getAttribute\", \"getAttributeNS\", \"getAttributeNames\", \"getAttributeNode\", \"getAttributeNodeNS\", \"getBoundingClientRect\", \"getClientRects\", \"getElementsByClassName\", \"getElementsByTagName\", \"getElementsByTagNameNS\", \"getHTML\", \"hasAttribute\", \"hasAttributeNS\", \"hasAttributes\", \"hasPointerCapture\", \"id\", \"innerHTML\", \"insertAdjacentElement\", \"insertAdjacentHTML\", \"insertAdjacentText\", \"lastElementChild\", \"localName\", \"matches\", \"moveBefore\", \"namespaceURI\", \"nextElementSibling\", \"outerHTML\", \"part\", \"prefix\", \"prepend\", \"previousElementSibling\", \"querySelector\", \"querySelectorAll\", \"releasePointerCapture\", \"remove\", \"removeAttribute\", \"removeAttributeNS\", \"removeAttributeNode\", \"replaceChildren\", \"replaceWith\", \"requestFullscreen\", \"requestPointerLock\", \"role\", \"scroll\", \"scrollBy\", \"scrollHeight\", \"scrollIntoView\", \"scrollLeft\", \"scrollTo\", \"scrollTop\", \"scrollWidth\", \"setAttribute\", \"setAttributeNS\", \"setAttributeNode\", \"setAttributeNodeNS\", \"setHTMLUnsafe\", \"setPointerCapture\", \"shadowRoot\", \"slot\", \"tagName\", \"toggleAttribute\"],\n        // https://developer.mozilla.org/docs/Web/API/EventTarget\n        EventTarget: [\"addEventListener\", \"removeEventListener\"],\n        // https://developer.mozilla.org/docs/Web/API/File\n        File: [\"lastModified\", \"lastModifiedDate\", \"name\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement\n        HTMLAnchorElement: [\"download\", \"hash\", \"host\", \"hostname\", \"href\", \"hreflang\", \"origin\", \"password\", \"pathname\", \"ping\", \"port\", \"protocol\", \"referrerPolicy\", \"rel\", \"relList\", \"search\", \"target\", \"text\", \"toString\", \"type\", \"username\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLAreaElement\n        HTMLAreaElement: [\"alt\", \"coords\", \"download\", \"hash\", \"host\", \"hostname\", \"href\", \"origin\", \"password\", \"pathname\", \"ping\", \"port\", \"protocol\", \"referrerPolicy\", \"rel\", \"relList\", \"search\", \"shape\", \"target\", \"toString\", \"username\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLBaseElement\n        HTMLBaseElement: [\"href\", \"target\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLButtonElement\n        HTMLButtonElement: [\"checkValidity\", \"disabled\", \"form\", \"formAction\", \"formEnctype\", \"formMethod\", \"formNoValidate\", \"formTarget\", \"labels\", \"name\", \"popoverTargetAction\", \"popoverTargetElement\", \"reportValidity\", \"setCustomValidity\", \"type\", \"validationMessage\", \"validity\", \"value\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement\n        HTMLCanvasElement: [\"captureStream\", \"getContext\", \"height\", \"toBlob\", \"toDataURL\", \"transferControlToOffscreen\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLDataElement\n        HTMLDataElement: [\"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLDataListElement\n        HTMLDataListElement: [\"options\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement\n        HTMLDetailsElement: [\"name\", \"open\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLDialogElement\n        HTMLDialogElement: [\"close\", \"closedBy\", \"open\", \"requestClose\", \"returnValue\", \"show\", \"showModal\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLElement\n        HTMLElement: [\"accessKey\", \"attachInternals\", \"autocapitalize\", \"autofocus\", \"blur\", \"click\", \"contentEditable\", \"dataset\", \"dir\", \"draggable\", \"enterKeyHint\", \"focus\", \"hidden\", \"hidePopover\", \"inert\", \"innerText\", \"inputMode\", \"isContentEditable\", \"lang\", \"nonce\", \"offsetHeight\", \"offsetLeft\", \"offsetParent\", \"offsetTop\", \"offsetWidth\", \"outerText\", \"popover\", \"showPopover\", \"spellcheck\", \"style\", \"tabIndex\", \"title\", \"togglePopover\", \"translate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement\n        HTMLEmbedElement: [\"getSVGDocument\", \"height\", \"src\", \"type\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement\n        HTMLFieldSetElement: [\"checkValidity\", \"disabled\", \"elements\", \"form\", \"name\", \"reportValidity\", \"setCustomValidity\", \"type\", \"validationMessage\", \"validity\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLFormElement\n        HTMLFormElement: [\"acceptCharset\", \"action\", \"autocomplete\", \"checkValidity\", \"elements\", \"encoding\", \"enctype\", \"length\", \"method\", \"name\", \"noValidate\", \"rel\", \"relList\", \"reportValidity\", \"requestSubmit\", \"reset\", \"submit\", \"target\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement\n        HTMLIFrameElement: [\"allow\", \"allowFullscreen\", \"contentDocument\", \"contentWindow\", \"getSVGDocument\", \"height\", \"loading\", \"name\", \"referrerPolicy\", \"sandbox\", \"src\", \"srcdoc\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLImageElement\n        HTMLImageElement: [\"alt\", \"complete\", \"crossOrigin\", \"currentSrc\", \"decode\", \"decoding\", \"height\", \"isMap\", \"loading\", \"lowsrc\", \"naturalHeight\", \"naturalWidth\", \"referrerPolicy\", \"sizes\", \"src\", \"srcset\", \"useMap\", \"width\", \"x\", \"y\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLInputElement\n        HTMLInputElement: [\"accept\", \"alt\", \"autocomplete\", \"checkValidity\", \"checked\", \"defaultChecked\", \"defaultValue\", \"dirName\", \"disabled\", \"files\", \"form\", \"formAction\", \"formEnctype\", \"formMethod\", \"formNoValidate\", \"formTarget\", \"height\", \"indeterminate\", \"labels\", \"list\", \"max\", \"maxLength\", \"min\", \"minLength\", \"multiple\", \"name\", \"pattern\", \"placeholder\", \"popoverTargetAction\", \"popoverTargetElement\", \"readOnly\", \"reportValidity\", \"required\", \"select\", \"selectionDirection\", \"selectionEnd\", \"selectionStart\", \"setCustomValidity\", \"setRangeText\", \"setSelectionRange\", \"showPicker\", \"size\", \"src\", \"step\", \"stepDown\", \"stepUp\", \"type\", \"validationMessage\", \"validity\", \"value\", \"valueAsDate\", \"valueAsNumber\", \"width\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLLIElement\n        HTMLLIElement: [\"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLLabelElement\n        HTMLLabelElement: [\"control\", \"form\", \"htmlFor\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLLegendElement\n        HTMLLegendElement: [\"form\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLLinkElement\n        HTMLLinkElement: [\"as\", \"crossOrigin\", \"disabled\", \"href\", \"hreflang\", \"imageSizes\", \"imageSrcset\", \"integrity\", \"media\", \"referrerPolicy\", \"rel\", \"relList\", \"sheet\", \"sizes\", \"type\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLMapElement\n        HTMLMapElement: [\"areas\", \"name\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLMediaElement\n        HTMLMediaElement: [\"addTextTrack\", \"autoplay\", \"buffered\", \"canPlayType\", \"controls\", \"crossOrigin\", \"currentSrc\", \"currentTime\", \"defaultMuted\", \"defaultPlaybackRate\", \"duration\", \"ended\", \"error\", \"load\", \"loop\", \"muted\", \"networkState\", \"pause\", \"paused\", \"play\", \"playbackRate\", \"played\", \"preload\", \"preservesPitch\", \"readyState\", \"seekable\", \"seeking\", \"src\", \"srcObject\", \"textTracks\", \"volume\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLMetaElement\n        HTMLMetaElement: [\"content\", \"httpEquiv\", \"media\", \"name\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLMeterElement\n        HTMLMeterElement: [\"high\", \"labels\", \"low\", \"max\", \"min\", \"optimum\", \"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLModElement\n        HTMLModElement: [\"cite\", \"dateTime\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLOListElement\n        HTMLOListElement: [\"reversed\", \"start\", \"type\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLObjectElement\n        HTMLObjectElement: [\"checkValidity\", \"contentDocument\", \"contentWindow\", \"data\", \"form\", \"getSVGDocument\", \"height\", \"name\", \"reportValidity\", \"setCustomValidity\", \"type\", \"useMap\", \"validationMessage\", \"validity\", \"width\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLOptGroupElement\n        HTMLOptGroupElement: [\"disabled\", \"label\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLOptionElement\n        HTMLOptionElement: [\"defaultSelected\", \"disabled\", \"form\", \"index\", \"label\", \"selected\", \"text\", \"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLOutputElement\n        HTMLOutputElement: [\"checkValidity\", \"defaultValue\", \"form\", \"htmlFor\", \"labels\", \"name\", \"reportValidity\", \"setCustomValidity\", \"type\", \"validationMessage\", \"validity\", \"value\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLProgressElement\n        HTMLProgressElement: [\"labels\", \"max\", \"position\", \"value\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLQuoteElement\n        HTMLQuoteElement: [\"cite\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLScriptElement\n        HTMLScriptElement: [\"async\", \"crossOrigin\", \"defer\", \"htmlFor\", \"integrity\", \"noModule\", \"referrerPolicy\", \"src\", \"text\", \"type\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLSelectElement\n        HTMLSelectElement: [\"add\", \"autocomplete\", \"checkValidity\", \"disabled\", \"form\", \"item\", \"labels\", \"length\", \"multiple\", \"name\", \"namedItem\", \"options\", \"remove\", \"reportValidity\", \"required\", \"selectedIndex\", \"selectedOptions\", \"setCustomValidity\", \"showPicker\", \"size\", \"type\", \"validationMessage\", \"validity\", \"value\", \"willValidate\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLSlotElement\n        HTMLSlotElement: [\"assign\", \"assignedElements\", \"assignedNodes\", \"name\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLSourceElement\n        HTMLSourceElement: [\"height\", \"media\", \"sizes\", \"src\", \"srcset\", \"type\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLStyleElement\n        HTMLStyleElement: [\"disabled\", \"media\", \"sheet\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement\n        HTMLTableCellElement: [\"abbr\", \"cellIndex\", \"colSpan\", \"headers\", \"rowSpan\", \"scope\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTableElement\n        HTMLTableElement: [\"caption\", \"createCaption\", \"createTBody\", \"createTFoot\", \"createTHead\", \"deleteCaption\", \"deleteRow\", \"deleteTFoot\", \"deleteTHead\", \"insertRow\", \"rows\", \"tBodies\", \"tFoot\", \"tHead\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement\n        HTMLTableRowElement: [\"cells\", \"deleteCell\", \"insertCell\", \"rowIndex\", \"sectionRowIndex\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement\n        HTMLTableSectionElement: [\"deleteRow\", \"insertRow\", \"rows\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement\n        HTMLTemplateElement: [\"content\", \"shadowRootClonable\", \"shadowRootDelegatesFocus\", \"shadowRootMode\", \"shadowRootSerializable\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement\n        HTMLTextAreaElement: [\"autocomplete\", \"checkValidity\", \"cols\", \"defaultValue\", \"dirName\", \"disabled\", \"form\", \"labels\", \"maxLength\", \"minLength\", \"name\", \"placeholder\", \"readOnly\", \"reportValidity\", \"required\", \"rows\", \"select\", \"selectionDirection\", \"selectionEnd\", \"selectionStart\", \"setCustomValidity\", \"setRangeText\", \"setSelectionRange\", \"textLength\", \"type\", \"validationMessage\", \"validity\", \"value\", \"willValidate\", \"wrap\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTimeElement\n        HTMLTimeElement: [\"dateTime\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTitleElement\n        HTMLTitleElement: [\"text\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLTrackElement\n        HTMLTrackElement: [\"default\", \"kind\", \"label\", \"readyState\", \"src\", \"srclang\", \"track\"],\n        // https://developer.mozilla.org/docs/Web/API/HTMLVideoElement\n        HTMLVideoElement: [\"disablePictureInPicture\", \"getVideoPlaybackQuality\", \"height\", \"poster\", \"videoHeight\", \"videoWidth\", \"width\"],\n        // https://developer.mozilla.org/docs/Web/API/Node\n        Node: [\"appendChild\", \"baseURI\", \"childNodes\", \"cloneNode\", \"compareDocumentPosition\", \"contains\", \"firstChild\", \"getRootNode\", \"hasChildNodes\", \"insertBefore\", \"isConnected\", \"isDefaultNamespace\", \"isEqualNode\", \"isSameNode\", \"lastChild\", \"lookupNamespaceURI\", \"lookupPrefix\", \"nextSibling\", \"nodeName\", \"nodeType\", \"nodeValue\", \"normalize\", \"ownerDocument\", \"parentElement\", \"parentNode\", \"previousSibling\", \"removeChild\", \"replaceChild\", \"textContent\"],\n    };\n    const typeProperties = !kQuery.config.debug ? targetProperties : (function () {\n        const result = Object.create(null);\n\n        // collect\n        for (const name of Object.keys(Object.getOwnPropertyDescriptors(globalThis))) {\n            if (!name.match(/^((EventTarget)|(Blob|File)|(Node|Element)|(HTML.*Element))$/)) {\n                continue;\n            }\n\n            const prototype = globalThis[name];\n            for (const property in prototype.prototype) {\n                // ignore CONSTANT\n                if (property.toUpperCase() === property) {\n                    continue;\n                }\n                // not standard\n                if (property.match(/^(webkit|moz)[A-Z]/) || property.startsWith('onwebkit')) {\n                    continue;\n                }\n                // only ownself\n                if (!Object.prototype.hasOwnProperty.call(prototype.prototype, property)) {\n                    continue;\n                }\n                // deprecated or on*event\n                if (name in ignoreProperties && (ignoreProperties[name].includes(property) || ignoreProperties[name].includes('*'))) {\n                    continue;\n                }\n\n                result[prototype.name] = (result[prototype.name] ?? new Set()).add(property);\n            }\n        }\n\n        // unique/sort\n        const result2 = {};\n        for (const name of Object.keys(result).toSorted()) {\n            result2[name] = [...result[name]].toSorted();\n        }\n\n        // export output\n        kQuery.logger.debug(Object.keys(result2).map(name => `// https://developer.mozilla.org/docs/Web/API/${name}\\n${name}: ${JSON.stringify(result2[name])},`).join('\\n'));\n\n        return result2;\n    })();\n\n    kQuery.config.configure({\n        appendNative: true,\n        resetNative: true,\n    });\n\n    // specials\n    const defineProperties = kQuery.config.appendNative ? {\n        [[Node.name]]: /** @lends Node.prototype */{\n            /**\n             * to HTML for debug or utility\n             *\n             * @return {String}\n             */\n            [Symbol.toPrimitive]() {\n                return this.outerHTML ?? this.nodeValue ?? null;\n            },\n        },\n        [[NodeList.name]]: /** @lends NodeList.prototype */{\n            /**\n             * to HTML for debug or utility\n             *\n             * @return {String}\n             */\n            [Symbol.toPrimitive]() {\n                return [...this].join('');\n            },\n            /**\n             * same as dispatchEvent for NodeList\n             *\n             * original dispatchEvent is fired only once sometimes. probably because the EventObject is consumed\n             *\n             * @param {Event} event\n             * @return {Boolean[]}\n             */\n            dispatchEvent(event) {\n                const result = [];\n                for (const node of this) {\n                    // clone Event\n                    const newevent = new event.constructor(event.type, event);\n\n                    result.push(node.dispatchEvent(newevent));\n                }\n                return result;\n            },\n        },\n        [[RadioNodeList.name]]: /** @lends RadioNodeList.prototype */{\n            /**\n             * get name of RadioNodeList\n             *\n             * @descriptor get\n             *\n             * @return {?String}\n             */\n            get name() {\n                return this[0]?.name;\n            },\n            /**\n             * set name of RadioNodeList\n             *\n             * @descriptor set\n             *\n             * @param {String} name\n             */\n            set name(name) {\n                // RadioNodeList is live collection, remove when renamed\n                [...this].forEach(function (e) {\n                    e.name = name;\n                });\n            },\n        },\n    } : {};\n\n    const defineProperty = function (type, property, descriptor) {\n        defineProperties[type] ??= {};\n        Object.defineProperty(defineProperties[type], property, descriptor);\n    };\n\n    for (const [type, properties] of Object.entries(typeProperties)) {\n        if (type in globalThis) {\n            const prototype = globalThis[type].prototype;\n            for (const property of properties) {\n                const descriptor = Object.getOwnPropertyDescriptor(prototype, property);\n                if (descriptor) {\n                    defineProperty(type, property, descriptor);\n\n                    if (globalThis[type] === globalThis['EventTarget'] || prototype instanceof EventTarget) {\n                        defineProperty($NodeList.name, property, descriptor);\n                    }\n                    if (globalThis[type] === globalThis['Node'] || prototype instanceof Node) {\n                        defineProperty($NodeList.name, property, descriptor);\n                    }\n                    if (globalThis[type] === globalThis['Blob'] || prototype instanceof Blob) {\n                        defineProperty($FileList.name, property, descriptor);\n                    }\n                }\n            }\n        }\n    }\n\n    return defineProperties;\n}\n", "import {$NodeList, CustomEvent, F, MutationObserver, Nullable, ObjectStorage, Timer, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n *\n * this is core, must not depend on other plugins.\n */\nexport function events(kQuery) {\n    kQuery.config.configure({\n        customEventPrefix: '$',\n    });\n\n    Object.assign(kQuery, /** @lends KQuery.prototype */{\n        wellknownEvents: {\n            click: PointerEvent,\n        },\n        customEvents: {},\n    });\n\n    const eventDataMap = new WeakMap();\n\n    const eachType = function (allowEmpty, type) {\n        if (type == null) {\n            if (!allowEmpty) {\n                throw new Error(`Empty EventType is only allowed this context`);\n            }\n            return [[null, []]];\n        }\n\n        return ('' + type).trim()\n            .split(/\\s+/)\n            .map(e => e.trim().split('.'))\n            .map(([t, ...n]) => {\n                if (!allowEmpty && !t.length) {\n                    throw new Error(`Empty EventType is only allowed this context`);\n                }\n                return [t, n.filter(e => e.length)];\n            });\n    };\n\n    const internalEventName = function (type) {\n        if (type in kQuery.customEvents) {\n            type = kQuery.config.customEventPrefix + type;\n        }\n        return type;\n    };\n\n    const emulateDelegationWatcher = new class {\n        constructor() {\n            const querySelectorThisAndAll = function (nodelist, selector) {\n                const result = new Set();\n                for (const node of nodelist) {\n                    if (node instanceof Element) {\n                        if (node.matches(selector)) {\n                            result.add(node);\n                        }\n                        for (const child of node.querySelectorAll(selector)) {\n                            result.add(child);\n                        }\n                    }\n                }\n                return result;\n            };\n            this.nodeSelectorCallback = new WeakMap();\n            this.observer = new MutationObserver((entry) => {\n                for (const [node, selectorCallbacks] of this.nodeSelectorCallback.entries()) {\n                    for (const {selector, callbacks} of selectorCallbacks) {\n                        for (const child of querySelectorThisAndAll(entry.addedNodes, selector)) {\n                            kQuery.logger.debug(`Insert node to delegation emulation of `, node);\n                            callbacks.insert(child);\n                        }\n                        for (const child of querySelectorThisAndAll(entry.removedNodes, selector)) {\n                            kQuery.logger.debug(`Delete node to delegation emulation of `, node);\n                            callbacks.delete(child);\n                        }\n                    }\n                }\n            }, {\n                attributes: false,\n                attributeOldValue: false,\n                characterData: false,\n                characterDataOldValue: false,\n                childList: true,\n                subtree: true,\n            });\n        }\n\n        watch(node, selector, callbacks) {\n            if (selector == null) {\n                callbacks.insert(node);\n            }\n            else {\n                this.nodeSelectorCallback.getOrSet(node, () => []).push({selector, callbacks});\n\n                // use querySelectorAll because parent node is not watched\n                for (const child of node.querySelectorAll(selector)) {\n                    kQuery.logger.debug(`Initial node to delegation emulation of `, child);\n                    callbacks.insert(child);\n                }\n\n                return this.observer.observe(node);\n            }\n        }\n\n        unwatch(node, selector, callbacks) {\n            if (selector == null) {\n                callbacks.delete(node);\n            }\n            else {\n                this.nodeSelectorCallback.reset(node, (selectorCallbacks) => selectorCallbacks.filter(selectorCallback => {\n                    if (selectorCallback.selector === selector && selectorCallback.callbacks === callbacks) {\n                        kQuery.logger.debug(`Unwatch node to delegation emulation of `, node);\n                        return false;\n                    }\n                    return true;\n                }));\n            }\n        }\n    };\n\n    return {\n        [[EventTarget.name, $NodeList.name]]: /** @lends EventTarget.prototype */{\n            /**\n             * addEventListener\n             *\n             * type format:\n             * - click: single event\n             * - click change: multiple event\n             * - click.ns: single namespace event\n             *\n             * delegation:\n             * - specify selector argument, enable delegation(like jQuery)\n             * - specify options ownself:true, trigger only matched element\n             *   - default ownself:false, trigger until closest\n             * - specify options once:true, trigger event per element only once\n             *\n             * listener(e):\n             * - this: bound target\n             * - e.target: triggered element always\n             * - e.currentTarget: listened element always(=this)\n             * - e.$delegateTarget: selector element delegation only\n             *\n             * misc:\n             * - options is not allowed bool(useCapture). must be Object\n             * - throttle: continual events dispatch interval\n             * - debounce: continual events dispatch after last\n             * - leading: fire at first time\n             * - trailing: fire after last time\n             *\n             * ```\n             *          | throttle | (l)throttle | (t)throttle | (lt)throttle | debounce | (l)debounce | (t)debounce | (lt)debounce |\n             *  leading:|          | fire        |             | fire         |          | fire        |             | fire         |\n             *      100:|          |             |             |              |          |             |             |              |\n             *      200:| fire     | fire        | fire        | fire         |          |             |             |              |\n             *      300:|          |             |             |              |          |             |             |              |\n             *      400:| fire     | fire        | fire        | fire         |          |             |             |              |\n             *      500:|          |             |             |              |          |             |             |              |\n             *      600:| fire     | fire        | fire        | fire         |          |             |             |              |\n             * trailing:|          |             | fire        | fire         |          |             | fire        | fire         |\n             * ```\n             *\n             * @param {String} types\n             * @param {String|Function} selector\n             * @param {Function|Object} [listener]\n             * @param {Object} [options={}]\n             * @return {this}\n             */\n            $on(types, selector, listener, options) {\n                if (typeof (selector) === 'function') {\n                    options = listener;\n                    listener = selector;\n                    selector = null;\n                }\n                options = Object.assign({\n                    // standard: https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener\n                    ...{\n                        // bool\n                        once: undefined,\n                        // bool\n                        capture: undefined,\n                        // bool\n                        passive: undefined,\n                        // https://developer.mozilla.org/docs/Web/API/AbortSignal\n                        signal: undefined,\n                    },\n                    // commons\n                    ...{\n                        // bool\n                        ownself: false,\n                        // int\n                        interval: undefined,\n                        // int\n                        throttle: undefined,\n                        // int\n                        debounce: undefined,\n                        // bool\n                        leading: undefined,\n                        // bool\n                        trailing: undefined,\n                    },\n                    // other events...\n                }, options);\n                kQuery.logger.assertInstanceOf(types, String)();\n                kQuery.logger.assertInstanceOf(selector, Nullable, String)();\n                kQuery.logger.assertInstanceOf(listener, Function)();\n                kQuery.logger.assertInstanceOf(options, Object)();\n\n                if (selector != null && options.capture) {\n                    kQuery.logger.warn(`Delegation of capture phase isn't tested, so might not work well`);\n                }\n\n                if (options.throttle && !options.debounce) {\n                    options.leading ??= true;\n                    options.trailing ??= false;\n                }\n                if (options.debounce && !options.throttle) {\n                    options.leading ??= false;\n                    options.trailing ??= true;\n                }\n\n                for (const [type, namespaces] of eachType(false, types)) {\n                    const eventData = {type, namespaces, selector, listener, options, counter: new WeakMap(), collectors: []};\n\n                    let customEvent;\n                    if (!(this instanceof Window) && type in kQuery.customEvents) {\n                        customEvent = new kQuery.customEvents[type](this, selector, options, function (target, detail = {}, options = {}) {\n                            customEvent.bubbles = 'bubbles' in options;\n                            options.$original ??= {};\n                            options.$original.$eventId ??= customEvent.eventId;\n                            options.bubbles ??= (customEvent.selector ?? selector) != null;\n                            options.detail ??= detail;\n                            target.$trigger(type, options);\n                        });\n                        customEvent.handlers ??= {};\n                        customEvent.handlers.insert ??= (node) => {};\n                        customEvent.handlers.delete ??= (node) => {};\n                        emulateDelegationWatcher.watch(this, customEvent.selector ?? selector, customEvent.handlers);\n                        eventData.collectors.push(() => {\n                            emulateDelegationWatcher.unwatch(this, customEvent.selector ?? selector, customEvent.handlers);\n                            customEvent.destructor?.(this);\n                        });\n                    }\n\n                    const waitStorage = new ObjectStorage();\n                    const handler = async (e) => {\n                        // only matched namespace\n                        if (e.$namespaces?.length && e.$namespaces.some(ns => !eventData.namespaces.includes(ns))) {\n                            return;\n                        }\n                        // only same custom event's options\n                        if (customEvent?.eventId !== e.$original?.$eventId) {\n                            return;\n                        }\n\n                        // e.target is volatile?\n                        const target = e.target;\n                        const debounce = async (msec, leading) => {\n                            const timer = Timer.wait(msec);\n                            const current = waitStorage.reset(target, 'timer', () => timer);\n                            if (!leading || (current?.status === 'pending')) {\n                                current?.cancel(null);\n                                if ((await timer) === null) {\n                                    return false;\n                                }\n                                if (!options.trailing) {\n                                    return false;\n                                }\n                            }\n                            return true;\n                        };\n\n                        if (options.debounce != null) {\n                            if (!await debounce(options.debounce, options.leading)) {\n                                return;\n                            }\n                        }\n                        if (options.throttle != null) {\n                            const start = waitStorage.getOrSet(target, 'start', () => Date.now() - (options.leading ? options.throttle : 0));\n                            if ((start + options.throttle) > Date.now()) {\n                                if (!await debounce(options.throttle, false)) {\n                                    return;\n                                }\n                            }\n                            waitStorage.set(target, 'start', Date.now());\n                        }\n\n                        e.$abort = (reason) => eventData.abortController.abort(reason);\n\n                        if (eventData.selector == null) {\n                            return eventData.listener.call(this, e);\n                        }\n\n                        for (let parent = target; parent && parent !== this; parent = parent.parentElement) {\n                            if (parent.matches(eventData.selector) && !(options.once && eventData.counter.get(target))) {\n                                if (!eventData.counter.reset(target, (count) => (count ?? 0) + 1) && options.once) {\n                                    customEvent?.handlers?.delete?.(target);\n                                }\n                                // stop bubbling unless explicitly specified\n                                if (customEvent && !customEvent.bubbles) {\n                                    e.stopPropagation();\n                                }\n                                e.$delegateTarget = parent;\n                                return eventData.listener.call(this, e);\n                            }\n\n                            if (options.ownself) {\n                                break;\n                            }\n                        }\n                    };\n\n                    // handler is needed by $off, but should not have a strong reference if once:true\n                    eventData.handler = new WeakRef(handler);\n                    eventDataMap.getOrSet(this, () => []).push(eventData);\n\n                    // if selector and once, apply once per node\n                    const internalOptions = eventData.selector == null ? options : Object.assign({}, options, {once: false});\n\n                    eventData.abortController = new AbortController();\n                    eventData.abortController.signal.addEventListener('abort', eventData.destructor);\n                    if (internalOptions.signal) {\n                        internalOptions.signal = AbortSignal.any([internalOptions.signal, eventData.abortController.signal]);\n                    }\n                    else {\n                        internalOptions.signal = eventData.abortController.signal;\n                    }\n                    this.addEventListener(internalEventName(type), handler, internalOptions);\n\n                    // if once:true, the handler can be retrieved by the GC\n                    // at that time, $off is not called so have to call by finalizer\n                    eventData.destructor = function () {\n                        kQuery.logger.debug(`Release of `, type, selector, options);\n\n                        eventData.collectors.forEach(collector => collector());\n                        eventData.collectors = [];\n                    };\n                    F.objectFinalize(handler, eventData.destructor);\n                }\n\n                return this;\n            },\n            /**\n             * removeEventListener\n             *\n             * all arguments are optional\n             * - $off(): remove all event\n             * - $off('click'): remove all click event\n             * - $off('click', 'selector'): remove all click event of selector\n             * - $off('click', 'selector', listener): remove same listener event of selector\n             *\n             * @param {String} [types]\n             * @param {String|Function} [selector]\n             * @param {Function|Object} [listener]\n             * @param {Object} [options={}]\n             * @return {this}\n             */\n            $off(types, selector, listener, options) {\n                if (typeof (selector) === 'function') {\n                    options = listener;\n                    listener = selector;\n                    selector = null;\n                }\n                kQuery.logger.assertInstanceOf(types, Nullable, String)();\n                kQuery.logger.assertInstanceOf(selector, Nullable, String)();\n                kQuery.logger.assertInstanceOf(listener, Nullable, Function)();\n                kQuery.logger.assertInstanceOf(options, Nullable, Object)();\n\n                for (const [type, namespaces] of eachType(true, types)) {\n                    eventDataMap.reset(this, (eventDatas) => (eventDatas ?? []).filter(eventData => {\n                        if (type && type !== eventData.type) {\n                            return true;\n                        }\n                        if (namespaces.length && namespaces.some(ns => !eventData.namespaces.includes(ns))) {\n                            return true;\n                        }\n                        if (selector && selector !== eventData.selector) {\n                            return true;\n                        }\n                        if (listener && listener !== eventData.listener) {\n                            return true;\n                        }\n                        if (options?.capture !== eventData.options.capture) {\n                            return true;\n                        }\n\n                        this.removeEventListener(internalEventName(eventData.type), eventData.handler.deref(), eventData.options);\n                        eventData.destructor();\n                        return false;\n                    }));\n                }\n\n                return this;\n            },\n            /**\n             * dispatch Event\n             *\n             * types allows multiple event\n             *\n             * some event are special treated, e.g. click is PointerEvent\n             *\n             * @param {String} types\n             * @param {Object} options={}\n             * @return {Boolean}\n             */\n            $trigger(types, options = {}) {\n                kQuery.logger.assertInstanceOf(types, String)();\n                kQuery.logger.assertInstanceOf(options, Object)();\n\n                let result = true;\n                for (const [type, namespaces] of eachType(false, types)) {\n                    const event = kQuery.wellknownEvents[type] ?? CustomEvent;\n                    const eventObject = new event(internalEventName(type), Object.assign({\n                        bubbles: true,\n                        cancelable: true,\n                        composed: true,\n                    }, options));\n                    eventObject.$namespaces = namespaces;\n\n                    const completed = this.dispatchEvent(eventObject);\n                    kQuery.logger.debug(`Event ${type} is ${completed ? 'completed' : 'canceled'}`, this, eventObject);\n                    result = result && completed;\n                }\n                return result;\n            },\n            /**\n             * get Event data\n             *\n             * this method is very unsafe and changed without any notice\n             * eventdata is live, changing it changes the handler itself\n             *\n             * @param {String} [types]\n             * @param {Boolean} [ancestor]\n             * @param {Boolean} [capture=false]\n             * @return {{type: String, namespaces: Array, selector: String, listener: Function, options: Object}[]}\n             */\n            $events(types, ancestor, capture = false) {\n                kQuery.logger.assertInstanceOf(types, Nullable, String)();\n                kQuery.logger.assertInstanceOf(ancestor, Nullable, Boolean)();\n                kQuery.logger.assertInstanceOf(capture, Boolean)();\n\n                const result = eventDataMap.get(this) ?? [];\n\n                if (ancestor) {\n                    for (let parent = this.parentNode; parent; parent = parent.parentNode) {\n                        for (const ev of eventDataMap.get(parent) ?? []) {\n                            // delegation mode\n                            if (ev.selector != null && this.matches(ev.selector)) {\n                                if (!(ev.options.once && ev.counter.get(this))) {\n                                    result.push(ev);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                return result.filter(ev => {\n                    // if once:true, handler is collected by GC\n                    if (!ev.handler.deref()) {\n                        return false;\n                    }\n\n                    for (const [type, namespaces] of eachType(true, types)) {\n                        if (type && type !== ev.type) {\n                            return false;\n                        }\n                        if (namespaces.length && namespaces.some(ns => !ev.namespaces.includes(ns))) {\n                            return false;\n                        }\n                    }\n\n                    if (capture !== (ev.options.capture ?? false)) {\n                        return false;\n                    }\n\n                    return true;\n                });\n            },\n        },\n    };\n}\n", "import {$CSSRuleList, $NodeList, F, Nullable, ObjectStorage, Proxy} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function attributes(kQuery) {\n    const nodeStorage = new ObjectStorage();\n\n    class ProxyProperty {\n        static NotImplemented = Symbol('NotImplemented');\n\n        constructor(node, name) {\n            this.node = node;\n            this.name = name;\n            this.object = node[name];\n        }\n\n        has(target, property) {\n            return this._hasValue(property);\n        }\n\n        _hasValue(property) {\n            return Reflect.has(this.object, property);\n        }\n\n        get(target, property) {\n            if (property === Symbol.toPrimitive || property === 'toString') {\n                return () => this._getString();\n            }\n            if (property.charAt(0) === '$') {\n                const $value = this._get$Value(property.substring(1));\n                if ($value !== ProxyProperty.NotImplemented) {\n                    return $value;\n                }\n            }\n            const base = Reflect.get(this.object, property);\n            if (typeof (base) === 'function') {\n                return this._getFunction(property, base);\n            }\n            return this._getValue(property, base);\n        }\n\n        _getString() {}\n\n        _get$Value(property) {\n            return ProxyProperty.NotImplemented;\n        }\n\n        _getFunction(property, value) {\n            const method = (...args) => {\n                const result = F.functionToCallbackable(value, this.node, this.node, method.i).call(this.object, ...args);\n                return result === undefined ? nodeStorage.get(this.node, this.name) : result;\n            };\n            return method;\n        }\n\n        _getValue(property, value) {\n            return value;\n        }\n\n        set(target, property, value) {\n            if (typeof (value) === 'function') {\n                value = this._setFunction(property, value);\n            }\n            if (property.charAt(0) === '$') {\n                const $value = this._set$Value(property.substring(1), value);\n                if ($value !== ProxyProperty.NotImplemented) {\n                    return true;\n                }\n            }\n            this._setValue(property, value);\n            return true;\n        }\n\n        _set$Value(property, value) {\n            return ProxyProperty.NotImplemented;\n        }\n\n        _setFunction(property, value) {\n            return value.call(this.object, this.node);\n        }\n\n        _setValue(property, value) {\n            if (value === undefined) {\n                return;\n            }\n            this.apply(null, null, [{[property]: value}]);\n        }\n\n        deleteProperty(target, property) {\n            const value = Reflect.get(this.object, property);\n            this._deleteValue(property, value);\n            return true;\n        }\n\n        _deleteValue(property, value) {\n            Reflect.deleteProperty(this.object, property);\n        }\n\n        apply(target, thisArg, argArray) {\n            if (argArray[0] instanceof Array || F.objectIsPlain(argArray[0])) {\n                this._applySet(...argArray);\n                return nodeStorage.get(this.node, this.name);\n            }\n            else {\n                return this._applyGet(...argArray);\n            }\n        }\n\n        _applyGet(...args) {}\n\n        _applySet(...args) {}\n    }\n\n    return {\n        [[Element.name, $NodeList.name]]: /** @lends Element.prototype */{\n            /**\n             * simple accessor to NamedNodeMap(attribute)\n             *\n             * @descriptor get\n             *\n             * @return {Object|Function}\n             *\n             * @example\n             * $$('input').$attrs.name;             // getter\n             * $$('input').$attrs.name = 'value';   // setter\n             * $$('input').$attrs({name: 'value'}); // mass setting(keep other)\n             * $$('input').$attrs();                // get all key-value object\n             *\n             * @example\n             * // false is delete that attribute\n             * $$('input').$attrs.name = false;\n             * $$('input').$attrs({name: false});\n             *\n             * @example\n             * // $prefix means inherited attribute\n             * $$('input').$attrs.$disabled; // returns true if the parent is disabled even if itself none\n             */\n            get $attrs() {\n                return nodeStorage.getOrSet(this, 'attributes', (node, name) => new Proxy(function $Attrs() {}, new class extends ProxyProperty {\n                    _getString() {\n                        return Object.values(node.attributes).map((attr) => `${F.stringEscape(attr.name, 'attr-name')}=\"${F.stringEscape(attr.value, 'attr-value')}\"`).join(' ');\n                    }\n\n                    _get$Value(property) {\n                        return node.closest(`[${F.stringEscape(property, 'css')}]`)?.getAttribute(property) ?? null;\n                    }\n\n                    _getValue(property, value) {\n                        return value?.value;\n                    }\n\n                    _deleteValue(property, value) {\n                        node.removeAttribute(property);\n                    }\n\n                    _applyGet() {\n                        return Object.fromEntries(Array.from(node.attributes, attr => [attr.name, attr.value]));\n                    }\n\n                    _applySet(object) {\n                        const normalizedAttributes = F.objectToAttributes(object);\n                        for (const [name, value] of Object.entries(normalizedAttributes)) {\n                            if (typeof (value) === 'boolean') {\n                                node.toggleAttribute(name, value);\n                            }\n                            else {\n                                node.setAttribute(name, value);\n                            }\n                        }\n                    }\n                }(node, name)));\n            },\n            /**\n             * mass assign NamedNodeMap(attribute)\n             *\n             * @descriptor set\n             *\n             * @param {Object} value\n             *\n             * @example\n             * $$('input').$attrs = {name: 'value'};                // mass assign(delete other)\n             * $$('input').$attrs = (node, i) => ({name: 'value'}); // mass assign by callback(delete other)\n             */\n            set $attrs(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, Object)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                // carefully node.attributes is \"live\" collection\n                for (const attr of Object.values(this.attributes)) {\n                    this.attributes.removeNamedItem(attr.name);\n                }\n\n                // noinspection JSValidateTypes\n                this.$attrs(value);\n            },\n            /**\n             * simple accessor to DOMStringMap(dataset)\n             *\n             * @descriptor get\n             *\n             * @return {Object|Function}\n             *\n             * @example\n             * $$('input').$data.name;             // getter\n             * $$('input').$data.name = 'value';   // setter\n             * $$('input').$data({name: 'value'}); // mass setting(keep other)\n             * $$('input').$data();                // get all key-value object\n             * $$('input').$data('prefix');        // get structured object\n             *\n             * @example\n             * // $prefix means objective data\n             * $$('input').$data.$hoge; // returns Object starting with hoge\n             */\n            get $data() {\n                return nodeStorage.getOrSet(this, 'dataset', (node, name) => new Proxy(function $Data() {}, new class extends ProxyProperty {\n                    _getString() {\n                        return JSON.stringify(this.apply(null, null, ['']));\n                    }\n\n                    _get$Value(property) {\n                        return this._applyGet(property);\n                    }\n\n                    _applyGet(property) {\n                        const result = {};\n                        for (const [name, data] of Object.entries(node.dataset)) {\n                            result[name] = data;\n                        }\n                        if (typeof (property) !== 'string') {\n                            return result;\n                        }\n\n                        // filter and to kebab\n                        const targetPrefix = F.stringToKebabCase(property);\n                        const regex = new RegExp(targetPrefix ? `^${property}[A-Z]` : `.*`);\n                        const member = {};\n                        for (const [name, data] of Object.entries(result)) {\n                            if (regex.test(name)) {\n                                member[F.stringToKebabCase(name)] = data;\n                            }\n                        }\n\n                        if (Object.keys(member).length === 0 && property in node.dataset) {\n                            try {\n                                return JSON.parse(node.dataset[property]);\n                            }\n                            catch (e) {\n                            }\n                        }\n\n                        const entries = Object.entries(member).map(([name, value]) => [name.split('-'), value]);\n                        const object = F.entriesToObject(entries, true);\n\n                        return targetPrefix ? targetPrefix.split('-').reduce((target, key) => target?.[key], object) ?? {} : object;\n                    }\n\n                    _set$Value(property, value) {\n                        node.dataset[property] = JSON.stringify(value);\n                    }\n\n                    _applySet(object) {\n                        for (const [name, data] of Object.entries(F.objectToDataset(object))) {\n                            node.dataset[F.stringToPascalCase(name)] = data;\n                        }\n                    }\n                }(node, name)));\n            },\n            /**\n             * mass assign DOMStringMap(dataset)\n             *\n             * @descriptor set\n             *\n             * @param {Object} value\n             *\n             * @example\n             * $$('input').$data = {name: 'value'};                // mass assign(delete other)\n             * $$('input').$data = (node, i) => ({name: 'value'}); // mass assign by callback(delete other)\n             */\n            set $data(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, Object)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                for (const name of Object.keys(this.dataset)) {\n                    delete this.dataset[name];\n                }\n\n                // noinspection JSValidateTypes\n                this.$data(value);\n            },\n            /**\n             * simple accessor to DOMTokenList(classList)\n             *\n             * @descriptor get\n             *\n             * @return {Object|Function}\n             *\n             * @example\n             * $$('input').$class.name;             // getter(always boolean)\n             * $$('input').$class.name = 'flag';    // setter(cast to boolean)\n             * $$('input').$class({name: 'flag'});  // mass setting(keep other)\n             * $$('input').$class();                // get all keys array\n             *\n             * @example\n             * // object|array is treated like vue.js\n             * $$('input').$class({name: false});\n             * $$('input').$class([{name: false}, 'other']);\n             */\n            get $class() {\n                return nodeStorage.getOrSet(this, 'classList', (node, name) => new Proxy(function $Class() {}, new class extends ProxyProperty {\n                    _hasValue(property) {\n                        return node.classList.contains(property);\n                    }\n\n                    _getString() {\n                        return node.classList.value;\n                    }\n\n                    _getValue(property, value) {\n                        return node.classList.contains(property);\n                    }\n\n                    _deleteValue(property, value) {\n                        node.classList.remove(property);\n                    }\n\n                    _applyGet() {\n                        return [...node.classList.values()];\n                    }\n\n                    _applySet(object) {\n                        for (const [token, flag] of F.objectToEntries(F.objectToClasses(object))) {\n                            node.classList.toggle(token, flag);\n                        }\n                    }\n                }(node, name)));\n            },\n            /**\n             * mass assign DOMTokenList(classList)\n             *\n             * @descriptor set\n             *\n             * @param {Object|Array} value\n             *\n             * @example\n             * $$('input').$class = {name: 'flag'};                // mass assign(delete other)\n             * $$('input').$class = (node, i) => ({name: 'flag'}); // mass assign by callback(delete other)\n             */\n            set $class(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, String, Object, Array)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                this.classList.value = '';\n\n                // noinspection JSValidateTypes\n                this.$class(value);\n            },\n        },\n        [[Element.name, CSSStyleRule.name, $NodeList.name, $CSSRuleList.name]]: /**\n         @lends CSSStyleRule.prototype\n         @lends Element.prototype*/ {\n            /**\n             * simple accessor to CSSStyleDeclaration(style)\n             *\n             * @descriptor get\n             *\n             * @return {Object|Function}\n             *\n             * @example\n             * $$('input').$style.color;             // getter\n             * $$('input').$style.color = 'value';   // setter\n             * $$('input').$style({color: 'value'}); // mass setting(keep other)\n             * $$('input').$style();                 // get all key-value object\n             * $$('input').$style(true);             // get all key-value object with important\n             *\n             * @example\n             * // $prefix means computed style\n             * $$('input').$style.$;                // returns computed style\n             * $$('input').$style.$color;           // returns computed style's color\n             * $$('input').$style['$color::after']; // returns computed style's pseudo color\n             */\n            get $style() {\n                return nodeStorage.getOrSet(this, 'style', (node, name) => new Proxy(function $Style() {}, new class extends ProxyProperty {\n                    _hasValue(property) {\n                        return !!Reflect.get(node.style, property);\n                    }\n\n                    _getString() {\n                        return node.style.cssText;\n                    }\n\n                    _get$Value(property) {\n                        let [name, pseudo] = property.split('::');\n                        pseudo = pseudo ? `::${pseudo}` : null;\n\n                        const cstyle = node.$window.getComputedStyle(node, pseudo);\n                        if (!name.length) {\n                            return cstyle;\n                        }\n                        return cstyle.getPropertyValue(F.stringToKebabCase(name));\n                    }\n\n                    _getValue(property, value) {\n                        if (property.startsWith('--')) {\n                            return node.style.getPropertyValue(F.stringToKebabCase(property));\n                        }\n                        return value || value === undefined ? value : null;\n                    }\n\n                    _deleteValue(property, value) {\n                        node.style.removeProperty(F.stringToKebabCase(property));\n                    }\n\n                    _applyGet(priority) {\n                        const result = {};\n                        for (let i = 0; true; i++) {\n                            const name = node.style[i];\n                            if (!name) {\n                                break;\n                            }\n                            if (priority === true) {\n                                const priority = node.style.getPropertyPriority(name);\n                                result[name] = node.style.getPropertyValue(name) + (priority ? `!${priority}` : '');\n                            }\n                            else {\n                                result[name] = node.style.getPropertyValue(name);\n                            }\n                        }\n                        return result;\n                    }\n\n                    _applySet(object) {\n                        for (const [name, style] of F.objectToEntries(object)) {\n                            const strstyle = '' + style;\n                            const rawstyle = strstyle.replace(/!important$/, '');\n                            node.style.setProperty(F.stringToKebabCase(name), rawstyle, strstyle === rawstyle ? '' : 'important');\n                        }\n                    }\n                }(node, name)));\n            },\n            /**\n             * mass assign CSSStyleDeclaration(style)\n             *\n             * @descriptor set\n             *\n             * @param {Object} value\n             *\n             * @example\n             * $$('input').$style = {color: 'value'};                // mass assign(delete other)\n             * $$('input').$style = (node, i) => ({color: 'value'}); // mass assign by callback(delete other)\n             */\n            set $style(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, Object)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                this.style.cssText = '';\n\n                // noinspection JSValidateTypes\n                this.$style(value);\n            },\n        },\n    };\n}\n", "import {$FileList, $NodeList, F, FileReader, Nullable, Promise, Proxy, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function data(kQuery) {\n    const nodeBag = new WeakMap();\n    const nodeJson = new WeakMap();\n\n    return {\n        [[Node.name, $NodeList.name]]: /** @lends Node.prototype */{\n            /**\n             * get Bag for anything\n             *\n             * @descriptor get\n             *\n             * @example\n             * $('input').$bag.hoge;             // getter\n             * $('input').$bag.hoge = 'value';   // setter\n             * $('input').$bag({hoge: 'value'}); // mass setting(keep other)\n             * $('input').$bag();                // get all key-value object\n             */\n            get $bag() {\n                const bag = {};\n                return nodeBag.getOrSet(this, () => new Proxy(function $Bag() {}, {\n                    has(target, property) {\n                        return Reflect.has(bag, property);\n                    },\n                    get(target, property) {\n                        if (property === Symbol.toPrimitive || property === 'toString') {\n                            return () => JSON.stringify(bag);\n                        }\n                        return Reflect.get(bag, property);\n                    },\n                    set(target, property, value) {\n                        Reflect.set(bag, property, value);\n                        return true;\n                    },\n                    deleteProperty(target, property) {\n                        Reflect.deleteProperty(bag, property);\n                        return true;\n                    },\n                    apply(target, thisArg, argArray) {\n                        if (F.objectIsPlain(argArray[0])) {\n                            Object.assign(bag, argArray[0]);\n                        }\n                        return bag;\n                    },\n                }));\n            },\n            /**\n             * mass assign $bag\n             *\n             * @descriptor set\n             *\n             * @param {Object} value\n             *\n             * @example\n             * $('input').$bag = {hoge: 'value'};                // mass assign(delete other)\n             * $('input').$bag = (node, i) => ({hoge: 'value'}); // mass assign by callback(delete other)\n             */\n            set $bag(value) {\n                kQuery.logger.assertInstanceOf(value, Nullable, Object)();\n\n                // null guard for function return (void). keep current values\n                if (value == null) {\n                    return;\n                }\n\n                const $bag = this.$bag;\n                for (const key of Object.keys($bag())) {\n                    delete $bag[key];\n                }\n\n                $bag(value);\n            },\n        },\n        [[HTMLStyleElement.name, HTMLLinkElement.name, $NodeList.name]]: /** @lends HTMLStylableElement.prototype */{\n            /**\n             * get contents as text\n             *\n             * - premised stylesheet\n             * - should have href\n             * - if href requires CORS\n             *\n             * @param {Boolean} [resolveUrl=true]\n             * @return {Promise<String>}\n             */\n            async $contents(resolveUrl = true) {\n                let contents;\n                if (this instanceof HTMLLinkElement) {\n                    contents = await (await F.fetch(this.href)).text();\n                }\n                else {\n                    contents = this.textContent;\n                }\n\n                if (resolveUrl) {\n                    const regex = /url\\(((['\"])?.+?\\2?)\\)/g;\n                    const normalize = (url) => {\n                        url = F.stringUnquote(url, 'css-url');\n                        // https://developer.mozilla.org/ja/docs/Web/CSS/url_function\n                        // url allows svg#id in page\n                        if (url.charAt(0) === '#') {\n                            return null;\n                        }\n                        return new URL(url, this.href);\n                    };\n\n                    const requests = {};\n                    for (const [, url] of contents.matchAll(regex)) {\n                        const fullurl = normalize(url);\n                        if (fullurl) {\n                            requests[fullurl] ??= async (fullurl) => {\n                                const response = await F.fetch(fullurl).catch(v => ({ok: false}));\n                                if (!response.ok) {\n                                    return null;\n                                }\n                                return (await response.blob()).$dataURL();\n                            };\n                        }\n                    }\n\n                    const responses = await Promise.concurrencyAll(requests, 6);\n                    contents = contents.replace(regex, (m0, url) => {\n                        const fullurl = normalize(url);\n                        if (fullurl && responses[fullurl]) {\n                            return 'url(' + F.stringQuote(responses[fullurl] + fullurl.hash, 'css-url') + ')';\n                        }\n                        return m0;\n                    });\n                }\n\n                return contents;\n            },\n        },\n        [[HTMLScriptElement.name, $NodeList.name]]: /** @lends HTMLScriptElement.prototype */{\n            /**\n             * get contents as text\n             *\n             * - should have src\n             * - if src requires CORS\n             *\n             * @return {Promise<String>}\n             */\n            async $contents() {\n                let contents;\n                if (this.src) {\n                    contents = await (await F.fetch(this.src)).text();\n                }\n                else {\n                    contents = this.textContent;\n                }\n\n                // do something. e.g. url rewrite\n                return contents;\n            },\n        },\n        [[HTMLImageElement.name, $NodeList.name]]: /** @lends HTMLImageElement.prototype */{\n            /**\n             * create URL based on this src\n             *\n             * @descriptor get\n             *\n             * @return {URL}\n             */\n            get $URL() {\n                return new URL(this.src, this.baseURI);\n            },\n            /**\n             * set src by URL\n             *\n             * @descriptor set\n             *\n             * @param {URL} url\n             */\n            set $URL(url) {\n                this.src = url;\n            },\n            /**\n             * get contents as file\n             *\n             * - must have src\n             * - requires CORS\n             *\n             * @return {Promise<File>}\n             */\n            async $contents() {\n                const url = new URL(this.currentSrc, this.baseURI);\n\n                const response = await F.fetch(url);\n                const blob = await response.blob();\n                return new File([blob], url.pathname.split('/').at(-1) ?? this.currentSrc, {\n                    type: blob.type,\n                    ...(response.headers.has('last-modified') ? {\n                        lastModified: new Date(response.headers.get('last-modified')).getTime(),\n                    } : {}),\n                });\n            },\n            /**\n             * convert to dataURL\n             *\n             * @param {?String} [mimetype]\n             * @param {?Number} [quality]\n             * @return {Promise<String>}\n             */\n            async $dataURL(mimetype, quality) {\n                kQuery.logger.assertInstanceOf(mimetype, Nullable, String)();\n                kQuery.logger.assertInstanceOf(quality, Nullable, Number)();\n\n                return new Promise((resolve) => {\n                    const canvas = this.$document.createElement('canvas');\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n                    canvas.getContext('2d').drawImage(this, 0, 0);\n                    resolve(canvas.toDataURL(mimetype, quality));\n                });\n            },\n            /**\n             * convert to Blob\n             *\n             * @param {?String} [mimetype]\n             * @param {?Number} [quality]\n             * @return {Promise<Blob>}\n             */\n            async $blob(mimetype, quality) {\n                kQuery.logger.assertInstanceOf(mimetype, Nullable, String)();\n                kQuery.logger.assertInstanceOf(quality, Nullable, Number)();\n\n                return new Promise((resolve) => {\n                    const canvas = this.$document.createElement('canvas');\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n                    canvas.getContext('2d').drawImage(this, 0, 0);\n                    canvas.toBlob(resolve, mimetype, quality);\n                });\n            },\n            /**\n             * convert to File\n             *\n             * @param {?String} [mimetype]\n             * @param {?Number} [quality]\n             * @return {Promise<File>}\n             */\n            async $file(mimetype, quality) {\n                kQuery.logger.assertInstanceOf(mimetype, Nullable, String)();\n                kQuery.logger.assertInstanceOf(quality, Nullable, Number)();\n\n                const url = new URL(this.currentSrc, this.baseURI);\n                return new File([await this.$blob(mimetype, quality)], url.pathname.split('/').at(-1) ?? this.currentSrc, {\n                    type: mimetype,\n                });\n            },\n        },\n        [[HTMLAnchorElement.name, $NodeList.name]]: /** @lends HTMLAnchorElement.prototype */{\n            /**\n             * create URL based on this href\n             *\n             * @descriptor get\n             *\n             * @return {URL}\n             */\n            get $URL() {\n                return new URL(this.href, this.baseURI);\n            },\n            /**\n             * set href by URL\n             *\n             * @descriptor set\n             *\n             * @param {URL} url\n             */\n            set $URL(url) {\n                this.href = url;\n            },\n        },\n        [[HTMLFormElement.name, $NodeList.name]]: /** @lends HTMLFormElement.prototype */{\n            /**\n             * create URL based on this action\n             *\n             * @descriptor get\n             *\n             * @return {URL}\n             */\n            get $URL() {\n                return new URL(this.action, this.baseURI);\n            },\n            /**\n             * set action by URL\n             *\n             * @descriptor set\n             *\n             * @param {URL} url\n             */\n            set $URL(url) {\n                this.action = url;\n            },\n        },\n        [[Blob.name, $FileList.name]]: /** @lends Blob.prototype */{\n            /**\n             * download as file\n             *\n             * @param {?String} [filename]\n             */\n            $download(filename) {\n                kQuery.logger.assertInstanceOf(filename, Nullable, String)();\n\n                // for File\n                filename ??= this.name ?? '';\n\n                const url = URL.createObjectURL(this);\n                const a = document.$createElement('a', {\n                    href: url,\n                    download: filename,\n                });\n\n                a.click();\n                setTimeout(function () {\n                    URL.revokeObjectURL(url);\n                }, 1000);\n            },\n            /**\n             * read as text\n             *\n             * @param {?String} [encoding]\n             * @return {Promise<String>}\n             */\n            async $text(encoding) {\n                kQuery.logger.assertInstanceOf(encoding, Nullable, String)();\n\n                // return this.text(); // no encoding\n                const textDecoder = new TextDecoder(encoding);\n                return textDecoder.decode(await this.arrayBuffer());\n            },\n            /**\n             * read as base64\n             *\n             * @return {Promise<String>}\n             */\n            async $base64() {\n                const dataURL = await this.$dataURL();\n                return dataURL.substring(dataURL.indexOf(',') + 1);\n            },\n            /**\n             * read as dataURL\n             *\n             * @param {?String} [mimetype]\n             * @return {Promise<String>}\n             */\n            async $dataURL(mimetype) {\n                kQuery.logger.assertInstanceOf(mimetype, Nullable, String)();\n\n                const that = mimetype ? this.slice(0, this.size, mimetype) : this;\n                const reader = new FileReader();\n                reader.readAsDataURL(that);\n                return reader.promise();\n            },\n        },\n    };\n}\n", "import {$NodeList, F} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function dimensions(kQuery) {\n    const boxsize = function (element) {\n        const backup = element.getAttribute('style');\n\n        try {\n            const cstyle = element.$window.getComputedStyle(element);\n            const marginWidth = parseFloat(cstyle.marginLeft) + parseFloat(cstyle.marginRight);\n            const marginHeight = parseFloat(cstyle.marginTop) + parseFloat(cstyle.marginBottom);\n\n            element.style.setProperty('box-sizing', 'content-box', 'important');\n            element.style.setProperty('overflow', 'hidden', 'important');\n\n            const box = element.getBoundingClientRect();\n            let contentWidth = box.width;\n            let contentHeight = box.height;\n\n            element.style.setProperty('border', 'none', 'important');\n            const borderWidth = contentWidth - element.offsetWidth;\n            const borderHeight = contentHeight - element.offsetHeight;\n            contentWidth -= borderWidth;\n            contentHeight -= borderHeight;\n\n            element.style.setProperty('padding', 0, 'important');\n            const paddingWidth = contentWidth - element.offsetWidth;\n            const paddingHeight = contentHeight - element.offsetHeight;\n            const scrollWidth = element.scrollWidth;\n            const scrollHeight = element.scrollHeight;\n            contentWidth -= paddingWidth;\n            contentHeight -= paddingHeight;\n\n            // vertical scrollbar reduces width but horizontal scrollbar doesn't reduce height\n            const clientWidth = element.clientWidth;\n            const offsetHeight = element.offsetHeight;\n            element.style.setProperty('overflow', 'scroll', 'important');\n            const scrollbarWidth = clientWidth - element.clientWidth;\n            const scrollbarHeight = element.offsetHeight - offsetHeight;\n            contentWidth -= scrollbarWidth;\n            //contentHeight -= result.scrollbarHeight;\n\n            return {\n                marginWidth, borderWidth, paddingWidth, scrollbarWidth, contentWidth,\n                marginHeight, borderHeight, paddingHeight, scrollbarHeight, contentHeight,\n            };\n        }\n        finally {\n            if (backup == null) {\n                element.removeAttribute('style');\n            }\n            else {\n                element.setAttribute('style', backup);\n            }\n        }\n    };\n\n    return {\n        [[Document.name]]: /** @lends Document.prototype */{\n            /**\n             * get top-layer element\n             *\n             * in the future, \":top-layer\" pseudo-class may come, but not now\n             *\n             * @return {?Element}\n             */\n            get $topLayerElement() {\n                const tops = this.$$(':modal, :popover-open, :fullscreen');\n                if (tops.length <= 1) {\n                    return tops[0] ?? null;\n                }\n\n                for (const top of tops) {\n                    if (top === this.elementFromPoint(0, 0)) {\n                        return top;\n                    }\n                }\n\n                return null;\n            },\n            /**\n             * get current modal element\n             *\n             * @return {?Element}\n             */\n            get $modalElement() {\n                // noinspection CssInvalidPseudoSelector\n                const modals = this.querySelectorAll(':modal');\n                const top = this.elementFromPoint(0, 0);\n\n                // ':modal' is DOM order, but not necessarily modal in that order\n                return Array.prototype.find.call(modals, e => e === top) ?? null;\n            },\n        },\n        [[HTMLElement.name, $NodeList.name]]: /** @lends HTMLElement.prototype */{\n            /**\n             * normalize cssUnit to pixel\n             *\n             * @param {Number|String} cssLength\n             * @return {Number}\n             *\n             * @example\n             * document.body.$cssPixel('2lh');\n             * // 58.2188\n             */\n            $cssPixel(cssLength) {\n                kQuery.logger.assertInstanceOf(cssLength, Number, String)();\n\n                if (typeof (cssLength) === 'number') {\n                    return cssLength;\n                }\n\n                // absolute\n                const value = parseFloat(cssLength);\n                const unit = cssLength.replace(/^-?[0-9.]+/, '');\n                switch (unit) {\n                    case '':\n                        return value;\n                    case 'px':\n                        return value * 1;\n\n                    case 'in':\n                        return value * 96;\n                    case 'pc':\n                        return value * 96 / 6;\n                    case 'pt':\n                        return value * 96 / 6 / 12;\n\n                    case 'cm':\n                        return value * 96 / 2.54;\n                    case 'mm':\n                        return value * 96 / 2.54 / 10;\n                    case 'Q':\n                        return value * 96 / 2.54 / 10 / 4;\n                }\n\n                // relative(very very complex, use actual value)\n                const backup = this.getAttribute('style');\n                try {\n                    this.style.marginBottom = cssLength;\n                    return parseFloat(this.$window.getComputedStyle(this).marginBottom);\n                }\n                finally {\n                    if (backup == null) {\n                        this.removeAttribute('style');\n                    }\n                    else {\n                        this.setAttribute('style', backup);\n                    }\n                }\n            },\n            /**\n             * get left/top absolute/relative node\n             *\n             * @param {{relative?: Boolean, margin?: Boolean}} [options={}]\n             * @return {{left: Number, top: Number}}\n             */\n            $offset(options = {}) {\n                options = Object.assign({\n                    relative: false,\n                    margin: false,\n                }, options);\n                kQuery.logger.assertInstanceOf(options, Object)();\n\n                let marginLeft = 0;\n                let marginTop = 0;\n                if (!options.margin) {\n                    const cstyle = this.$window.getComputedStyle(this);\n                    marginLeft = parseFloat(cstyle.marginLeft);\n                    marginTop = parseFloat(cstyle.marginTop);\n                }\n\n                if (options.relative) {\n                    return {\n                        left: this.offsetLeft - marginLeft,\n                        top: this.offsetTop - marginTop,\n                    };\n                }\n\n                const box = this.getBoundingClientRect();\n                return {\n                    left: box.left + window.scrollX - document.documentElement.clientLeft - marginLeft,\n                    top: box.top + window.scrollY - document.documentElement.clientTop - marginTop,\n                };\n            },\n            /**\n             * get width/height irrespective of css\n             *\n             * ```\n             * \u250Cmargin\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                                                                              \u2502\n             * \u2502   \u250Cborder\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n             * \u2502   \u2502                                                                    \u2502   \u2502\n             * \u2502   \u2502   \u250Cpadding \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252CSB\u2510   \u2502   \u2502\n             * \u2502   \u2502   \u2502                                                      \u2502  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u2502   \u250Ccontent\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u2502   \u2502                                                 \u2502  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u2502   \u2514-\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u2502                                                      \u2502  \u2502   \u2502   \u2502\n             * \u2502   \u2502   \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2524   \u2502   \u2502\n             * \u2502   \u2502   \u251Cscroll bar\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u2502   \u2502\n             * \u2502   \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502   \u2502\n             * \u2502   \u2502                                                                    \u2502   \u2502\n             * \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n             * \u2502                                                                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * ```\n             *\n             * @param {String|{scroll?: Boolean, margin?: Boolean, border?: Boolean, padding?: Boolean, scrollbar?: Boolean}} [options={}]\n             * @return {{width: Number, height: Number}}\n             */\n            $size(options = {}) {\n                if (typeof (options) === 'string') {\n                    const presets = {\n                        '': {\n                            scrollbar: true,\n                        },\n                        client: {\n                            padding: true,\n                        },\n                        inner: {\n                            padding: true,\n                            scrollbar: true,\n                        },\n                        offset: {\n                            padding: true,\n                            border: true,\n                        },\n                        outer: {\n                            padding: true,\n                            border: true,\n                            scrollbar: true,\n                        },\n                        margin: {\n                            padding: true,\n                            border: true,\n                            margin: true,\n                            scrollbar: true,\n                        },\n                    };\n                    options = presets[options];\n                }\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    scroll: false,\n                    margin: false,\n                    border: false,\n                    padding: false,\n                    scrollbar: false,\n                }, options);\n\n                const box = boxsize(this);\n\n                let width = options.scroll ? this.scrollWidth : box.contentWidth;\n                let height = options.scroll ? this.scrollHeight : box.contentHeight;\n\n                if (options.margin) {\n                    width += box.marginWidth;\n                    height += box.marginHeight;\n                }\n                if (options.border) {\n                    width += box.borderWidth;\n                    height += box.borderHeight;\n                }\n                if (options.padding) {\n                    width += box.paddingWidth;\n                    height += box.paddingHeight;\n                }\n                if (options.scrollbar && !options.scroll) {\n                    width += box.scrollbarWidth;\n                    height += box.scrollbarHeight;\n                }\n\n                return {width, height};\n            },\n            /**\n             * get/set width irrespective of css\n             *\n             * @param {Number|String|{scroll?: Boolean, margin?: Boolean, border?: Boolean, padding?: Boolean, scrollbar?: Boolean}} [options={}]\n             * @return {Number}\n             */\n            $width(options = {}) {\n                if (typeof (options) === 'number' || typeof (options) === 'string') {\n                    if (F.stringIsNaN(options)) {\n                        kQuery.logger.error(`options(${options}) is NaN`);\n                    }\n                    let size = this.$cssPixel(options);\n                    const cstyle = this.$window.getComputedStyle(this);\n                    if (cstyle.boxSizing !== 'border-box') {\n                        const box = boxsize(this);\n                        size -= box.borderWidth + box.paddingWidth;\n                    }\n                    this.style.width = size + 'px';\n                    return size;\n                }\n\n                return this.$size(options).width;\n            },\n            /**\n             * get/set height irrespective of css\n             *\n             * @param {Number|String|{scroll?: Boolean, margin?: Boolean, border?: Boolean, padding?: Boolean, scrollbar?: Boolean}} [options={}]\n             * @return {Number}\n             */\n            $height(options = {}) {\n                if (typeof (options) === 'number' || typeof (options) === 'string') {\n                    if (F.stringIsNaN(options)) {\n                        kQuery.logger.error(`options(${options}) is NaN`);\n                    }\n                    let size = this.$cssPixel(options);\n                    const cstyle = this.$window.getComputedStyle(this);\n                    if (cstyle.boxSizing !== 'border-box') {\n                        const box = boxsize(this);\n                        size -= box.borderHeight + box.paddingHeight;\n                    }\n                    this.style.height = size + 'px';\n                    return size;\n                }\n\n                return this.$size(options).height;\n            },\n            /**\n             * get closest scrollable parent\n             *\n             * @param {{height: Boolean, width: Boolean}} scrollableOptions\n             * @return {?Element}\n             */\n            $scrollParent(scrollableOptions = {height: true, width: true}) {\n                kQuery.logger.assertInstanceOf(scrollableOptions, Object)();\n\n                if (scrollableOptions.height && this.scrollHeight > this.clientHeight) {\n                    return this;\n                }\n                if (scrollableOptions.width && this.scrollWidth > this.clientWidth) {\n                    return this;\n                }\n                return this.parentElement?.$scrollParent(scrollableOptions) ?? null;\n            },\n        },\n        [[DOMRectReadOnly.name]]: /** @lends DOMRectReadOnly.prototype */{\n            /**\n             * contains other Geometry interfaces\n             *\n             * ```\n             * true:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502   \u250Cother \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n             * \u2502   \u2502                    \u2502   \u2502\n             * \u2502   \u2502                    \u2502   \u2502\n             * \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             *\n             * false:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502              \u250Cother \u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2510\n             * \u2502              \u2502              \u2502    \u2502\n             * \u2502              \u2502              \u2502    \u2502\n             * \u2502              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2518\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             *\n             * false:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502                              \u2502    \u250Cother \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502    \u2502                    \u2502\n             * \u2502                              \u2502    \u2502                    \u2502\n             * \u2502                              \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * ```\n             *\n             * @param {DOMRectReadOnly|DOMPointReadOnly} other\n             * @return {Boolean}\n             */\n            $contains(other) {\n                if (other instanceof DOMPointReadOnly) {\n                    return (\n                        this.left <= other.x && other.x <= this.right &&\n                        this.top <= other.y && other.y <= this.bottom\n                    );\n                }\n                if (other instanceof DOMRectReadOnly) {\n                    return (\n                        this.$contains(new DOMPoint(other.left, other.top)) &&\n                        this.$contains(new DOMPoint(other.right, other.top)) &&\n                        this.$contains(new DOMPoint(other.left, other.bottom)) &&\n                        this.$contains(new DOMPoint(other.right, other.bottom))\n                    );\n                }\n                throw new Error(`Unknown type(${other.constructor.name})`);\n            },\n            /**\n             * intersect other Geometry interfaces\n             *\n             * ```\n             * true:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502   \u250Cother \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n             * \u2502   \u2502                    \u2502   \u2502\n             * \u2502   \u2502                    \u2502   \u2502\n             * \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             *\n             * true:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502              \u250Cother \u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2510\n             * \u2502              \u2502              \u2502    \u2502\n             * \u2502              \u2502              \u2502    \u2502\n             * \u2502              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2518\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             *\n             * false:\n             * \u250Cthis\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502\n             * \u2502                              \u2502    \u250Cother \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             * \u2502                              \u2502    \u2502                    \u2502\n             * \u2502                              \u2502    \u2502                    \u2502\n             * \u2502                              \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * \u2502                              \u2502\n             * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             * ```\n             *\n             * @param {DOMRectReadOnly|DOMPointReadOnly} other\n             * @return {Boolean}\n             */\n            $intersects(other) {\n                if (other instanceof DOMPointReadOnly) {\n                    return (\n                        this.left <= other.x && other.x <= this.right &&\n                        this.top <= other.y && other.y <= this.bottom\n                    );\n                }\n                if (other instanceof DOMRectReadOnly) {\n                    return (\n                        this.$intersects(new DOMPoint(other.left, other.top)) ||\n                        this.$intersects(new DOMPoint(other.right, other.top)) ||\n                        this.$intersects(new DOMPoint(other.left, other.bottom)) ||\n                        this.$intersects(new DOMPoint(other.right, other.bottom))\n                    );\n                }\n                throw new Error(`Unknown type(${other.constructor.name})`);\n            },\n        },\n    };\n}\n", "import {$NodeList, Nullable, Promise, Timer, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function effects(kQuery) {\n    const handleArguments = function (args) {\n        if (typeof (args[0]) === 'number') {\n            args[1] ??= {};\n            args[1].duration = args[0];\n            args[0] = args[1];\n        }\n        return Object.assign({\n            initial: {},\n            reset: true,\n        }, args[0]);\n    };\n\n    const nodeStyleBackup = new WeakMap();\n    const nodeWillChangeBackup = new WeakMap();\n\n    const willChangeTimer = new Timer();\n    willChangeTimer.addEventListener('alarm', function () {\n        for (const [e, backup] of nodeWillChangeBackup.entries()) {\n            e.style.setProperty('will-change', backup);\n        }\n        nodeWillChangeBackup.clear();\n    });\n\n    return {\n        [[Element.name, $NodeList.name]]: /** @lends Element.prototype */{\n            /**\n             * change css will-change property\n             *\n             * changes are undone after a certain amount of time\n             *\n             * @param {String|Array} value\n             * @param {Number} [timeout=1000]\n             * @return {this}\n             */\n            $willChange(value, timeout = 1000) {\n                kQuery.logger.assertInstanceOf(value, String, Array)();\n                kQuery.logger.assertInstanceOf(timeout, Number)();\n\n                value = value instanceof Array ? value : [value];\n\n                const current = this.style.getPropertyValue('will-change');\n                nodeWillChangeBackup.getOrSet(this, () => current);\n                if (current) {\n                    value.push(current);\n                }\n\n                this.style.setProperty('will-change', [...new Set(value)].join(','));\n\n                // will-change should be set collectively\n                willChangeTimer.restart(timeout, 1);\n\n                return this;\n            },\n            /**\n             * change css with transition\n             *\n             * options.initial: first css styles\n             * options.reset: reset all when finish\n             * options.duration: reference transition css\n             * options.timing: reference transition css\n             *\n             * @param {Object} properties\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $transition(properties, options) {\n                kQuery.logger.assertInstanceOf(properties, Object)();\n                kQuery.logger.assertInstanceOf(options, Nullable, Object)();\n\n                options = Object.assign({\n                    initial: {},\n                    reset: false,\n                    duration: 400,\n                    timing: 'ease',\n                }, options);\n\n                const current = nodeStyleBackup.getOrSet(this, () => ({\n                    count: 0,\n                    style: this.getAttribute('style'),\n                    transitionValue: this.style.getPropertyValue('transition') ?? '',\n                    transitionPriority: this.style.getPropertyPriority('transition') ?? '',\n                }));\n                current.count++;\n\n                for (const [css, value] of Object.entries(options.initial)) {\n                    this.style.setProperty(css, value, 'important');\n                }\n                this.getClientRects(); // force reflow/repaint\n\n                const currentTransitions = (this.style.getPropertyValue('transition') ?? '').split(',').filter((v) => v);\n                for (const [css, value] of Object.entries(properties)) {\n                    this.style.setProperty(css, value, 'important');\n                    currentTransitions.push(`${css} ${options.duration}ms ${options.timing}`);\n                }\n                this.style.setProperty('transition', currentTransitions.join(','), 'important');\n\n                let resolve, reject;\n                const promise = new Promise((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                const complete = () => {\n                    this.removeEventListener('transitionend', listener);\n\n                    const current = nodeStyleBackup.get(this);\n                    if (--current.count === 0) {\n                        nodeStyleBackup.delete(this);\n\n                        if (options.reset) {\n                            this.setAttribute('style', current.style);\n                        }\n                        else {\n                            this.style.setProperty('transition', current.transitionValue, current.transitionPriority);\n                            for (const [css, value] of Object.entries(properties)) {\n                                this.style.setProperty(css, value, '');\n                            }\n                        }\n                    }\n                };\n                const queue = new Set(Object.keys(properties));\n                const listener = (e) => {\n                    queue.delete(e.propertyName);\n                    if (queue.size === 0) {\n                        clearTimeout(timer);\n                        complete();\n                        resolve(true);\n                    }\n                };\n                const timer = setTimeout(function () {\n                    complete();\n                    resolve(false);\n                    //reject(this);\n                }, options.duration + 32);\n                this.addEventListener('transitionend', listener);\n                return promise;\n            },\n            /**\n             * fade in element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             *\n             * @example\n             * node.hidden = false;\n             * await node.$fadeIn();\n             */\n            async $fadeIn(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    opacity: 0,\n                });\n                return this.$transition({\n                    opacity: cstyle.opacity,\n                }, opts);\n            },\n            /**\n             * fade out element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             *\n             * @example\n             * await node.$fadeOut();\n             * node.hidden = true;\n             */\n            async $fadeOut(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    opacity: cstyle.opacity,\n                });\n                return this.$transition({\n                    opacity: 0,\n                }, opts);\n            },\n            /**\n             * slide to down element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $slideDown(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    overflow: 'hidden',\n                    height: 0,\n                    \"margin-top\": 0,\n                    \"margin-bottom\": 0,\n                    \"padding-top\": 0,\n                    \"padding-bottom\": 0,\n                });\n                return this.$transition({\n                    height: parseFloat(cstyle.height),\n                    \"margin-top\": parseFloat(cstyle.marginTop),\n                    \"margin-bottom\": parseFloat(cstyle.marginBottom),\n                    \"padding-top\": parseFloat(cstyle.paddingTop),\n                    \"padding-bottom\": parseFloat(cstyle.paddingBottom),\n                }, opts);\n            },\n            /**\n             * slide to top element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $slideUp(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    overflow: 'hidden',\n                    height: parseFloat(cstyle.height),\n                    \"margin-top\": parseFloat(cstyle.marginTop),\n                    \"margin-bottom\": parseFloat(cstyle.marginBottom),\n                    \"padding-top\": parseFloat(cstyle.paddingTop),\n                    \"padding-bottom\": parseFloat(cstyle.paddingBottom),\n                });\n                return this.$transition({\n                    height: 0,\n                    \"margin-top\": 0,\n                    \"margin-bottom\": 0,\n                    \"padding-top\": 0,\n                    \"padding-bottom\": 0,\n                }, opts);\n            },\n            /**\n             * slide to right element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $slideRight(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    overflow: 'hidden',\n                    width: 0,\n                    \"margin-left\": 0,\n                    \"margin-right\": 0,\n                    \"padding-left\": 0,\n                    \"padding-right\": 0,\n                    \"max-height\": parseFloat(cstyle.height),\n                });\n                return this.$transition({\n                    width: parseFloat(cstyle.width),\n                    \"margin-left\": parseFloat(cstyle.marginLeft),\n                    \"margin-right\": parseFloat(cstyle.marginRight),\n                    \"padding-left\": parseFloat(cstyle.paddingLeft),\n                    \"padding-right\": parseFloat(cstyle.paddingRight),\n                }, opts);\n            },\n            /**\n             * slide to left element\n             *\n             * this does not involve visibility, you have to do it ourselves.\n             *\n             * @param {Number|Object} [durationOrOptions=400]\n             * @param {Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $slideLeft(durationOrOptions = 400, options = {}) {\n                const opts = handleArguments(arguments);\n                const cstyle = this.$window.getComputedStyle(this);\n\n                opts.initial = Object.assign(opts.initial, {\n                    overflow: 'hidden',\n                    width: parseFloat(cstyle.width),\n                    \"margin-left\": parseFloat(cstyle.marginLeft),\n                    \"margin-right\": parseFloat(cstyle.marginRight),\n                    \"padding-left\": parseFloat(cstyle.paddingLeft),\n                    \"padding-right\": parseFloat(cstyle.paddingRight),\n                    \"max-height\": parseFloat(cstyle.height),\n                });\n                return this.$transition({\n                    width: 0,\n                    \"margin-left\": 0,\n                    \"margin-right\": 0,\n                    \"padding-left\": 0,\n                    \"padding-right\": 0,\n                }, opts);\n            },\n        },\n    };\n}\n", "import {$NodeList, F, Nullable} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function forms(kQuery) {\n    // 01234567890123456789012345678\n    // 2000-01-23T12:34:56.789+09:00\n    // 2000-W12-7\n    const toLocalISOString = function (date, format) {\n        const local = new Date(+date - date.getTimezoneOffset() * 6e4);\n\n        if (format === 'notz') {\n            return local.toISOString().slice(0, -1);\n        }\n        if (format === 'full') {\n            const offset = date.getTimezoneOffset();\n            const absOffset = Math.abs(offset);\n            const offsetSign = offset > 0 ? '-' : '+';\n            const offsetHour = Math.trunc(absOffset / 60);\n            const offsetMinute = absOffset % 60;\n            const timezone = `${offsetSign}${('' + offsetHour).padStart(2, '0')}:${('' + offsetMinute).padStart(2, '0')}`;\n            return local.toISOString().slice(0, -1) + timezone;\n        }\n        if (format === 'week') {\n            const day1 = 24 * 60 * 60 * 1000;\n            const day3 = day1 * 3;\n            const day7 = day1 * 7;\n\n            const first = new Date(Math.trunc((+local + day3) / day7) * day7);\n            const firstYear = first.getUTCFullYear();\n            const weekNumber = Math.trunc((first - new Date(`${firstYear}-01-01T00:00:00Z`)) / day7) + 1;\n            const dayNumber = (local.getUTCDay() + 6) % 7 + 1;\n            return `${firstYear}-W${('' + weekNumber).padStart(2, '0')}-${dayNumber}`;\n        }\n    };\n\n    return {\n        [[FormData.name]]: /** @lends FormData.prototype */{\n            /**\n             * from Entries\n             *\n             * @param {Object} values\n             */\n            $appendFromEntries(values) {\n                for (const [name, value] of F.objectToEntries(values)) {\n                    this.append(name, value);\n                }\n                return this;\n            },\n            /**\n             * to SearchParam(unset File entry)\n             *\n             * @return {URLSearchParams}\n             */\n            $toSearchParams() {\n                const result = new URLSearchParams(this);\n                for (const [name, value] of F.objectToEntries(this)) {\n                    if (value instanceof Blob) {\n                        kQuery.logger.info(`Unset ${name} because file`);\n                        // browser behavior seems to be empty text, not deleted\n                        // result.delete(name);\n                        result.set(name, '');\n                    }\n                }\n                return result;\n            },\n            /**\n             * to Object\n             *\n             * @return {Object}\n             */\n            $toObject() {\n                const indexes = {};\n                const entries = F.objectToEntries(this).map(([name, value]) => {\n                    let names = name.split(/\\]\\[|\\[|\\]/);\n                    if (names.length > 1) {\n                        names.pop();\n                    }\n\n                    const parents = [];\n                    for (const [i, subname] of names.entries()) {\n                        if (!subname.length) {\n                            const key = parents.join('[@]');\n                            indexes[key] ??= 0;\n                            names[i] = indexes[key]++;\n                        }\n                        parents.push(subname);\n                    }\n\n                    return [names, value];\n                });\n\n                return F.entriesToObject(entries, false);\n            },\n            /**\n             * to JSON\n             *\n             * @param {String|Function} [fileConverter='base64']\n             * @return {Promise<String>}\n             */\n            async $json(fileConverter = 'base64') {\n                const object = await F.objectWalkRecursive(this.$toObject(), async function (value) {\n                    if (value instanceof Blob) {\n                        value = (function () {\n                            if (fileConverter === 'text') {\n                                return value.$text();\n                            }\n                            if (fileConverter === 'base64') {\n                                return value.$base64();\n                            }\n                            if (typeof (fileConverter) === 'function') {\n                                return fileConverter(value);\n                            }\n                            throw new Error(`Unknown convert(${fileConverter})`);\n                        })();\n                    }\n                    return value;\n                });\n                return JSON.stringify(object);\n            },\n        },\n        [[HTMLInputElement.name, $NodeList.name]]: /** @lends HTMLInputElement.prototype */{\n            /**\n             * get input value as date\n             *\n             * datetime-like's valueAsDate is UTC timezone, but this property is local timezone\n             *\n             * @descriptor get\n             *\n             * @return {Date}\n             *\n             * @example\n             * <input id=\"time\" type=\"time\">\n             *\n             * $('#time').value = '12:34';\n             * $('#time').valueAsDate;     // Thu Jan 01 1970 21:34:00 GMT+0900\n             * $('#time').$valueAsDate;    // Thu Jan 01 1970 12:34:00 GMT+0900\n             */\n            get $valueAsDate() {\n                // precdondition\n                if (!this.value) {\n                    return null;\n                }\n\n                // datetime-local doesn't have valueAsDate\n                if (this.type === 'datetime-local') {\n                    return new Date(this.value);\n                }\n\n                // other.valueAsDate is UTC\n                if ('valueAsDate' in this) {\n                    return new Date(this.valueAsDate.getTime() + this.valueAsDate.getTimezoneOffset() * 6e4);\n                }\n            },\n            /**\n             * set input value as date\n             *\n             * datetime-like's valueAsDate is UTC timezone, but this property is local timezone\n             * and triming value the format(by step|value)\n             *\n             * @descriptor set\n             *\n             * @param {?Date} value\n             *\n             * @example\n             * <input id=\"time0\" type=\"time\" step=\"\">\n             * <input id=\"time1\" type=\"time\" step=\"1\">\n             *\n             * $('#time0').valueAsDate = new Date('2014-12-24T12:34:56.789');\n             * $('#time1').valueAsDate = new Date('2014-12-24T12:34:56.789');\n             * $('#time0').value; // '03:34:56.789'\n             * $('#time1').value; // '03:34:56.789'\n             *\n             * $('#time0').$valueAsDate = new Date('2014-12-24T12:34:56.789');\n             * $('#time1').$valueAsDate = new Date('2014-12-24T12:34:56.789');\n             * $('#time0').value; // '12:34'\n             * $('#time1').value; // '12:34:56'\n             */\n            set $valueAsDate(value) {\n                // precdondition\n                if (value == null) {\n                    return;\n                }\n                if (!(value instanceof Date)) {\n                    // emulate native error\n                    this.valueAsDate = value;\n                    return;\n                }\n\n                // datetime-local doesn't have valueAsDate\n                if (this.type === 'datetime-local') {\n                    const strtime = toLocalISOString(value, 'notz');\n                    if (this.value !== '') {\n                        this.$value = strtime.slice(0, this.value.length);\n                    }\n                    else if (!this.step) {\n                        this.$value = strtime.slice(0, 16);\n                    }\n                    else if (this.step.includes('.')) {\n                        this.$value = strtime.slice(0, 23);\n                    }\n                    else {\n                        this.$value = strtime.slice(0, 19);\n                    }\n                    return;\n                }\n\n                // other.valueAsDate is UTC\n                if (this.type === 'month') {\n                    return this.$value = toLocalISOString(value, 'notz').slice(0, 7);\n                }\n                if (this.type === 'week') {\n                    return this.$value = toLocalISOString(value, 'week').slice(0, 8);\n                }\n                if (this.type === 'date') {\n                    return this.$value = toLocalISOString(value, 'notz').slice(0, 10);\n                }\n                if (this.type === 'time') {\n                    const strtime = toLocalISOString(value, 'notz');\n                    if (this.value !== '') {\n                        this.$value = strtime.slice(11, 11 + this.value.length);\n                    }\n                    else if (!this.step) {\n                        this.$value = strtime.slice(11, 16);\n                    }\n                    else if (this.step.includes('.')) {\n                        this.$value = strtime.slice(11, 23);\n                    }\n                    else {\n                        this.$value = strtime.slice(11, 19);\n                    }\n                }\n            },\n            /**\n             * get input value as number\n             *\n             * datetime-like delegates to $valueAsDate, and other work the same as native\n             *\n             * @descriptor get\n             *\n             * @return {Number}\n             */\n            get $valueAsNumber() {\n                // precdondition\n                if (!this.value) {\n                    return Number.NaN;\n                }\n\n                if (['datetime-local', 'month', 'week', 'date', 'time'].includes(this.type)) {\n                    return this.$valueAsDate.getTime();\n                }\n                if ('valueAsNumber' in this) {\n                    return this.valueAsNumber;\n                }\n\n                return Number.NaN;\n            },\n            /**\n             * set input value as number\n             *\n             * datetime-like delegates to $valueAsDate, and other work the same as native\n             *\n             * @descriptor set\n             *\n             * @param {?Number} value\n             */\n            set $valueAsNumber(value) {\n                // precdondition\n                if (isNaN(value) || value == null) {\n                    return;\n                }\n\n                if (['datetime-local', 'month', 'week', 'date', 'time'].includes(this.type)) {\n                    return this.$valueAsDate = new Date(+value);\n                }\n                if ('valueAsNumber' in this) {\n                    this.valueAsNumber = value;\n                }\n            },\n        },\n        [[HTMLInputElement.name, RadioNodeList.name, $NodeList.name]]: /** @lends HTMLInputCheckableElement.prototype */{\n            /**\n             * get input indeterminate\n             *\n             * returns undefined if not checkbox and supports RadioNodeList.\n             *\n             * @descriptor get\n             *\n             * @return {?Boolean}\n             */\n            get $indeterminate() {\n                if (this instanceof RadioNodeList) {\n                    return this.value === '';\n                }\n                if (this.type !== 'checkbox') {\n                    return undefined;\n                }\n                return this.indeterminate;\n            },\n            /**\n             * set input indeterminate\n             *\n             * accepts Array of Boolean\n             * - empty(e.g.[null, undefined])\n             *   - indeterminate=false\n             *   - checked no touch\n             * - all false(e.g.[false, ..., false])\n             *   - indeterminate=false\n             *   - checked=false\n             * - all true(e.g.[true, ..., true])\n             *   - indeterminate=false\n             *   - checked=true\n             * - mixed(e.g.[true, false, true])\n             *   - indeterminate=true\n             *   - checked no touch\n             *\n             * @descriptor set\n             *\n             * @param {Boolean|Boolean[]} value\n             */\n            set $indeterminate(value) {\n                kQuery.logger.assertInstanceOf(value, Boolean, Array)();\n\n                if (this instanceof RadioNodeList) {\n                    if (!value) {\n                        kQuery.logger.error(`RadioNodeList's $indeterminate is readonly`);\n                    }\n                    this.forEach(e => e.checked = false);\n                    return;\n                }\n\n                if (this.type !== 'checkbox') {\n                    return;\n                }\n                if (!(value instanceof Array)) {\n                    this.indeterminate = value;\n                    return;\n                }\n\n                value = value.filter(v => v != null);\n                // empty\n                if (value.length === 0) {\n                    this.indeterminate = false;\n                }\n                // all false\n                else if (value.every(v => !v)) {\n                    this.indeterminate = false;\n                    this.$value = null;\n                }\n                // all true\n                else if (value.every(v => v)) {\n                    this.indeterminate = false;\n                    this.$value = this.value;\n                }\n                // mixed\n                else {\n                    this.indeterminate = true;\n                }\n            },\n        },\n        [[HTMLInputElement.name, HTMLTextAreaElement.name, HTMLSelectElement.name, $NodeList.name]]: /** @lends HTMLInputLikeElement.prototype */{\n            /**\n             * get input default value\n             *\n             * Unify the individual implementations of input\n             *\n             * - simple input: defaultValue\n             * - radiobox/checkbox: defaultChecked\n             * - select: defaultSelected\n             * - file: always null or []\n             *\n             * @descriptor get\n             *\n             * @return {null|String|Array}\n             */\n            get $defaultValue() {\n                if (['select-one'].includes(this.type)) {\n                    return Array.prototype.find.call(this.options, option => option.defaultSelected)?.value ?? null;\n                }\n                if (['select-multiple'].includes(this.type)) {\n                    return [...this.options].filter(option => option.defaultSelected).map(option => option.value);\n                }\n                if (['radio', 'checkbox'].includes(this.type)) {\n                    return this.defaultChecked ? this.value : null;\n                }\n                if (['file'].includes(this.type)) {\n                    // HTML specifications is no default for file, so it always returns null to avoid unnecessary confusion\n                    return this.multiple ? [] : null;\n                }\n                if (this.type) {\n                    return this.defaultValue;\n                }\n            },\n            /**\n             * set input default value\n             *\n             * - simple input: defaultValue\n             * - radiobox/checkbox: defaultChecked\n             * - select: defaultSelected\n             * - file: do nothing\n             *\n             * @descriptor set\n             */\n            set $defaultValue(value) {\n                if (['select-one'].includes(this.type)) {\n                    value = '' + value;\n                    for (const option of this.options) {\n                        option.defaultSelected = option.value === value;\n                    }\n                }\n                else if (['select-multiple'].includes(this.type)) {\n                    const values = (value instanceof Array ? value : [value]).map(v => '' + v);\n                    for (const option of this.options) {\n                        option.defaultSelected = values.includes(option.value);\n                    }\n                }\n                else if (['radio', 'checkbox'].includes(this.type)) {\n                    this.defaultChecked = this.value === value;\n                }\n                else if (['file'].includes(this.type)) {\n                    // do nothing\n                }\n                else if (this.type) {\n                    this.defaultValue = value;\n                }\n            },\n            /**\n             * get input value\n             *\n             * - simple input: String\n             * - radiobox: checked String or null\n             * - checkbox: checked String or null\n             * - select(single): selected String or null\n             * - select(multiple): selected Array always\n             * - file(single): File or null\n             * - file(multiple): FileList always\n             *\n             * @descriptor get\n             *\n             * @return {null|String|Array|File|FileList}\n             */\n            get $value() {\n                if (['select-one'].includes(this.type)) {\n                    // https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/value\n                    // A string containing the value of the first selected <option> element in this <select> element,\n                    // or the empty string if no options are selected.\n                    return Array.prototype.find.call(this.options, option => option.selected)?.value ?? null;\n                }\n                if (['select-multiple'].includes(this.type)) {\n                    return [...this.options].filter(option => option.selected).map(option => option.value);\n                }\n                if (['radio', 'checkbox'].includes(this.type)) {\n                    return this.checked ? this.value : null;\n                }\n                if (['file'].includes(this.type)) {\n                    return this.multiple ? this.files : this.files[0] ?? null;\n                }\n                if (this.type) {\n                    return this.value;\n                }\n            },\n            /**\n             * set input value\n             *\n             * - simple input: must be String\n             * - radiobox: must be String\n             * - checkbox: must be String\n             * - select(single): must be String\n             * - select(multiple): must be Array\n             * - file(single): must be File|FileList\n             * - file(multiple): must be FileList\n             *\n             * this trigger $change event\n             *\n             * @descriptor set\n             */\n            set $value(value) {\n                let changed = false;\n\n                if (['select-one'].includes(this.type)) {\n                    if (this.value !== value) {\n                        this.value = value;\n                        changed = true;\n                    }\n                }\n                else if (['select-multiple'].includes(this.type)) {\n                    const values = (value instanceof Array ? value : [value]).filter(v => v !== null).map(v => '' + v);\n                    for (const option of this.options) {\n                        const selected = values.includes(option.value);\n                        if (option.selected !== selected) {\n                            option.selected = selected;\n                            changed = true;\n                        }\n                    }\n                }\n                else if (['radio', 'checkbox'].includes(this.type)) {\n                    const checked = this.value === value;\n                    if (this.checked !== checked) {\n                        this.checked = checked;\n                        changed = true;\n                    }\n                }\n                else if (['file'].includes(this.type)) {\n                    const files = Array.from(this.files, (f) => f.name).join('/');\n                    if (value instanceof File) {\n                        if (value.name !== files) {\n                            const dataTransfer = new DataTransfer();\n                            dataTransfer.items.add(value);\n                            this.files = dataTransfer.files;\n                            changed = true;\n                        }\n                    }\n                    else if (value instanceof FileList) {\n                        if (Array.from(value, (f) => f.name).join('/') !== files) {\n                            this.files = value;\n                            changed = true;\n                        }\n                    }\n                }\n                else if (this.type) {\n                    if (this.value !== value) {\n                        this.value = value;\n                        changed = true;\n                    }\n                }\n\n                if (changed) {\n                    this.dispatchEvent(new Event('$change', {\n                        bubbles: true,\n                    }));\n                }\n            },\n            /**\n             * clear input value\n             *\n             * clear doesn't mean reset. all input set blank, uncheck, unselect, empty file\n             *\n             * @return {this}\n             */\n            $clear() {\n                if (['select-one', 'select-multiple'].includes(this.type)) {\n                    this.$value = null;\n                }\n                else if (['radio', 'checkbox'].includes(this.type)) {\n                    this.$value = null;\n                }\n                else if (['file'].includes(this.type)) {\n                    this.$value = new DataTransfer().files;\n                }\n                else if (this.type) {\n                    this.$value = '';\n                }\n\n                return this;\n            },\n            /**\n             * writeback value to attribute\n             *\n             * @return {this}\n             */\n            $resetAttribute() {\n                if (['select-one', 'select-multiple'].includes(this.type)) {\n                    Array.from(this.options).forEach(option => option.toggleAttribute('selected', option.selected));\n                }\n                else if (this.type === 'textarea') {\n                    this.textContent = this.value;\n                }\n                else if (['radio', 'checkbox'].includes(this.type)) {\n                    this.toggleAttribute('checked', this.checked);\n                }\n                else {\n                    this.setAttribute('value', this.value);\n                }\n\n                return this;\n            },\n        },\n        [[HTMLSelectElement.name, HTMLDataListElement.name, $NodeList.name]]: /** @lends HTMLOptionableElement.prototype */{\n            /**\n             * set option elements\n             *\n             * preserveValue\n             * - false: fully replace all options, selection state is lost\n             * - true: fully replace all options, selection state is kept\n             * - String: keep selected options and insertion method\n             *\n             * @param {HTMLOptionElement[]|HTMLOptGroupElement[]|Object} options\n             * @param {Boolean|String} [preserveValue]\n             * @return {this}\n             *\n             * @example\n             * // object mode\n             * $('select').$options({\n             *     a1: 'A1',\n             *     a2: {label: 'A1', 'data-custom': 'custom'},\n             *     b1: {label: 'B1', optgroup: 'optgroup'},\n             *     b2: {label: 'B2', optgroup: 'optgroup'},\n             *     c1: document.$createElement('option', {label: 'C1'}),\n             * });\n             * // array mode\n             * $('select').$options([\n             *     'a1',\n             *     {value: 'a1', label: 'A1', 'data-custom': 'custom'},\n             *     {value: 'b1', label: 'B1', optgroup: 'optgroup'},\n             *     {value: 'b2', label: 'B2', optgroup: 'optgroup'},\n             *     document.$createElement('option', {value: 'c1', label: 'C1'}),\n             * ]);\n             */\n            $options(options, preserveValue = undefined) {\n                kQuery.logger.assertInstanceOf(options, Object, Array)();\n                preserveValue ??= this instanceof HTMLSelectElement ? 'append' : null;\n                kQuery.logger.assertInstanceOf(preserveValue, Nullable, Boolean, String)();\n\n                // browser behaves scroll when scrolling is enabled\n                // - scroll to the last element\n                // - but not every time, sometimes it scrolls to selected element\n                this.$willChange('scroll-position');\n                const scroll = {\n                    top: this.scrollTop,\n                    left: this.scrollLeft,\n                };\n                const recover = () => {\n                    this.scrollTop = scroll.top;\n                    this.scrollLeft = scroll.left;\n                };\n\n                const build = (data) => {\n                    const optgroups = {};\n                    const options = [];\n                    for (let [value, label] of F.objectToEntries(data)) {\n                        if (label instanceof Array) {\n                            options.push(this.$document.$createElement('optgroup', {label: value}, ...build(label)));\n                        }\n                        else if (label instanceof Node) {\n                            label.value ||= value;\n                            options.push(label);\n                        }\n                        else if (F.objectIsPlain(label)) {\n                            label = {...label};\n                            label.value ??= value;\n                            label.title ??= label.label;\n                            if (label.optgroup) {\n                                const optgroup = label.optgroup;\n                                delete label.optgroup;\n                                if (!optgroups[optgroup]) {\n                                    optgroups[optgroup] = this.$document.$createElement('optgroup', {label: optgroup});\n                                    options.push(optgroups[optgroup]);\n                                }\n                                optgroups[optgroup].append(this.$document.$createElement('option', label, label.label));\n                            }\n                            else {\n                                options.push(this.$document.$createElement('option', label, label.label));\n                            }\n                        }\n                        else {\n                            options.push(this.$document.$createElement('option', {value: value, title: label}, label));\n                        }\n                    }\n                    return options;\n                };\n                options = build(options);\n\n                const $value = preserveValue ? this.$value : null;\n\n                if (preserveValue && typeof (preserveValue) === 'string') {\n                    const $values = ($value instanceof Array ? $value : [$value]).filter(v => v != null).map(v => '' + v);\n\n                    // remove not preserve\n                    this.$$('option').$except(o => $values.includes(o.value)).forEach(e => e.remove());\n                    this.$$('optgroup').$except(o => o.$contains('option')).forEach(e => e.remove());\n                    this.$$('hr.kQuery-option-separator').forEach(e => e.remove());\n\n                    // merge optgroup\n                    for (const optgroup of this.$$('optgroup')) {\n                        const nexts = optgroup.$nextElements(`optgroup[label=\"${F.stringEscape(optgroup.label ?? '', 'selector')}\"]`);\n                        for (const next of [...nexts]) {\n                            optgroup[preserveValue](...next.$$('option'));\n                            if (!next.$contains('option')) {\n                                next.remove();\n                            }\n                        }\n                    }\n\n                    // insert new options\n                    this[preserveValue](this.$document.$createElement('hr', {class: 'kQuery-option-separator'}));\n                    this[preserveValue](...options);\n\n                    // remove current option from new options\n                    const filter = function (options) {\n                        return options.filter(o => {\n                            if (o instanceof HTMLOptionElement && $values.includes(o.value)) {\n                                o.remove();\n                                return false;\n                            }\n                            if (o instanceof HTMLOptGroupElement) {\n                                if (!filter([...o.$$('option')]).length) {\n                                    o.remove();\n                                    return false;\n                                }\n                            }\n                            return true;\n                        });\n                    };\n                    filter(options);\n                }\n                else {\n                    this.$replaceChildren(...options);\n                }\n\n                if (preserveValue) {\n                    this.$value = $value;\n                }\n\n                // first animation frame: browser scrolls to selected option\n                // second animation frame: recover scroll position\n                requestAnimationFrame(() => requestAnimationFrame(recover));\n\n                return this;\n            },\n        },\n        [[HTMLFormElement.name, $NodeList.name]]: /** @lends HTMLFormElement.prototype */{\n            /**\n             * writeback value to attribute\n             *\n             * @return {this}\n             */\n            $resetAttribute() {\n                this.elements.$resetAttribute();\n                return this;\n            },\n        },\n    };\n}\n", "import {$NodeList, F, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function manipulation(kQuery) {\n    const styleSheetMap = new Map();\n    const renderedNodes = new WeakMap();\n    const normalizeNodes = function (nodes) {\n        return [...nodes].flatMap(node => node instanceof NodeList ? [...node] : node);\n    };\n\n    class Value {\n        constructor(value) {\n            this.value = value;\n        }\n\n        toString() {\n            return '' + this.value;\n        }\n    }\n\n    return {\n        [[Window.name]]: /** @lends Window.prototype */{\n            /**\n             * jQuery like selector\n             *\n             * - Node/NodeList: return as it is\n             * - tag string: create and return Node/NodeList\n             * - selector string: select and return Node/NodeList\n             *\n             * returns if length is 1 then Node else NodeList (this case contains empty list)\n             *\n             * @param {String|Array|Node|NodeList|HTMLCollection} selectorFn\n             * @param {?Document} [ownerDocument]\n             * @return {Node|NodeList}\n             */\n            $query(selectorFn, ownerDocument = null) {\n                ownerDocument ??= (this ?? globalThis).document;\n\n                if (selectorFn instanceof Node || selectorFn instanceof NodeList) {\n                    return selectorFn;\n                }\n                if (selectorFn instanceof HTMLCollection) {\n                    return F.iterableToNodeList(selectorFn);\n                }\n\n                if (selectorFn instanceof Array) {\n                    const recursions = selectorFn.map(e => ownerDocument.defaultView.$query(e, ownerDocument));\n                    const nodes = [...new Set(recursions.flatMap(e => e instanceof Node ? [e] : [...e]))];\n                    return nodes.length === 1 ? nodes[0] : F.iterableToNodeList(nodes);\n                }\n\n                if (typeof (selectorFn) === 'string' && selectorFn.trim().charAt(0) === '<') {\n                    const nodes = ownerDocument.$createNodeListFromHTML(selectorFn.trim());\n                    return nodes.length === 1 ? nodes[0] : nodes;\n                }\n\n                const nodes = ownerDocument.$$(selectorFn);\n                return nodes.length === 1 ? nodes[0] : nodes;\n            },\n        },\n        [[Document.name]]: /** @lends Document.prototype */{\n            /**\n             * create Elements from html string\n             *\n             * @param {String} html\n             * @return {NodeList}\n             *\n             * @example\n             * document.$createNodeListFromHTML('<span>SPAN</span>Text<div>DIV</div>');\n             * // NodeList(3)[<span>SPAN</span>, Text, <div>DIV</div>]\n             */\n            $createNodeListFromHTML(html) {\n                kQuery.logger.assertInstanceOf(html, String)();\n\n                const template = this.createElement('template');\n                template.innerHTML = html;\n                // childNodes is living NodeList\n                return F.iterableToNodeList([...template.content.childNodes]);\n            },\n            /**\n             * create Element from tag, attributes, children\n             *\n             * - tag allows css selector like string\n             *   - but this is experimental\n             * - attributes allows bool for logical attribute\n             * - attributes.data allows nest object, convert to \"data-key=value\"\n             * - attributes.class allows array, convert to \"a b c\"\n             * - attributes.style allows object, convert to \"css:value\"\n             *\n             * @param {String} tag\n             * @param {Object<String, any|Object<String, String>>} [attributes={}]\n             * @param {...String|Node|NodeList} [children=[]]\n             * @return {Element}\n             *\n             * @example\n             * document.$createElement('span', {\n             *     logicalFalse: false,\n             *     logicalTrue: true,\n             *     data: {\n             *         a: 'a',\n             *         b: 'b',\n             *     },\n             *     class: ['a', 'b', 'c'],\n             *     style: {\n             *         color: 'red',\n             *         backgroundColor: 'red',\n             *     },\n             * }, 'plain', 'a>b');\n             * // <span logicaltrue=\"\" data-a=\"a\" data-b=\"b\" class=\"a b c\" style=\"color:red;background-color:red;\">plaina&gt;b</span>\n             *\n             * document.$createElement('span#id.c1.c2[a=A][b=B]');\n             * // <span id=\"id\" class=\"c1 c2\" a=\"A\" b=\"B\"></span>\n             */\n            $createElement(tag, attributes = {}, ...children) {\n                kQuery.logger.assertInstanceOf(tag, String)();\n                kQuery.logger.assertInstanceOf(attributes, Object)();\n\n                attributes.class = F.objectToClasses(attributes.class ?? []);\n\n                // tag#id.klass[attr=value] -> tag, attributes{id: \"id\", class: [\"klass\"], attr: \"value\"}\n                tag = tag.replaceAll(/\\#([-_0-9a-z]+)/ig, function (m0, m1) {\n                    attributes.id = m1;\n                    return '';\n                });\n                tag = tag.replaceAll(/\\.([-_0-9a-z]+)/ig, function (m0, m1) {\n                    attributes.class[m1] = true;\n                    return '';\n                });\n                tag = tag.replaceAll(/\\[([-_0-9a-z]+)(=(.+?))?\\]/ig, function (m0, m1, m2, m3) {\n                    attributes[m1] = m3 ?? '';\n                    return '';\n                });\n\n                const element = this.createElement(tag);\n\n                for (const [name, value] of Object.entries(F.objectToAttributes(attributes))) {\n                    if (typeof (value) === 'boolean') {\n                        element.toggleAttribute(name, value);\n                    }\n                    else {\n                        element.setAttribute(name, value);\n                    }\n                }\n\n                element.$append(...children);\n\n                return element;\n            },\n            /**\n             * create CSSRule\n             *\n             * - CSSRule is live, to change...\n             *   - cssRule.selectorText = 'span[attr=value]'\n             *   - cssRule.styleMap.set('color', 'red')\n             *   - cssRule.style.setProperty('color', 'red', 'important')\n             *   - or same as Element.$style\n             *     - cssRule.$style({color: 'red'})\n             *\n             * @param {?String} [media]\n             * @return {CSSRule|CSSStyleRule}\n             */\n            $createCSSRule(media) {\n                if (!styleSheetMap.has(media)) {\n                    const styleSheet = new CSSStyleSheet({\n                        baseURL: this.location.href,\n                        media: media,\n                    });\n                    styleSheetMap.set(media, styleSheet);\n                    this.adoptedStyleSheets = [...this.adoptedStyleSheets, styleSheet];\n                }\n\n                const styleSheet = styleSheetMap.get(media);\n                const index = styleSheet.insertRule(':root {}');\n                return styleSheet.cssRules.item(index);\n            },\n        },\n        [[HTMLTemplateElement.name, $NodeList.name]]: /** @lends HTMLTemplateElement.prototype */{\n            /**\n             * render template content\n             *\n             * this is experimental, very magical,evil and slow.\n             *\n             * vars:\n             * - Array: per below\n             * - String: text node\n             * - other Object: text node without escape\n             * - plain Object: render recursive\n             *\n             * rendered nodes are auto inserted to after this\n             * if specified insert:null, no inserted\n             *\n             * @param {Object|Object[]} vars\n             * @param {{escape?: String|Function, logical?: String, insert?: String}} [options={}]\n             * @return {NodeList}\n             */\n            $render(vars, options = {}) {\n                options = Object.assign({\n                    escape: 'html',\n                    logical: '---logical<false/>---',\n                    insert: 'after',\n                }, options);\n\n                const tag = function (value) {\n                    if (options.logical) {\n                        if (value === false) {\n                            return options.logical;\n                        }\n                        if (value === true) {\n                            return '';\n                        }\n                    }\n                    if (typeof (value) === 'object' && !(value instanceof Value)) {\n                        return value;\n                    }\n                    if (typeof (options.escape) === 'function') {\n                        return options.escape(value);\n                    }\n                    return F.stringEscape(value, options.escape);\n                };\n\n                const core = function (current, parent) {\n                    if (!current) {\n                        return [];\n                    }\n                    if (!(current instanceof Array)) {\n                        current = [current];\n                    }\n\n                    const elements = [];\n                    for (let [i, value] of current.entries()) {\n                        const fragment = this.content.cloneNode(true);\n\n                        if (F.anyIsPrimitive(value)) {\n                            value = new Value(value);\n                        }\n\n                        // magic values\n                        Object.assign(value, {\n                            $parent: parent,\n                            $index: i,\n                            $length: current.length,\n                            $first: i === 0,\n                            $last: i === current.length - 1,\n                        });\n\n                        // child first and remove\n                        const children = fragment.$$('template[data-slot-name]');\n                        for (const child of children) {\n                            child.after(...core.call(child, value[child.dataset.slotName], value));\n                            child.remove();\n                        }\n\n                        // render\n                        kQuery.logger.assert(() => fragment.$contains(e => !e.$isMetadataContent))();\n                        const template = [...fragment.childNodes].join('');\n                        const html = F.stringRender(template, value, tag);\n                        const nodes = this.$document.$createNodeListFromHTML(html);\n\n                        if (options.logical) {\n                            for (const node of nodes.$$$('*')) {\n                                for (const attribute of Array.from(node.attributes)) {\n                                    if (attribute.value === options.logical) {\n                                        node.attributes.removeNamedItem(attribute.name);\n                                    }\n                                }\n                            }\n                        }\n                        elements.push(...nodes);\n                    }\n\n                    return elements;\n                };\n\n                const elements = core.call(this, vars, null);\n\n                if (options.insert) {\n                    const olds = renderedNodes.reset(this, () => elements) ?? [];\n                    olds.forEach(old => old.remove());\n                    this[options.insert](...elements);\n                }\n\n                return F.iterableToNodeList(elements);\n            },\n        },\n        [[Node.name, $NodeList.name]]: /** @lends Node.prototype */{\n            /**\n             * clone Node\n             *\n             * withEvent:\n             * - false: same as cloneNode(true)\n             * - true: deep clone with event handler\n             *\n             * @param {Boolean} [withEvent = false]\n             * @return {Node}\n             */\n            $clone(withEvent = false) {\n                if (!withEvent) {\n                    return this.cloneNode(true);\n                }\n\n                // clone self\n                const cloned = this.cloneNode(false);\n                for (const ev of this.$events(null, false, false)) {\n                    cloned.$on(ev.type + ev.namespaces.map(ns => `.${ns}`).join(), ev.selector, ev.listener, ev.options);\n                }\n\n                // recursion\n                for (const child of this.childNodes) {\n                    // @todo: What should we do with the $bag...?\n                    if (child instanceof Element) {\n                        cloned.appendChild(child.$clone(true));\n                    }\n                    else {\n                        cloned.appendChild(child.cloneNode(true));\n                    }\n                }\n\n                return cloned;\n            },\n            /**\n             * insert before this\n             *\n             * almost the same as before, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * {!!!insert here!!!}\n             * <this>\n             *     child\n             * </this>\n             */\n            $before(...nodes) {\n                this.before(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * insert first child\n             *\n             * almost the same as prepend, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * <this>\n             *     {!!!insert here!!!}\n             *     child\n             * </this>\n             */\n            $prepend(...nodes) {\n                this.prepend(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * insert specified child\n             *\n             * @param {Number|String|Node|Function} selectorFn\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * <this>\n             *     child\n             *     {!!!insert here!!!}\n             *     child\n             * </this>\n             */\n            $insert(selectorFn, ...nodes) {\n                this.$childElement(selectorFn)?.$before?.(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * insert last child\n             *\n             * almost the same as append, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * <this>\n             *     child\n             *     {!!!insert here!!!}\n             * </this>\n             */\n            $append(...nodes) {\n                this.append(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * insert after this\n             *\n             * almost the same as after, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             *\n             * @example\n             * <this>\n             *     child\n             * </this>\n             * {!!!insert here!!!}\n             */\n            $after(...nodes) {\n                this.after(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * replace this\n             *\n             * almost the same as replaceWith, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             */\n            $replace(...nodes) {\n                this.replaceWith(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * replace children\n             *\n             * exhange parameter of replaceChild, and variadic\n             * @see https://developer.mozilla.org/docs/Web/API/Node/replaceChild\n             * > The parameter order, new before old, is unusual\n             *\n             * @param {Node} oldChild\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             */\n            $replaceChild(oldChild, ...nodes) {\n                this.$insert(oldChild, ...nodes);\n                this.$childElement(oldChild)?.remove();\n                return this;\n            },\n            /**\n             * replace children\n             *\n             * almost the same as replaceChildren, however, accept NodeList\n             *\n             * @param {...String|Node|NodeList} [nodes=[]]\n             * @return {this}\n             */\n            $replaceChildren(...nodes) {\n                this.replaceChildren(...normalizeNodes(nodes));\n                return this;\n            },\n            /**\n             * wrap this element\n             *\n             * @param {Element} node\n             * @return {this}\n             *\n             * @example\n             * <div>\n             *   text\n             *   <span>span</span>\n             * </div>\n             *\n             * $('div').$wrap($('<section></section>'));\n             *\n             * <section>\n             *   <div>\n             *     text\n             *     <span>span</span>\n             *   </div>\n             * </section>\n             */\n            $wrap(node) {\n                this.parentNode.insertBefore(node, this);\n                node.appendChild(this);\n                return this;\n            },\n            /**\n             * unwrap parent\n             *\n             * @return {this}\n             *\n             * @example\n             * <section>\n             *   <div>\n             *     text\n             *     <span>span</span>\n             *   </div>\n             * </section>\n             *\n             * $('div').$unwrap();\n             *\n             * <div>\n             *   text\n             *   <span>span</span>\n             * </div>\n             */\n            $unwrap() {\n                this.parentNode.$unwrapChildren();\n                return this;\n            },\n            /**\n             * unwrap children\n             *\n             * @return {this}\n             *\n             * @example\n             * <section>\n             *   <div>\n             *     text\n             *     <span>span</span>\n             *   </div>\n             * </section>\n             *\n             * $('div').$unwrapChildren();\n             *\n             * <section>\n             *   text\n             *   <span>span</span>\n             * </section>\n             */\n            $unwrapChildren() {\n                this.replaceWith(...this.childNodes);\n                return this;\n            },\n        },\n    };\n}\n", "import {$NodeList, F, IntersectionObserver, Nullable, Promise, Timer, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function miscellaneous(kQuery) {\n    const interlockings = new WeakMap();\n    const documentChange = function (e) {\n        for (const [parent, selector] of interlockings.entries()) {\n            if (e.target.$matches(selector)) {\n                parent.$indeterminate = window.$query(selector).$filter('[type=checkbox]').checked;\n            }\n        }\n    };\n\n    let scrollIntoViewing = false;\n\n    return {\n        [[Window.name]]: /** @lends Window.prototype */{\n            /**\n             * open by objective windowFeature\n             *\n             * @param {Object} options\n             * @return {WindowProxy}\n             *\n             * @example\n             * window.$open({\n             *     url: 'http://example.jp',\n             *     left: 'auto',   // 'auto' means parent's center\n             *     top: 'auto',    // 'auto' means parent's center\n             *     width: 'auto',  // 'auto' means parent's half\n             *     height: 'auto', // 'auto' means parent's half\n             * });\n             */\n            $open(options) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // standard https://developer.mozilla.org/docs/Web/API/Window/open\n                    ...{\n                        // string\n                        url: undefined,\n                        // string\n                        target: undefined,\n                    },\n                    // windowFeatures https://developer.mozilla.org/docs/Web/API/Window/open#windowfeatures\n                    ...{\n                        // bool\n                        window: true,\n                        // int|string\n                        left: 'auto',\n                        // int|string\n                        top: 'auto',\n                        // int|string\n                        width: 'auto',\n                        // int|string\n                        height: 'auto',\n                        // bool\n                        noopener: undefined,\n                        // bool\n                        noreferrer: undefined,\n                    },\n                }, options);\n\n                if (options.width === 'auto') {\n                    options.width = this.outerWidth / 2;\n                }\n                if (options.height === 'auto') {\n                    options.height = this.outerHeight / 2;\n                }\n\n                if (options.left === 'auto' && options.width) {\n                    options.left = (this.outerWidth - options.width) / 2;\n                }\n                if (options.top === 'auto' && options.height) {\n                    options.top = (this.outerHeight - options.height) / 2;\n                }\n\n                if (options.window && options.left != null) {\n                    options.left += this.screenX;\n                }\n                if (options.window && options.top != null) {\n                    options.top += this.screenY;\n                }\n\n                const url = options.url;\n                const target = options.target;\n\n                F.objectWalkRecursive(options, function (v, k) {\n                    if (['url', 'target', 'window'].includes(k) || v === false) {\n                        return undefined;\n                    }\n                    return v;\n                });\n                const feature = F.objectJoin(options, ',');\n                kQuery.logger.debug(`windowFeature`, feature);\n\n                return this.open(url, target, feature);\n            },\n        },\n        [[Element.name, $NodeList.name]]: /** @lends Element.prototype */{\n            /**\n             * is metadata content\n             *\n             * @see https://html.spec.whatwg.org/multipage/dom.html#metadata-content\n             *\n             * @descriptor get\n             *\n             * @return {Boolean}\n             */\n            get $isMetadataContent() {\n                return ['base', 'link', 'meta', 'noscript', 'script', 'style', 'template', 'title'].includes(this.localName.toLowerCase());\n            },\n            /**\n             * get no content outerHTML\n             *\n             * @param {Boolean} [withClose=true]\n             * @return {String}\n             *\n             * @example\n             * document.$createElement('div', {a: 'A', b: 'B'}, 'child').$outerTag();\n             * // '<div a=\"A\" b=\"B\"></div>'\n             */\n            $outerTag(withClose = true) {\n                const name = this.localName;\n                const attrs = '' + this.$attrs;\n\n                let result = `<${name}${attrs ? ' ' + attrs : ''}>`;\n                if (withClose) {\n                    result += `</${name}>`;\n                }\n                return result;\n            },\n            /**\n             * mark matched text nodes\n             *\n             * @param {String|RegExp} word\n             * @param {String|Element} [wrapper]\n             * @param {String|Node|Function} [notSelectorFn]\n             * @return {this}\n             *\n             * @example\n             * <hgroup>\n             *   <h1>this is header</h1>\n             *   <p>this is subheader</p>\n             * </hgroup>\n             *\n             * $('hgroup').$markText('is');\n             *\n             * <hgroup>\n             *   <h1>th<mark>is</mark> <mark>is</mark> header</h1>\n             *   <p>th<mark>is</mark> <mark>is</mark> subheader</p>\n             * </hgroup>\n             */\n            $markText(word, wrapper, notSelectorFn) {\n                kQuery.logger.assertInstanceOf(word, String, RegExp)();\n                kQuery.logger.assertInstanceOf(wrapper, Nullable, String, Element)();\n\n                if (!(word instanceof RegExp)) {\n                    word = new RegExp(F.stringEscape(word, 'regex'));\n                }\n                if (!(wrapper instanceof Element)) {\n                    wrapper = this.$document.$createElement(wrapper ?? 'mark');\n                }\n\n                const core = (node) => {\n                    for (const child of node.children) {\n                        if (child.$isMetadataContent || (notSelectorFn != null && child.$matches(notSelectorFn)) || child.$outerTag(false) === wrapper.$outerTag(false)) {\n                            continue;\n                        }\n                        core(child);\n                    }\n                    for (const child of node.childNodes) {\n                        if (child instanceof CharacterData) {\n                            const matches = child.nodeValue.match(word);\n                            if (matches) {\n                                const after = child.splitText(matches.index);\n                                after.splitText(matches[0].length);\n                                after.$wrap(wrapper.$clone(true));\n                            }\n                        }\n                    }\n                    return node;\n                };\n\n                this.normalize();\n                return core(this);\n            },\n            /**\n             * asynchronous scrollIntoView\n             *\n             * @param {ScrollIntoViewOptions|Object} [options={}]\n             * @return {Promise<Boolean>}\n             */\n            async $scrollIntoView(options = {}) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // standard https://developer.mozilla.org/docs/Web/API/Element/scrollIntoView\n                    ...{\n                        // string: \"smooth\" | \"instant\" | \"auto\"\n                        behavior: undefined,\n                        // string: \"start\" | \"center\" | \"end\" | \"nearest\"\n                        block: undefined,\n                        // string: \"start\" | \"center\" | \"end\" | \"nearest\"\n                        inline: undefined,\n                    },\n                    // extends\n                    ...{\n                        // bool\n                        global: true,\n                        // number\n                        timeout: undefined,\n                        // number https://developer.mozilla.org/docs/Web/API/IntersectionObserver/thresholds\n                        threshold: undefined,\n                        // bool emulate https://developer.mozilla.org/docs/Web/API/Element/scrollIntoViewIfNeeded\n                        ifNeeded: false,\n                    },\n                }, options);\n\n                if (options.global && scrollIntoViewing) {\n                    return Promise.resolve(false);\n                }\n\n                return new Promise((resolve, reject) => {\n                    const observer = new IntersectionObserver((entry, last) => {\n                        if (!last && entry.isIntersecting && options.ifNeeded) {\n                            resolve(false);\n                            observer.unobserve(entry.target);\n                            return;\n                        }\n\n                        entry.target.scrollIntoView(options);\n                        scrollIntoViewing = true;\n\n                        if (entry.isIntersecting) {\n                            timeouter?.stop();\n                            observer.unobserve(entry.target);\n                            scrollIntoViewing = false;\n                            resolve(true);\n                        }\n                    }, {\n                        threshold: options.threshold ?? 0.0,\n                    });\n                    const timeouter = options.timeout ? new Timer() : null;\n                    timeouter?.addEventListener('alarm', (e) => {\n                        observer.unobserve(this);\n                        scrollIntoViewing = false;\n                        reject(this);\n                    });\n                    timeouter?.start(options.timeout);\n                    observer.observe(this);\n                });\n            },\n        },\n        [[HTMLInputElement.name, $NodeList.name]]: /** @lends HTMLInputElement.prototype */{\n            /**\n             * synchronous checked\n             *\n             * parent checked -> sync all children checked\n             * child checked -> sync parent checked/indeterminate\n             *\n             * @param {Object} [selector]\n             * @return {this}\n             */\n            $interlock(selector) {\n                kQuery.logger.assertInstanceOf(selector, Nullable, String)();\n\n                if (this.type !== 'checkbox') {\n                    return this;\n                }\n\n                // trigger mode\n                if (selector == null) {\n                    const selector = interlockings.get(this);\n                    if (selector == null) {\n                        throw new Error(this + ' is not have child selector');\n                    }\n\n                    this.$indeterminate = window.$query(selector).$filter('[type=checkbox]').checked;\n                }\n                // initialize mode\n                else {\n                    interlockings.set(this, selector);\n                    this.$indeterminate = window.$query(selector).$filter('[type=checkbox]').checked;\n\n                    ['change', '$change'].forEach(e => {\n                        this.$document.addEventListener(e, documentChange);\n                        this.addEventListener(e, (e) => {\n                            const parent = e.target;\n                            const children = window.$query(selector).$filter('[type=checkbox]');\n                            for (const child of children) {\n                                child.$value = parent.checked ? child.value : null;\n                            }\n                        });\n                    });\n                }\n                return this;\n            },\n        },\n        [[HTMLDialogElement.name, $NodeList.name]]: /** @lends HTMLDialogElement.prototype */{\n            /**\n             * asynchronous showModal\n             *\n             * return returnValue\n             *\n             * @param {Object} [options={}]\n             * @return {Promise<?String>}\n             *\n             * @example\n             * setTimeout(() => $('dialog').close('this is return value'), 100);\n             * await $('dialog').$showModal();\n             * // 'this is return value'\n             */\n            $showModal(options = {}) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    outside: false,\n                    escape: true,\n                }, options);\n\n                return new Promise((resolve, reject) => {\n                    const close = (e) => {\n                        e.target.removeEventListener('close', close);\n                        e.target.removeEventListener('cancel', cancel);\n                        e.target.removeEventListener('click', onOutside);\n                        e.target.removeEventListener('keydown', onEscape);\n                        resolve(e.target.returnValue);\n                    };\n                    const cancel = (e) => {\n                        e.target.removeEventListener('close', close);\n                        e.target.removeEventListener('cancel', cancel);\n                        e.target.removeEventListener('click', onOutside);\n                        e.target.removeEventListener('keydown', onEscape);\n                        resolve(null);\n                    };\n                    const onOutside = (e) => {\n                        if (!this.getBoundingClientRect().$contains(new DOMPointReadOnly(e.clientX, e.clientY))) {\n                            this.close(null);\n                            this.dispatchEvent(new Event('cancel', {\n                                bubbles: false,\n                                cancelable: true,\n                                composed: false,\n                            }));\n                        }\n                    };\n                    const onEscape = (e) => {\n                        if (e.code === 'Escape') {\n                            e.preventDefault();\n                        }\n                    };\n\n                    // returnValue is not reset\n                    this.returnValue = '';\n\n                    // showModal and close once event\n                    this.showModal();\n                    this.addEventListener('close', close, {once: true});\n                    this.addEventListener('cancel', cancel, {once: true});\n\n                    if (options.outside) {\n                        this.addEventListener('click', onOutside);\n                    }\n                    if (!options.escape) {\n                        this.addEventListener('keydown', onEscape);\n                    }\n                });\n            },\n        },\n        [[HTMLCollection.name, NodeList.name, FileList.name, DataTransferItemList.name/* and more *List */]]: /** @lends List.prototype */{\n            /**\n             * return element of XList's index\n             *\n             * @param {Number} index\n             * @return {any}\n             *\n             * @example\n             * $$('span').$at(-1); // return last node\n             */\n            $at(index) {\n                kQuery.logger.assertInstanceOf(index, Number)();\n\n                return Array.prototype.at.call(this, index);\n            },\n            /**\n             * map and Promise.all\n             *\n             * @param {Function} callback\n             * @return {Promise<any>}\n             */\n            async $asyncMap(callback) {\n                kQuery.logger.assertInstanceOf(callback, Function)();\n\n                return Promise.all(F.objectToEntries(this).map(([i, e]) => callback(e, i, this)));\n            },\n        },\n    };\n}\n", "import {$FileList, $NodeList, F, Promise, WeakMap} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function networks(kQuery) {\n    const eventSources = {};\n\n    return {\n        [[Node.name, $NodeList.name]]: /** @lends Node.prototype */{\n            /**\n             * listen SSE event\n             *\n             * - same url connection is shared\n             *   - when all dom were deleted, close connection\n             * - url's hash means eventName\n             *\n             * @param {URL|String} url\n             * @param {Function} listener\n             * @param {Object} [options={}]\n             * @return {this}\n             */\n            $listen(url, listener, options = {}) {\n                options = Object.assign({\n                    credentials: false,\n                }, options);\n\n                url = new URL(url, this.baseURI);\n                const eventName = url.hash.substring(1) || 'message';\n                url.hash = '';\n\n                const eventSource = eventSources[url] ??= new class extends EventSource {\n                    #$nodeListeners;\n\n                    constructor(url, options) {\n                        super(url, options);\n\n                        kQuery.logger.debug(`SSE open ${url}#`);\n                        this.#$nodeListeners = new WeakMap();\n                    }\n\n                    $listen(node, name, listener) {\n                        const names = [...this.#$nodeListeners.entries()].flatMap(([, namedListeners]) => Object.keys(namedListeners));\n                        if (!names.includes(name)) {\n                            kQuery.logger.debug(`SSE listen ${this.url}#${name}`);\n                            this.addEventListener(name, e => {\n                                if (this.#$nodeListeners.size === 0) {\n                                    delete eventSources[this.url];\n                                    this.close();\n                                    kQuery.logger.debug(`SSE close ${this.url}`);\n                                }\n                                for (const [node, namedListeners] of this.#$nodeListeners.entries()) {\n                                    for (const listener of namedListeners[name] ?? []) {\n                                        listener.call(node, e);\n                                    }\n                                }\n                            });\n                        }\n\n                        const namedListeners = this.#$nodeListeners.getOrSet(node, () => ({}));\n                        namedListeners[name] ??= [];\n                        namedListeners[name].push(listener);\n                    }\n                }(url, {\n                    withCredentials: options.credentials,\n                });\n                if (eventSource.withCredentials !== !!options.credentials) {\n                    kQuery.logger.error(`SSE url(credentials) is difference`);\n                }\n\n                eventSource.$listen(this, eventName, listener);\n\n                return this;\n            },\n        },\n        [[HTMLAnchorElement.name, $NodeList.name]]: /** @lends HTMLAnchorElement.prototype */{\n            /**\n             * submit based on a href\n             *\n             * - specified form: submit that form, this behave submitter\n             * - this has download: download response\n             *\n             * @param {Object} [options={}]\n             * @return {this|Promise<Response>}\n             */\n            $submit(options = {}) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // false: navigation, true: fetch\n                    async: false,\n                    // HTMLFormElement: connect form\n                    form: undefined,\n                    // string: method\n                    method: undefined,\n                    // string: enctype\n                    enctype: 'application/x-www-form-urlencoded',\n                    // bool\n                    novalidate: false,\n                    // Object: additional data\n                    data: {},\n                }, options);\n                kQuery.logger.assertInstanceOf(options.data, Object, FormData)();\n\n                // url & parameters\n                const url = this.$URL;\n                const data = new FormData();\n                data.$appendFromEntries(url.searchParams);\n                data.$appendFromEntries(options.data);\n                url.search = '';\n\n                // build form\n                const form = options.form ?? this.$document.$createElement('form', {\n                    action: url,\n                    method: options.method ?? 'post',\n                    enctype: options.enctype,\n                    target: this.target,\n                    hidden: true,\n                });\n                let submitter;\n                if (options.form) {\n                    submitter = this.$document.$createElement('button', {\n                        type: 'submit',\n                        formaction: url,\n                        formtarget: this.target,\n                        formmethod: options.method ?? form.getAttribute('method') ?? 'post',\n                        formenctype: options.enctype,\n                        formnovalidate: options.novalidate,\n                    });\n                    form.append(submitter);\n                }\n                else {\n                    for (const [name, value] of data) {\n                        const hidden = this.$document.$createElement('input', {type: 'hidden'});\n                        hidden.name = name;\n                        hidden.value = value;\n                        form.append(hidden);\n                    }\n                }\n\n                // async or download mode\n                if (options.async || this.download) {\n                    const formoptions = {};\n                    if (submitter) {\n                        formoptions.data = data;\n                        formoptions.submitter = submitter;\n                    }\n                    try {\n                        const response = form.$request(formoptions);\n                        submitter?.remove(); // remove as soon as possible\n                        if (!this.download) {\n                            return response;\n                        }\n                        if (this.download && !options.raw) {\n                            return response.then((response) => {\n                                if (!response.ok) {\n                                    throw new response;\n                                }\n                                response.blob().then((blob) => {\n                                    const url = URL.createObjectURL(blob);\n                                    const newa = this.$document.$createElement('a', {\n                                        href: url,\n                                        download: this.download,\n                                        hidden: true,\n                                    });\n                                    try {\n                                        this.$document.body.appendChild(newa);\n                                        newa.click();\n                                    }\n                                    finally {\n                                        this.$document.body.removeChild(newa);\n                                        setTimeout(() => URL.revokeObjectURL(url), 1000);\n                                    }\n                                });\n                            });\n                        }\n                        return response;\n                    }\n                    finally {\n                        submitter?.remove();\n                    }\n                }\n\n                // submit mode\n                if (submitter) {\n                    form.requestSubmit(submitter);\n                    submitter.remove();\n                }\n                else {\n                    this.$document.body.append(form);\n                    form.submit();\n                    form.remove();\n                }\n                return this;\n            },\n        },\n        [[HTMLFormElement.name, $NodeList.name]]: /** @lends HTMLFormElement.prototype */{\n            /**\n             * request based on form value\n             *\n             * @param {RequestInit|{data: Object<String, String>}} [options={}]\n             * @return {Promise<Response>}\n             */\n            async $request(options = {}) {\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // ...RequestInit\n                    ...{},\n                    // extends\n                    ...{\n                        // string\n                        url: undefined,\n                        // string\n                        method: undefined,\n                        // string\n                        enctype: undefined,\n                        // bool\n                        novalidate: undefined,\n                        // HTMLElement\n                        submitter: undefined,\n                        // Object: additional data\n                        data: {},\n                        // string | Function\n                        fileConverter: undefined,\n                        // bool\n                        ok: false,\n                        // number\n                        timeout: 0,\n                    },\n                }, options);\n                if (!(options.headers instanceof Headers)) {\n                    options.headers = new Headers(options.headers ?? {});\n                }\n                kQuery.logger.assertInstanceOf(options.headers, Headers)();\n                kQuery.logger.assertInstanceOf(options.data, Object, FormData)();\n\n                const novalidate = options.novalidate ?? (options.submitter?.formNoValidate || this.noValidate || false);\n                if (!novalidate && !this.reportValidity()) {\n                    throw new Error(`Invalid form`);\n                }\n\n                // notice: form.enctype/action/method return normalized value, so use getAttribute\n                // priority: options value -> submitter attr -> form attr\n                const action = options.url ?? options.submitter?.getAttribute('formaction') ?? this.getAttribute('action') ?? '';\n                const method = options.method ?? options.submitter?.getAttribute('formmethod') ?? this.getAttribute('method') ?? 'GET';\n                const enctype = options.enctype ?? options.headers.get('content-type') ?? options.submitter?.getAttribute('formenctype') ?? this.getAttribute('enctype') ?? 'application/x-www-form-urlencoded';\n\n                // normalize\n                options.method = method.toUpperCase();\n                options.headers.set('content-type', enctype);\n\n                // url & parameters\n                const url = new URL(action, this.baseURI);\n                const formData = new FormData(this, options.submitter);\n                for (const [name, value] of F.objectToEntries(options.data)) {\n                    formData.append(name, value);\n                }\n\n                // GET application/x-www-form-urlencoded: merge URL+FormData\n                // POST application/x-www-form-urlencoded: unset File\n                // POST multipart/form-data: standard behavior\n                if (options.method === 'GET') {\n                    for (const [name, value] of formData.$toSearchParams()) {\n                        url.searchParams.append(name, value);\n                    }\n                }\n                else {\n                    if (enctype.startsWith('application/x-www-form-urlencoded')) {\n                        options.headers.delete('content-type'); // for encoding\n                        options.body = formData.$toSearchParams();\n                    }\n                    else if (enctype.startsWith('multipart/form-data')) {\n                        options.headers.delete('content-type'); // for boundary\n                        options.body = formData;\n                    }\n                    else if (enctype.startsWith('application/json')) {\n                        options.body = await formData.$json(options.fileConverter);\n                    }\n                    else {\n                        throw new Error(`Unknown enctype(${enctype})`);\n                    }\n                }\n\n                return await F.fetch(url, options);\n            },\n        },\n        [[Element.name, $NodeList.name]]: /** @lends Element.prototype */{\n            /**\n             * load server html\n             *\n             * @param {String|RequestInit|{data:Object<String, String>}} urlOrOptions\n             * @param {RequestInit|{data:Object<String, any>}} [options={}]\n             * @return {Promise<NodeList>}\n             */\n            async $load(urlOrOptions, options = {}) {\n                if (F.anyIsStringable(urlOrOptions)) {\n                    options.url = urlOrOptions;\n                }\n                else {\n                    options = urlOrOptions;\n                }\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    // ...RequestInit\n                    ...{},\n                    // extends\n                    ...{\n                        // string\n                        url: undefined,\n                        // string\n                        method: undefined,\n                        // Object: additional data\n                        data: {},\n                        // bool\n                        ok: false,\n                        // number\n                        timeout: 0,\n                    },\n                }, options);\n                if (!(options.headers instanceof Headers)) {\n                    options.headers = new Headers(options.headers ?? {});\n                }\n                kQuery.logger.assertInstanceOf(options.url, String)();\n                kQuery.logger.assertInstanceOf(options.headers, Headers)();\n                kQuery.logger.assertInstanceOf(options.data, Object, FormData)();\n\n                // url & parameters\n                const parts = options.url.split(' ');\n                const url = new URL(parts.shift(), this.baseURI);\n                const selector = parts.join(' ');\n                const method = (options.method ?? 'GET').toUpperCase();\n                const dataEntries = F.objectToEntries(options.data).map(([k, v]) => [k, v instanceof Function ? v(this) : v]);\n\n                if (method === 'GET') {\n                    for (let [name, value] of dataEntries) {\n                        url.searchParams.append(name, value);\n                    }\n                }\n                else {\n                    options.headers.delete('content-type'); // for encoding\n                    options.body = new URLSearchParams(dataEntries);\n                }\n\n                const response = await F.fetch(url, options);\n                let nodes = this.$document.$createNodeListFromHTML(await response.text());\n                if (selector) {\n                    nodes = nodes.$$(selector);\n                }\n                this.$replaceChildren(nodes);\n                return nodes;\n            },\n        },\n        [[Blob.name, $FileList.name]]: /** @lends Blob.prototype */{\n            /**\n             * upload file\n             *\n             * @param {URL|String|RequestInit} urlOrOptions\n             * @param {RequestInit} [options={}]\n             * @return {Promise<Response>}\n             */\n            async $upload(urlOrOptions, options = {}) {\n                let url;\n                if (F.anyIsStringable(urlOrOptions)) {\n                    url = urlOrOptions;\n                }\n                else {\n                    url = options.url;\n                }\n                kQuery.logger.assertInstanceOf(options, Object)();\n                options = Object.assign({\n                    method: 'PUT',\n                    timeout: 0,\n                    ok: false,\n                    headers: {},\n                    credentials: 'same-origin',\n                    progress: () => null,\n                }, options);\n\n                const xhr = new XMLHttpRequest();\n                xhr.open(options.method.toUpperCase(), url, true);\n                xhr.timeout = options.timeout;\n                xhr.withCredentials = options.credentials !== 'omit';\n                xhr.responseType = 'arraybuffer';\n\n                for (const [name, value] of F.objectToEntries(options.headers)) {\n                    xhr.setRequestHeader(name, value);\n                }\n\n                const promise = new Promise((resolve, reject) => {\n                    const newResponse = function () {\n                        const response = new Response(xhr.response, {\n                            status: xhr.status,\n                            statusText: xhr.statusText,\n                            headers: xhr.getAllResponseHeaders().split(/\\r\\n?/).reduce(function (headers, line) {\n                                if (line.trim()) {\n                                    const [name, value] = line.split(':');\n                                    headers.append(name.trim(), value.trim());\n                                }\n                                return headers;\n                            }, new Headers()),\n                        });\n                        return Object.defineProperties(response, {\n                            url: {\n                                get() {return xhr.responseURL;},\n                            },\n                        });\n                    };\n                    xhr.addEventListener('readystatechange', function () {\n                        if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n                            if (!options.ok && !(200 <= xhr.status && xhr.status < 300)) {\n                                reject(new Error(`${xhr.status}: ${xhr.statusText}`, {\n                                    cause: newResponse(),\n                                }));\n                            }\n                            // if emulate fetch, should return Response at this timing\n                            // but ReadableByteStream is limited availability yet\n                        }\n                    });\n                    xhr.addEventListener('load', function () {\n                        resolve(newResponse());\n                    });\n                    xhr.addEventListener('error', function (e) {\n                        reject(e);\n                    });\n                    xhr.addEventListener('abort', function (e) {\n                        reject(e);\n                    });\n                    xhr.addEventListener('timeout', function (e) {\n                        reject(e);\n                    });\n                    xhr.upload.addEventListener('progress', function (e) {\n                        options.progress(e);\n                    });\n                });\n\n                if (options.method.toUpperCase() === 'POST') {\n                    const formData = new FormData();\n                    formData.append(options.name ?? 'tmp', this);\n                    xhr.send(formData);\n                }\n                else {\n                    xhr.send(this);\n                }\n\n                return promise;\n            },\n        },\n    };\n}\n", "import {$NodeList, F, Nullable} from '../API.js';\n\n/**\n * @param {KQuery} kQuery\n *\n * @ignore\n */\nexport function traversing(kQuery) {\n    const nodeGenerateSiblings = function* (node, selectorFn, flow) {\n        kQuery.logger.assertInstanceOf(node, Node)();\n\n        for (let sibling = node[flow]; sibling; sibling = sibling[flow]) {\n            if (selectorFn == null || sibling.$matches(selectorFn)) {\n                yield sibling;\n            }\n        }\n    };\n\n    return {\n        [[Document.name, DocumentFragment.name, Element.name]]: /** @lends DocumentLikeElement.prototype */{\n            /**\n             * functional querySelector\n             *\n             * @param {String|Function} selectorFn\n             * @return {?Element}\n             */\n            $(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                if (typeof (selectorFn) === 'function') {\n                    return Array.prototype.find.call(this.$$('*'), selectorFn) ?? null;\n                }\n                return this.querySelector(selectorFn);\n            },\n            /**\n             * functional querySelectorAll\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             */\n            $$(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                if (typeof (selectorFn) === 'function') {\n                    return F.iterableToNodeList([...this.$$('*')].filter(selectorFn));\n                }\n                return this.querySelectorAll(selectorFn);\n            },\n            /**\n             * functional querySelectorAll with self\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             */\n            $$$(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                const self = this.$matches(selectorFn) ? [this] : [];\n\n                // avoid setPrototypeOf NodeList -> Array -> NodeList -> Array -> NodeList\n                // return F.iterableToNodeList([...self, ...this.$$(selectorFn)]);\n                if (typeof (selectorFn) === 'function') {\n                    return F.iterableToNodeList([...self, ...[...this.$$('*')].filter(selectorFn)]);\n                }\n\n                return F.iterableToNodeList([...self, ...this.$$(selectorFn)]);\n            },\n            /**\n             * functional/queryable contains\n             *\n             * @param {String|Node|Function} selectorFn\n             * @return {Boolean}\n             */\n            $contains(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Node, Function)();\n\n                if (selectorFn instanceof Node) {\n                    return this.contains(selectorFn);\n                }\n                // for performance(length > 0 look for it until the end)\n                if (typeof (selectorFn) === 'string') {\n                    return !!(this.matches(selectorFn) || this.querySelector(selectorFn));\n                }\n                return this.$$$(selectorFn).length > 0;\n            },\n            /**\n             * functional matches\n             *\n             * @param {String|Node|Function} selectorFn\n             * @return {Boolean}\n             */\n            $matches(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Node, Function)();\n\n                if (typeof (selectorFn) === 'function') {\n                    return !!selectorFn.call(this, this);\n                }\n                if (selectorFn instanceof Node) {\n                    return this === selectorFn;\n                }\n                return this.matches(selectorFn);\n            },\n        },\n        [[NodeList.name]]: /** @lends NodeList.prototype */{\n            /**\n             * functional querySelector\n             *\n             * return first element from tree, not per NodeList\n             *\n             * @param {String|Function} selectorFn\n             * @return {?Element}\n             *\n             * @example\n             * <div>\n             *     <span>1</span>\n             *     <span>2</span>\n             * </div>\n             * <div>\n             *     <span>3</span>\n             *     <span>4</span>\n             * </div>\n             *\n             * $$('div').$('span');\n             * // <span>1</span>\n             */\n            $(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                for (const node of this) {\n                    const result = node.$?.(selectorFn);\n                    if (result) {\n                        return result;\n                    }\n                }\n                return null;\n            },\n            /**\n             * functional querySelectorAll\n             *\n             * return matched elements from tree, not per NodeList\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             *\n             * @example\n             * <div>\n             *     <span>1</span>\n             *     <span>2</span>\n             * </div>\n             * <div>\n             *     <span>3</span>\n             *     <span>4</span>\n             * </div>\n             *\n             * $$('div').$$('span');\n             * // [<span>1</span>, <span>2</span>, <span>3</span>, <span>4</span>]\n             */\n            $$(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                return F.iterableToNodeList(new Set([...this].flatMap(node => [...node.$$?.(selectorFn) ?? []])));\n            },\n            /**\n             * functional querySelectorAll with self\n             *\n             * return matched elements from self and tree, not per NodeList\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             *\n             * @example\n             * <div>\n             *     <span>1</span>\n             *     <span>2</span>\n             * </div>\n             * <div>\n             *     <span>3</span>\n             *     <span>4</span>\n             * </div>\n             *\n             * $$('div').$$$('div,span');\n             * // [<div></div>, <span>1</span>, <span>2</span>, <div></div>, <span>3</span>, <span>4</span>]\n             */\n            $$$(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                return F.iterableToNodeList(new Set([...this].flatMap(node => [...node.$$$?.(selectorFn) ?? []])));\n            },\n            /**\n             * functional/queryable contains\n             *\n             * not per NodeList\n             *\n             * @param {String|Element|Function} selectorFn\n             * @return {Boolean}\n             */\n            $contains(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Element, Function)();\n\n                return !!Array.prototype.find.call(this, node => node.$contains?.(selectorFn));\n            },\n            /**\n             * return first matched element from list\n             *\n             * not per NodeList\n             *\n             * @param {String|Element|Function} selectorFn\n             * @return {?Element}\n             */\n            $matches(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Element, Function)();\n\n                return Array.prototype.find.call(this, node => node.$matches?.(selectorFn));\n            },\n            /**\n             * get element index\n             *\n             * @param {String|Node|Function} selectorFn\n             * @return {?Number}\n             */\n            $index(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Node, Function)();\n\n                const index = Array.prototype.findIndex.call(this, node => (node.$matches?.(selectorFn) ?? false));\n                if (index === -1) {\n                    return null;\n                }\n                return index;\n            },\n            /**\n             * filter matches elements\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             */\n            $filter(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                return F.iterableToNodeList([...this].filter(node => (node.$matches?.(selectorFn) ?? false)));\n            },\n            /**\n             * filter !matches elements\n             *\n             * @param {String|Function} selectorFn\n             * @return {NodeList}\n             */\n            $except(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Function)();\n\n                return F.iterableToNodeList([...this].filter(node => !(node.$matches?.(selectorFn) ?? true)));\n            },\n            /**\n             * slice elements\n             *\n             * @param {Number|String|Node|Function} [start]\n             * @param {Number|String|Node|Function} [end]\n             * @return {NodeList}\n             */\n            $slice(start, end) {\n                kQuery.logger.assertInstanceOf(start, Nullable, Number, String, Node, Function)();\n                kQuery.logger.assertInstanceOf(end, Nullable, Number, String, Node, Function)();\n\n                if (start != null && typeof (start) !== 'number') {\n                    start = this.$index(start) ?? undefined;\n                }\n                if (end != null && typeof (end) !== 'number') {\n                    end = this.$index(end) ?? undefined;\n                }\n                return F.iterableToNodeList(Array.prototype.slice.call(this, start, end));\n            },\n        },\n        [[Node.name, $NodeList.name]]: /** @lends Node.prototype */{\n            /**\n             * alias to ownerDocument.defaultView or global Window\n             *\n             * @descriptor get\n             *\n             * @return {Window}\n             */\n            get $window() {\n                return this.ownerDocument?.defaultView ?? window;\n            },\n            /**\n             * alias to ownerDocument or global Document\n             *\n             * @descriptor get\n             *\n             * @return {Document}\n             */\n            get $document() {\n                return this.ownerDocument ?? window.document;\n            },\n            /**\n             * get all textnodes\n             *\n             * @param {(Number|String)[]} selector\n             * @return {NodeList}\n             */\n            $textNodes(selector = [Node.TEXT_NODE, Node.COMMENT_NODE, Node.CDATA_SECTION_NODE]) {\n                kQuery.logger.assertElementsOf(selector, [Node.TEXT_NODE, Node.COMMENT_NODE, Node.CDATA_SECTION_NODE, 'metadata'])();\n\n                const texts = [];\n                for (const child of this.childNodes) {\n                    if (child instanceof CharacterData) {\n                        if (selector.includes(child.nodeType)) {\n                            texts.push(child);\n                        }\n                    }\n                    else {\n                        if (selector.includes('metadata') || !child.$isMetadataContent) {\n                            texts.push(...child.$textNodes(selector));\n                        }\n                    }\n                }\n                return F.iterableToNodeList(texts);\n            },\n            /**\n             * functional closest\n             *\n             * @param {String|Node|Function} selectorFn\n             * @return {?Element}\n             */\n            $closest(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, String, Element, Function)();\n\n                if (typeof (selectorFn) === 'string') {\n                    return this.closest(selectorFn);\n                }\n\n                for (let parent = this; parent != null; parent = parent.parentElement) {\n                    if (parent.$matches(selectorFn)) {\n                        return parent;\n                    }\n                }\n                return null;\n            },\n            /**\n             * get matched parent elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $parents(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                const parents = [];\n                for (let parent = this.parentElement; parent != null; parent = parent.parentElement) {\n                    if (selectorFn == null || parent.$matches(selectorFn)) {\n                        parents.push(parent);\n                    }\n                }\n                return F.iterableToNodeList(parents);\n            },\n            /**\n             * get first matched child element\n             *\n             * @param {Number|String|Node|Function} [selectorFn]\n             * @return {?Element}\n             */\n            $childElement(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, Number, String, Element, Function)();\n\n                if (typeof (selectorFn) === 'number') {\n                    return this.children.$at(selectorFn);\n                }\n                for (const child of this.children) {\n                    if (selectorFn == null || child.$matches(selectorFn)) {\n                        return child;\n                    }\n                }\n                return null;\n            },\n            /**\n             * get matched child elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $childElements(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                const children = F.iterableToNodeList(this.children);\n                if (selectorFn == null) {\n                    return children;\n                }\n                return children.$filter(selectorFn);\n            },\n            /**\n             * get first matched previous element\n             *\n             * this isn't jQuery like, search all previous elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {Element}\n             */\n            $prevElement(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                return nodeGenerateSiblings(this, selectorFn, 'previousElementSibling').next().value ?? null;\n            },\n            /**\n             * get matched previous elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $prevElements(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                return F.iterableToNodeList([...nodeGenerateSiblings(this, selectorFn, 'previousElementSibling')].reverse());\n            },\n            /**\n             * get first matched next element\n             *\n             * this isn't jQuery like, search all next elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {Element}\n             */\n            $nextElement(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                return nodeGenerateSiblings(this, selectorFn, 'nextElementSibling').next().value ?? null;\n            },\n            /**\n             * get matched next elements\n             *\n             * @param {String|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $nextElements(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Function)();\n\n                return F.iterableToNodeList(nodeGenerateSiblings(this, selectorFn, 'nextElementSibling'));\n            },\n            /**\n             * get matched sibling elements\n             *\n             * @param {String|Node|Function} [selectorFn]\n             * @return {NodeList}\n             */\n            $siblingElements(selectorFn) {\n                kQuery.logger.assertInstanceOf(selectorFn, Nullable, String, Node, Function)();\n\n                return F.iterableToNodeList([...this.parentNode.children].filter((child) => child !== this && (selectorFn == null || child.$matches?.(selectorFn))));\n            },\n        },\n        [[HTMLInputElement.name, $NodeList.name]]: /** @lends HTMLInputElement.prototype */{\n            /**\n             * get belonging RadioNodeList\n             *\n             * @return {?RadioNodeList}\n             */\n            get $radioNodeList() {\n                if (this.type !== 'radio') {\n                    return undefined;\n                }\n                if (!this.form) {\n                    return undefined;\n                }\n\n                // When there is only one radio in the form, form.elements does not return RadioNodeList\n\n                const form = this.form;\n                const name = this.name;\n\n                const nodelist = form.elements[name];\n                if (nodelist instanceof RadioNodeList) {\n                    return nodelist;\n                }\n\n                const pseudo = this.$document.$createElement('input', {\n                    type: 'radio',\n                    name: name,\n                    hidden: true,\n                });\n\n                this.insertAdjacentElement('afterend', pseudo);\n                try {\n                    return form.elements[name];\n                }\n                finally {\n                    pseudo.remove();\n                }\n            },\n        },\n    };\n}\n", "/**!\n * kQuery\n *\n * @file\n * @license MIT\n * @copyright ryunosuke\n * @ignore\n */\nimport attribute from './src/events/attribute.js';\nimport child from './src/events/child.js';\nimport cookie from './src/events/cookie.js';\nimport disable from './src/events/disable.js';\nimport flick from './src/events/flick.js';\nimport intersect from './src/events/intersect.js';\nimport resize from './src/events/resize.js';\nimport swipe from './src/events/swipe.js';\nimport visible from './src/events/visible.js';\nimport {KQuery} from './src/KQuery.js';\nimport {autoproperties} from './src/plugins/@autoproperties.js';\nimport {events} from './src/plugins/@events.js';\nimport {attributes} from './src/plugins/attributes.js';\nimport {data} from './src/plugins/data.js';\nimport {dimensions} from './src/plugins/dimensions.js';\nimport {effects} from './src/plugins/effects.js';\nimport {forms} from './src/plugins/forms.js';\nimport {manipulation} from './src/plugins/manipulation.js';\nimport {miscellaneous} from './src/plugins/miscellaneous.js';\nimport {networks} from './src/plugins/networks.js';\nimport {traversing} from './src/plugins/traversing.js';\n\n// documentation.js\n/**\n * @typedef {EventTarget} EventTarget\n */\n/**\n * @typedef {Window} Window\n */\n/**\n * @typedef {Document} Document\n */\n/**\n * @typedef {Document|DocumentFragment|Element} DocumentLikeElement\n */\n/**\n * @typedef {Node} Node\n */\n/**\n * @typedef {Element} Element\n */\n/**\n * @typedef {HTMLElement} HTMLElement\n */\n/**\n * @typedef {HTMLTemplateElement} HTMLTemplateElement\n */\n/**\n * @typedef {HTMLStyleElement|HTMLLinkElement} HTMLStylableElement\n */\n/**\n * @typedef {HTMLScriptElement} HTMLScriptElement\n */\n/**\n * @typedef {HTMLAnchorElement} HTMLAnchorElement\n */\n/**\n * @typedef {HTMLImageElement} HTMLImageElement\n */\n/**\n * @typedef {HTMLDialogElement} HTMLDialogElement\n */\n/**\n * @typedef {HTMLFormElement} HTMLFormElement\n */\n/**\n * @typedef {HTMLInputElement|HTMLTextAreaElement|HTMLSelectElement} HTMLInputLikeElement\n */\n/**\n * @typedef {HTMLInputElement|RadioNodeList} HTMLInputCheckableElement\n */\n/**\n * @typedef {HTMLInputElement} HTMLInputElement\n */\n/**\n * @typedef {HTMLSelectElement|HTMLDataListElement} HTMLOptionableElement\n */\n/**\n * @typedef {RadioNodeList} RadioNodeList\n */\n/**\n * @typedef {FormData} FormData\n */\n/**\n * @typedef {Blob} Blob\n */\n/**\n * @typedef {DOMRectReadOnly} DOMRectReadOnly\n */\n/**\n * @typedef {CSSStyleRule} CSSStyleRule\n */\n/**\n * @typedef {NodeList} NodeList\n */\n/**\n * @typedef {FileList|NodeList|DataTransferItemList} List\n */\n\nconst instance = new KQuery(import.meta ?? document.currentScript);\n\ninstance.logger.time('register Plugins');\ninstance.extends(autoproperties);\ninstance.extends(events);\ninstance.extends(attributes);\ninstance.extends(data);\ninstance.extends(forms);\ninstance.extends(traversing);\ninstance.extends(manipulation);\ninstance.extends(dimensions);\ninstance.extends(effects);\ninstance.extends(networks);\ninstance.extends(miscellaneous);\ninstance.logger.timeEnd('register Plugins');\n\nObject.assign(instance.customEvents, {attribute, child, cookie, disable, flick, intersect, resize, swipe, visible});\n\nexport default instance;\n"],
  "mappings": "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",
  "names": ["Promise", "Proxy", "Nullable", "values", "data", "data2", "v", "Promise", "Proxy", "resolve2", "reject2", "instance", "target", "options", "Proxy", "name", "data", "priority", "Proxy", "fullurl", "Promise", "Promise", "current", "data", "options", "nodes", "attributes", "styleSheet", "elements", "Promise", "selector", "e", "url", "options", "listener", "namedListeners", "node", "data", "response", "Promise"]
}
